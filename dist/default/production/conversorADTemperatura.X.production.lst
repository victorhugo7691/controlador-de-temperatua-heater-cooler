

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 30 11:52:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4550 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     _ADRESL	set	4035
    92  0000                     _ADRESH	set	4036
    93  0000                     _PORTC	set	3970
    94  0000                     _TRISC	set	3988
    95  0000                     _TRISE	set	3990
    96  0000                     _TRISD	set	3989
    97  0000                     _TMR0L	set	4054
    98  0000                     _INTCONbits	set	4082
    99  0000                     _INTCON3bits	set	4080
   100  0000                     _ADCON0bits	set	4034
   101  0000                     _ADCON0	set	4034
   102  0000                     _ADCON2bits	set	4032
   103  0000                     _ADCON1	set	4033
   104  0000                     _TRISA	set	3986
   105  0000                     _PORTD	set	3971
   106  0000                     _PORTEbits	set	3972
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	callstack 0
   111  000800  00                 	db	0
   112  000801                     STR_3:
   113  000801  20                 	db	32
   114  000802  67                 	db	103	;'g'
   115  000803  72                 	db	114	;'r'
   116  000804  61                 	db	97	;'a'
   117  000805  75                 	db	117	;'u'
   118  000806  73                 	db	115	;'s'
   119  000807  20                 	db	32
   120  000808  43                 	db	67	;'C'
   121  000809  65                 	db	101	;'e'
   122  00080A  6C                 	db	108	;'l'
   123  00080B  73                 	db	115	;'s'
   124  00080C  69                 	db	105	;'i'
   125  00080D  75                 	db	117	;'u'
   126  00080E  73                 	db	115	;'s'
   127  00080F  00                 	db	0
   128  000810                     STR_1:
   129  000810  74                 	db	116	;'t'
   130  000811  65                 	db	101	;'e'
   131  000812  6D                 	db	109	;'m'
   132  000813  70                 	db	112	;'p'
   133  000814  65                 	db	101	;'e'
   134  000815  72                 	db	114	;'r'
   135  000816  61                 	db	97	;'a'
   136  000817  74                 	db	116	;'t'
   137  000818  75                 	db	117	;'u'
   138  000819  72                 	db	114	;'r'
   139  00081A  61                 	db	97	;'a'
   140  00081B  00                 	db	0
   141  00081C                     STR_2:
   142  00081C  25                 	db	37
   143  00081D  33                 	db	51	;'3'
   144  00081E  2E                 	db	46
   145  00081F  32                 	db	50	;'2'
   146  000820  66                 	db	102	;'f'
   147  000821  00                 	db	0
   148  000822                     STR_4:
   149  000822  49                 	db	73	;'I'
   150  000823  4E                 	db	78	;'N'
   151  000824  46                 	db	70	;'F'
   152  000825  00                 	db	0
   153  000826                     STR_8:
   154  000826  4E                 	db	78	;'N'
   155  000827  41                 	db	65	;'A'
   156  000828  4E                 	db	78	;'N'
   157  000829  00                 	db	0
   158  00082A                     STR_5:
   159  00082A  69                 	db	105	;'i'
   160  00082B  6E                 	db	110	;'n'
   161  00082C  66                 	db	102	;'f'
   162  00082D  00                 	db	0
   163  00082E                     STR_9:
   164  00082E  6E                 	db	110	;'n'
   165  00082F  61                 	db	97	;'a'
   166  000830  6E                 	db	110	;'n'
   167  000831  00                 	db	0
   168  000832                     STR_12:
   169  000832  6C                 	db	108	;'l'
   170  000833  66                 	db	102	;'f'
   171  000834  00                 	db	0
   172  000835  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177  003A52                     __pcinit:
   178                           	callstack 0
   179  003A52                     start_initialization:
   180                           	callstack 0
   181  003A52                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Clear objects allocated to BANK1 (80 bytes)
   185  003A52  EE01  F000         	lfsr	0,__pbssBANK1
   186  003A56  0E50               	movlw	80
   187  003A58                     clear_0:
   188  003A58  6AEE               	clrf	postinc0,c
   189  003A5A  06E8               	decf	wreg,f,c
   190  003A5C  E1FD               	bnz	clear_0
   191                           
   192                           ; Clear objects allocated to BANK0 (26 bytes)
   193  003A5E  EE00  F0D4         	lfsr	0,__pbssBANK0
   194  003A62  0E1A               	movlw	26
   195  003A64                     clear_1:
   196  003A64  6AEE               	clrf	postinc0,c
   197  003A66  06E8               	decf	wreg,f,c
   198  003A68  E1FD               	bnz	clear_1
   199                           
   200                           ; Clear objects allocated to COMRAM (10 bytes)
   201  003A6A  EE00  F048         	lfsr	0,__pbssCOMRAM
   202  003A6E  0E0A               	movlw	10
   203  003A70                     clear_2:
   204  003A70  6AEE               	clrf	postinc0,c
   205  003A72  06E8               	decf	wreg,f,c
   206  003A74  E1FD               	bnz	clear_2
   207  003A76                     end_of_initialization:
   208                           	callstack 0
   209  003A76                     __end_of__initialization:
   210                           	callstack 0
   211  003A76  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   212  003A78  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   213  003A7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   214  003A7C  6EF8               	movwf	tblptru,c
   215  003A7E  0100               	movlb	0
   216  003A80  EF22  F015         	goto	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMRAM
   219  000048                     __pbssCOMRAM:
   220                           	callstack 0
   221  000048                     _temperatura:
   222                           	callstack 0
   223  000048                     	ds	4
   224  00004C                     _width:
   225                           	callstack 0
   226  00004C                     	ds	2
   227  00004E                     _prec:
   228                           	callstack 0
   229  00004E                     	ds	2
   230  000050                     _flags:
   231                           	callstack 0
   232  000050                     	ds	2
   233                           
   234                           	psect	bssBANK0
   235  0000D4                     __pbssBANK0:
   236                           	callstack 0
   237  0000D4                     floorf@F527:
   238                           	callstack 0
   239  0000D4                     	ds	4
   240  0000D8                     ___fpclassifyf@F465:
   241                           	callstack 0
   242  0000D8                     	ds	4
   243  0000DC                     _nout:
   244                           	callstack 0
   245  0000DC                     	ds	2
   246  0000DE                     _tempdisp:
   247                           	callstack 0
   248  0000DE                     	ds	2
   249  0000E0                     _temperature:
   250                           	callstack 0
   251  0000E0                     	ds	8
   252  0000E8                     _tensao:
   253                           	callstack 0
   254  0000E8                     	ds	4
   255  0000EC                     _contador:
   256                           	callstack 0
   257  0000EC                     	ds	2
   258                           
   259                           	psect	bssBANK1
   260  000100                     __pbssBANK1:
   261                           	callstack 0
   262  000100                     _dbuf:
   263                           	callstack 0
   264  000100                     	ds	80
   265                           
   266                           	psect	cstackBANK0
   267  000060                     __pcstackBANK0:
   268                           	callstack 0
   269  000060                     ?_efgtoa:
   270                           	callstack 0
   271  000060                     efgtoa@fp:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x0
   275  000060                     	ds	2
   276  000062                     efgtoa@f:
   277                           	callstack 0
   278                           
   279                           ; 4 bytes @ 0x2
   280  000062                     	ds	4
   281  000066                     efgtoa@c:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x6
   285  000066                     	ds	1
   286  000067                     ??_efgtoa:
   287                           
   288                           ; 1 bytes @ 0x7
   289  000067                     	ds	5
   290  00006C                     _efgtoa$926:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xC
   294  00006C                     	ds	2
   295  00006E                     _efgtoa$927:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xE
   299  00006E                     	ds	2
   300  000070                     _efgtoa$932:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x10
   304  000070                     	ds	2
   305  000072                     _efgtoa$936:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x12
   309  000072                     	ds	2
   310  000074                     _efgtoa$937:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x14
   314  000074                     	ds	2
   315  000076                     _efgtoa$938:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x16
   319  000076                     	ds	2
   320  000078                     efgtoa@t:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x18
   324  000078                     	ds	2
   325  00007A                     efgtoa@pp:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x1A
   329  00007A                     	ds	2
   330  00007C                     efgtoa@ne:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x1C
   334  00007C                     	ds	2
   335  00007E                     efgtoa@m:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x1E
   339  00007E                     	ds	2
   340  000080                     efgtoa@ou:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x20
   344  000080                     	ds	4
   345  000084                     efgtoa@d:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x24
   349  000084                     	ds	2
   350  000086                     efgtoa@sign:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x26
   354  000086                     	ds	2
   355  000088                     efgtoa@p:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x28
   359  000088                     	ds	2
   360  00008A                     efgtoa@w:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x2A
   364  00008A                     	ds	2
   365  00008C                     efgtoa@nmode:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x2C
   369  00008C                     	ds	1
   370  00008D                     efgtoa@mode:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x2D
   374  00008D                     	ds	1
   375  00008E                     efgtoa@h:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x2E
   379  00008E                     	ds	4
   380  000092                     efgtoa@l:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x32
   384  000092                     	ds	4
   385  000096                     efgtoa@i:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x36
   389  000096                     	ds	2
   390  000098                     efgtoa@g:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x38
   394  000098                     	ds	4
   395  00009C                     efgtoa@e:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x3C
   399  00009C                     	ds	2
   400  00009E                     efgtoa@n:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x3E
   404  00009E                     	ds	2
   405  0000A0                     efgtoa@u:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x40
   409  0000A0                     	ds	4
   410  0000A4                     ?_vfpfcnvrt:
   411                           	callstack 0
   412  0000A4                     vfpfcnvrt@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x44
   416  0000A4                     	ds	2
   417  0000A6                     vfpfcnvrt@fmt:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x46
   421  0000A6                     	ds	2
   422  0000A8                     vfpfcnvrt@ap:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x48
   426  0000A8                     	ds	2
   427  0000AA                     ??_vfpfcnvrt:
   428                           
   429                           ; 1 bytes @ 0x4A
   430  0000AA                     	ds	4
   431  0000AE                     _vfpfcnvrt$952:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x4E
   435  0000AE                     	ds	2
   436  0000B0                     _vfpfcnvrt$953:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x50
   440  0000B0                     	ds	2
   441  0000B2                     _vfpfcnvrt$957:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x52
   445  0000B2                     	ds	2
   446  0000B4                     vfpfcnvrt@f:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x54
   450  0000B4                     	ds	4
   451  0000B8                     vfpfcnvrt@ct:
   452                           	callstack 0
   453                           
   454                           ; 3 bytes @ 0x58
   455  0000B8                     	ds	3
   456  0000BB                     vfpfcnvrt@c:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x5B
   460  0000BB                     	ds	1
   461  0000BC                     ?_vfprintf:
   462                           	callstack 0
   463  0000BC                     vfprintf@fp:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x5C
   467  0000BC                     	ds	2
   468  0000BE                     vfprintf@fmt:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x5E
   472  0000BE                     	ds	2
   473  0000C0                     vfprintf@ap:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x60
   477  0000C0                     	ds	2
   478  0000C2                     ?_sprintf:
   479                           	callstack 0
   480  0000C2                     sprintf@s:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x62
   484  0000C2                     	ds	2
   485  0000C4                     sprintf@fmt:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x64
   489  0000C4                     	ds	6
   490  0000CA                     sprintf@ap:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x6A
   494  0000CA                     	ds	2
   495  0000CC                     sprintf@f:
   496                           	callstack 0
   497                           
   498                           ; 6 bytes @ 0x6C
   499  0000CC                     	ds	6
   500  0000D2                     ??_main:
   501                           
   502                           ; 1 bytes @ 0x72
   503  0000D2                     	ds	2
   504                           
   505                           	psect	cstackCOMRAM
   506  000001                     __pcstackCOMRAM:
   507                           	callstack 0
   508  000001                     i2___flge@ff1:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x0
   512  000001                     	ds	4
   513  000005                     i2___flge@ff2:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x4
   517  000005                     	ds	4
   518  000009                     ??i2___flge:
   519                           
   520                           ; 1 bytes @ 0x8
   521  000009                     	ds	4
   522  00000D                     ?_strlen:
   523                           	callstack 0
   524  00000D                     ?___fpclassifyf:
   525                           	callstack 0
   526  00000D                     ?_isupper:
   527                           	callstack 0
   528  00000D                     ?_isdigit:
   529                           	callstack 0
   530  00000D                     ?_strncmp:
   531                           	callstack 0
   532  00000D                     ?_isspace:
   533                           	callstack 0
   534  00000D                     ?___wmul:
   535                           	callstack 0
   536  00000D                     ?___awdiv:
   537                           	callstack 0
   538  00000D                     ?___awmod:
   539                           	callstack 0
   540  00000D                     ?___fladd:
   541                           	callstack 0
   542  00000D                     ?___fldiv:
   543                           	callstack 0
   544  00000D                     ?___flneg:
   545                           	callstack 0
   546  00000D                     ?___fltol:
   547                           	callstack 0
   548  00000D                     comando_lcd@comando:
   549                           	callstack 0
   550  00000D                     dado_lcd@dado:
   551                           	callstack 0
   552  00000D                     ___wmul@multiplier:
   553                           	callstack 0
   554  00000D                     ___awdiv@dividend:
   555                           	callstack 0
   556  00000D                     ___awmod@dividend:
   557                           	callstack 0
   558  00000D                     isdigit@c:
   559                           	callstack 0
   560  00000D                     isspace@c:
   561                           	callstack 0
   562  00000D                     isupper@c:
   563                           	callstack 0
   564  00000D                     fputc@c:
   565                           	callstack 0
   566  00000D                     strcpy@dest:
   567                           	callstack 0
   568  00000D                     strlen@s:
   569                           	callstack 0
   570  00000D                     strncmp@_l:
   571                           	callstack 0
   572  00000D                     ___fleq@ff1:
   573                           	callstack 0
   574  00000D                     ___flneg@f1:
   575                           	callstack 0
   576  00000D                     ___fltol@f1:
   577                           	callstack 0
   578  00000D                     ___fladd@b:
   579                           	callstack 0
   580  00000D                     ___fldiv@b:
   581                           	callstack 0
   582  00000D                     ___fpclassifyf@x:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0xC
   586  00000D                     	ds	2
   587  00000F                     ??_isupper:
   588  00000F                     ??_isdigit:
   589  00000F                     ??_isspace:
   590  00000F                     ??_comando_lcd:
   591  00000F                     ??_dado_lcd:
   592  00000F                     ___wmul@multiplicand:
   593                           	callstack 0
   594  00000F                     ___awdiv@divisor:
   595                           	callstack 0
   596  00000F                     ___awmod@divisor:
   597                           	callstack 0
   598  00000F                     fputc@fp:
   599                           	callstack 0
   600  00000F                     strcpy@src:
   601                           	callstack 0
   602  00000F                     strlen@a:
   603                           	callstack 0
   604  00000F                     strncmp@_r:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0xE
   608  00000F                     	ds	1
   609  000010                     
   610                           ; 1 bytes @ 0xF
   611  000010                     	ds	1
   612  000011                     ??_fputc:
   613  000011                     ??___fpclassifyf:
   614  000011                     ??_strcpy:
   615  000011                     ??___fltol:
   616  000011                     ___awdiv@counter:
   617                           	callstack 0
   618  000011                     ___awmod@counter:
   619                           	callstack 0
   620  000011                     imprime_lcd@frase:
   621                           	callstack 0
   622  000011                     ___wmul@product:
   623                           	callstack 0
   624  000011                     strncmp@n:
   625                           	callstack 0
   626  000011                     ___fleq@ff2:
   627                           	callstack 0
   628  000011                     ___fladd@a:
   629                           	callstack 0
   630  000011                     ___fldiv@a:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x10
   634  000011                     	ds	1
   635  000012                     ___awdiv@sign:
   636                           	callstack 0
   637  000012                     ___awmod@sign:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x11
   641  000012                     	ds	1
   642  000013                     ??_strncmp:
   643  000013                     ??_imprime_lcd:
   644  000013                     ?_tolower:
   645                           	callstack 0
   646  000013                     ?___xxtofl:
   647                           	callstack 0
   648  000013                     _isspace$1022:
   649                           	callstack 0
   650  000013                     ___awdiv@quotient:
   651                           	callstack 0
   652  000013                     strcpy@s:
   653                           	callstack 0
   654  000013                     tolower@c:
   655                           	callstack 0
   656  000013                     ___xxtofl@val:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x12
   660  000013                     	ds	1
   661  000014                     ?_atoi:
   662                           	callstack 0
   663  000014                     atoi@s:
   664                           	callstack 0
   665  000014                     strncmp@l:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x13
   669  000014                     	ds	1
   670  000015                     ??___fladd:
   671  000015                     ??___fldiv:
   672  000015                     ??_tolower:
   673  000015                     ??___fleq:
   674  000015                     ___fltol@sign1:
   675                           	callstack 0
   676  000015                     ___fpclassifyf@e:
   677                           	callstack 0
   678  000015                     strcpy@d:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x14
   682  000015                     	ds	1
   683  000016                     ??_atoi:
   684  000016                     ___fltol@exp1:
   685                           	callstack 0
   686  000016                     imprime_lcd@tamanho:
   687                           	callstack 0
   688  000016                     fputs@s:
   689                           	callstack 0
   690  000016                     strncmp@r:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x15
   694  000016                     	ds	1
   695  000017                     ??___xxtofl:
   696  000017                     ___fpclassifyf@u:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x16
   700  000017                     	ds	1
   701  000018                     imprime_lcd@indice:
   702                           	callstack 0
   703  000018                     fputs@fp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x17
   707  000018                     	ds	1
   708  000019                     ___fladd@signs:
   709                           	callstack 0
   710  000019                     _tolower$1086:
   711                           	callstack 0
   712  000019                     ___fldiv@rem:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x18
   716  000019                     	ds	1
   717  00001A                     ___fladd@aexp:
   718                           	callstack 0
   719  00001A                     fputs@c:
   720                           	callstack 0
   721  00001A                     atoi@neg:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x19
   725  00001A                     	ds	1
   726  00001B                     ___fladd@bexp:
   727                           	callstack 0
   728  00001B                     ___xxtofl@sign:
   729                           	callstack 0
   730  00001B                     fputs@i:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1A
   734  00001B                     	ds	1
   735  00001C                     ___fladd@grs:
   736                           	callstack 0
   737  00001C                     ___xxtofl@exp:
   738                           	callstack 0
   739  00001C                     _atoi$991:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1B
   743  00001C                     	ds	1
   744  00001D                     ?_pad:
   745                           	callstack 0
   746  00001D                     ___fldiv@sign:
   747                           	callstack 0
   748  00001D                     pad@fp:
   749                           	callstack 0
   750  00001D                     ___xxtofl@arg:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x1C
   754  00001D                     	ds	1
   755  00001E                     ___fldiv@new_exp:
   756                           	callstack 0
   757  00001E                     _atoi$993:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x1D
   761  00001E                     	ds	1
   762  00001F                     pad@buf:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x1E
   766  00001F                     	ds	1
   767  000020                     _atoi$992:
   768                           	callstack 0
   769  000020                     ___fldiv@grs:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x1F
   773  000020                     	ds	1
   774  000021                     ?___flmul:
   775                           	callstack 0
   776  000021                     pad@p:
   777                           	callstack 0
   778  000021                     atoi@n:
   779                           	callstack 0
   780  000021                     ___flmul@b:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x20
   784  000021                     	ds	2
   785  000023                     ??_pad:
   786                           
   787                           ; 1 bytes @ 0x22
   788  000023                     	ds	1
   789  000024                     ___fldiv@bexp:
   790                           	callstack 0
   791  000024                     pad@i:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x23
   795  000024                     	ds	1
   796  000025                     ___fldiv@aexp:
   797                           	callstack 0
   798  000025                     ___flmul@a:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x24
   802  000025                     	ds	1
   803  000026                     ?_floorf:
   804                           	callstack 0
   805  000026                     pad@w:
   806                           	callstack 0
   807  000026                     floorf@x:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x25
   811  000026                     	ds	3
   812  000029                     ??___flmul:
   813                           
   814                           ; 1 bytes @ 0x28
   815  000029                     	ds	1
   816  00002A                     ??_floorf:
   817                           
   818                           ; 1 bytes @ 0x29
   819  00002A                     	ds	3
   820  00002D                     ___flmul@sign:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x2C
   824  00002D                     	ds	1
   825  00002E                     ___flmul@aexp:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x2D
   829  00002E                     	ds	1
   830  00002F                     ___flmul@grs:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x2E
   834  00002F                     	ds	1
   835  000030                     floorf@m:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0x2F
   839  000030                     	ds	3
   840  000033                     ___flmul@bexp:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x32
   844  000033                     	ds	1
   845  000034                     floorf@e:
   846                           	callstack 0
   847  000034                     ___flmul@prod:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x33
   851  000034                     	ds	2
   852  000036                     floorf@u:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x35
   856  000036                     	ds	2
   857  000038                     ___flmul@temp:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x37
   861  000038                     	ds	2
   862  00003A                     ?___flsub:
   863                           	callstack 0
   864  00003A                     ___flge@ff1:
   865                           	callstack 0
   866  00003A                     ___flsub@b:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x39
   870  00003A                     	ds	4
   871  00003E                     ___flge@ff2:
   872                           	callstack 0
   873  00003E                     ___flsub@a:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x3D
   877  00003E                     	ds	4
   878  000042                     ??___flge:
   879                           
   880                           ; 1 bytes @ 0x41
   881  000042                     	ds	4
   882  000046                     vfprintf@cfmt:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x45
   886  000046                     	ds	2
   887  000048                     
   888                           ; 1 bytes @ 0x47
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 61 in file "ADC_LM35_lcd.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   908 ;;      Params:         0       0       0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0
   910 ;;      Temps:          0       2       0       0       0       0       0       0       0
   911 ;;      Totals:         0       2       0       0       0       0       0       0       0
   912 ;;Total ram usage:        2 bytes
   913 ;; Hardware stack levels required when called: 10
   914 ;; This function calls:
   915 ;;		___flmul
   916 ;;		___fltol
   917 ;;		___wmul
   918 ;;		___xxtofl
   919 ;;		_comando_lcd
   920 ;;		_imprime_lcd
   921 ;;		_limpa_lcd
   922 ;;		_setupADC
   923 ;;		_sprintf
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text0
   930  002A44                     __ptext0:
   931                           	callstack 0
   932  002A44                     _main:
   933                           	callstack 21
   934  002A44                     
   935                           ;ADC_LM35_lcd.c: 63: 
   936  002A44  0E00               	movlw	0
   937  002A46  6E95               	movwf	149,c	;volatile
   938                           
   939                           ;ADC_LM35_lcd.c: 64:         ADCON1 = 0b00001100;
   940  002A48  0E00               	movlw	0
   941  002A4A  6E96               	movwf	150,c	;volatile
   942                           
   943                           ;ADC_LM35_lcd.c: 65: 
   944  002A4C  0E00               	movlw	0
   945  002A4E  6E94               	movwf	148,c	;volatile
   946                           
   947                           ;ADC_LM35_lcd.c: 66:         ADCON0bits.GO = 1;
   948  002A50  0E24               	movlw	36
   949  002A52  6E82               	movwf	130,c	;volatile
   950  002A54                     
   951                           ;ADC_LM35_lcd.c: 69:   contador = (ADRESH * 0x100) + ADRESL;
   952  002A54  EC42  F01D         	call	_setupADC	;wreg free
   953  002A58                     
   954                           ;ADC_LM35_lcd.c: 71:         temperatura = 100*tensao;
   955  002A58  0E0F               	movlw	15
   956  002A5A  6EC1               	movwf	193,c	;volatile
   957                           
   958                           ;ADC_LM35_lcd.c: 73: 
   959  002A5C  0E00               	movlw	0
   960  002A5E  6E0E               	movwf	(comando_lcd@comando+1)^0,c
   961  002A60  0E3C               	movlw	60
   962  002A62  6E0D               	movwf	comando_lcd@comando^0,c
   963  002A64  EC6A  F01D         	call	_comando_lcd	;wreg free
   964                           
   965                           ;ADC_LM35_lcd.c: 74:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   966  002A68  0E00               	movlw	0
   967  002A6A  6E0E               	movwf	(comando_lcd@comando+1)^0,c
   968  002A6C  0E0C               	movlw	12
   969  002A6E  6E0D               	movwf	comando_lcd@comando^0,c
   970  002A70  EC6A  F01D         	call	_comando_lcd	;wreg free
   971                           
   972                           ;ADC_LM35_lcd.c: 75: 
   973  002A74  EC84  F01D         	call	_limpa_lcd	;wreg free
   974  002A78                     l5302:
   975                           
   976                           ;ADC_LM35_lcd.c: 80: 
   977  002A78  0E0C               	movlw	12
   978  002A7A  6EC1               	movwf	193,c	;volatile
   979  002A7C                     
   980                           ;ADC_LM35_lcd.c: 82: 
   981  002A7C  82C2               	bsf	194,1,c	;volatile
   982  002A7E                     l82:
   983                           
   984                           ;ADC_LM35_lcd.c: 83: 
   985  002A7E  B2C2               	btfsc	194,1,c	;volatile
   986  002A80  EF44  F015         	goto	u7491
   987  002A84  EF46  F015         	goto	u7490
   988  002A88                     u7491:
   989  002A88  EF3F  F015         	goto	l82
   990  002A8C                     u7490:
   991  002A8C                     
   992                           ;ADC_LM35_lcd.c: 85:         imprime_lcd("temperatura");
   993  002A8C  50C4               	movf	196,w,c	;volatile
   994  002A8E  0100               	movlb	0	; () banked
   995  002A90  6FD3               	movwf	(??_main+1)& (0+255),b
   996  002A92  6BD2               	clrf	??_main& (0+255),b
   997  002A94  50C3               	movf	195,w,c	;volatile
   998  002A96  25D2               	addwf	??_main& (0+255),w,b
   999  002A98  6FEC               	movwf	_contador& (0+255),b
  1000  002A9A  0E00               	movlw	0
  1001  002A9C  21D3               	addwfc	(??_main+1)& (0+255),w,b
  1002  002A9E  6FED               	movwf	(_contador+1)& (0+255),b
  1003  002AA0                     
  1004                           ; BSR set to: 0
  1005                           ;ADC_LM35_lcd.c: 86: 
  1006  002AA0  C0EC  F00D         	movff	_contador,___wmul@multiplier
  1007  002AA4  C0ED  F00E         	movff	_contador+1,___wmul@multiplier+1
  1008  002AA8  0E00               	movlw	0
  1009  002AAA  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  1010  002AAC  0E05               	movlw	5
  1011  002AAE  6E0F               	movwf	___wmul@multiplicand^0,c
  1012  002AB0  EC57  F01D         	call	___wmul	;wreg free
  1013  002AB4  C00D  F013         	movff	?___wmul,___xxtofl@val
  1014  002AB8  C00E  F014         	movff	?___wmul+1,___xxtofl@val+1
  1015  002ABC  0E00               	movlw	0
  1016  002ABE  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  1017  002AC0  0EFF               	movlw	-1
  1018  002AC2  6E15               	movwf	(___xxtofl@val+2)^0,c
  1019  002AC4  6E16               	movwf	(___xxtofl@val+3)^0,c
  1020  002AC6  0E01               	movlw	1
  1021  002AC8  EC48  F014         	call	___xxtofl
  1022  002ACC  C013  F021         	movff	?___xxtofl,___flmul@b
  1023  002AD0  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  1024  002AD4  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  1025  002AD8  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  1026  002ADC  0E6F               	movlw	111
  1027  002ADE  6E25               	movwf	___flmul@a^0,c
  1028  002AE0  0E12               	movlw	18
  1029  002AE2  6E26               	movwf	(___flmul@a+1)^0,c
  1030  002AE4  0E83               	movlw	131
  1031  002AE6  6E27               	movwf	(___flmul@a+2)^0,c
  1032  002AE8  0E3A               	movlw	58
  1033  002AEA  6E28               	movwf	(___flmul@a+3)^0,c
  1034  002AEC  EC5D  F00F         	call	___flmul	;wreg free
  1035  002AF0  C021  F0E8         	movff	?___flmul,_tensao
  1036  002AF4  C022  F0E9         	movff	?___flmul+1,_tensao+1
  1037  002AF8  C023  F0EA         	movff	?___flmul+2,_tensao+2
  1038  002AFC  C024  F0EB         	movff	?___flmul+3,_tensao+3
  1039  002B00                     
  1040                           ;ADC_LM35_lcd.c: 87:         comando_lcd(192);
  1041  002B00  C0E8  F021         	movff	_tensao,___flmul@b
  1042  002B04  C0E9  F022         	movff	_tensao+1,___flmul@b+1
  1043  002B08  C0EA  F023         	movff	_tensao+2,___flmul@b+2
  1044  002B0C  C0EB  F024         	movff	_tensao+3,___flmul@b+3
  1045  002B10  0E00               	movlw	0
  1046  002B12  6E25               	movwf	___flmul@a^0,c
  1047  002B14  0E00               	movlw	0
  1048  002B16  6E26               	movwf	(___flmul@a+1)^0,c
  1049  002B18  0EC8               	movlw	200
  1050  002B1A  6E27               	movwf	(___flmul@a+2)^0,c
  1051  002B1C  0E42               	movlw	66
  1052  002B1E  6E28               	movwf	(___flmul@a+3)^0,c
  1053  002B20  EC5D  F00F         	call	___flmul	;wreg free
  1054  002B24  C021  F048         	movff	?___flmul,_temperatura
  1055  002B28  C022  F049         	movff	?___flmul+1,_temperatura+1
  1056  002B2C  C023  F04A         	movff	?___flmul+2,_temperatura+2
  1057  002B30  C024  F04B         	movff	?___flmul+3,_temperatura+3
  1058  002B34                     
  1059                           ;ADC_LM35_lcd.c: 88:         sprintf(temperature, "%3.2f", temperatura);
  1060  002B34  C048  F00D         	movff	_temperatura,___fltol@f1
  1061  002B38  C049  F00E         	movff	_temperatura+1,___fltol@f1+1
  1062  002B3C  C04A  F00F         	movff	_temperatura+2,___fltol@f1+2
  1063  002B40  C04B  F010         	movff	_temperatura+3,___fltol@f1+3
  1064  002B44  ECB4  F016         	call	___fltol	;wreg free
  1065  002B48  C00D  F0DE         	movff	?___fltol,_tempdisp
  1066  002B4C  C00E  F0DF         	movff	?___fltol+1,_tempdisp+1
  1067  002B50                     
  1068                           ;ADC_LM35_lcd.c: 90:         imprime_lcd(temperature);
  1069  002B50  0E06               	movlw	6
  1070  002B52  0100               	movlb	0	; () banked
  1071  002B54  6FD3               	movwf	(??_main+1)& (0+255),b
  1072  002B56  0E13               	movlw	19
  1073  002B58  6FD2               	movwf	??_main& (0+255),b
  1074  002B5A  0EAD               	movlw	173
  1075  002B5C                     u7507:
  1076  002B5C  2EE8               	decfsz	wreg,f,c
  1077  002B5E  D7FE               	bra	u7507
  1078  002B60  2FD2               	decfsz	??_main& (0+255),f,b
  1079  002B62  D7FC               	bra	u7507
  1080  002B64  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  1081  002B66  D7FA               	bra	u7507
  1082  002B68  D000               	nop2	
  1083  002B6A                     
  1084                           ;ADC_LM35_lcd.c: 92:          imprime_lcd(" graus Celsius");
  1085  002B6A  0E00               	movlw	0
  1086  002B6C  6E95               	movwf	149,c	;volatile
  1087  002B6E  0E00               	movlw	0
  1088  002B70  6E0E               	movwf	(comando_lcd@comando+1)^0,c
  1089  002B72  0E80               	movlw	128
  1090  002B74  6E0D               	movwf	comando_lcd@comando^0,c
  1091  002B76  EC6A  F01D         	call	_comando_lcd	;wreg free
  1092  002B7A  0E10               	movlw	low STR_1
  1093  002B7C  6E11               	movwf	imprime_lcd@frase^0,c
  1094  002B7E  0E08               	movlw	high STR_1
  1095  002B80  6E12               	movwf	(imprime_lcd@frase+1)^0,c
  1096  002B82  EC4A  F01B         	call	_imprime_lcd	;wreg free
  1097  002B86  0E00               	movlw	0
  1098  002B88  6E0E               	movwf	(comando_lcd@comando+1)^0,c
  1099  002B8A  0EC0               	movlw	192
  1100  002B8C  6E0D               	movwf	comando_lcd@comando^0,c
  1101  002B8E  EC6A  F01D         	call	_comando_lcd	;wreg free
  1102  002B92  0EE0               	movlw	low _temperature
  1103  002B94  0100               	movlb	0	; () banked
  1104  002B96  6FC2               	movwf	sprintf@s& (0+255),b
  1105  002B98  0E00               	movlw	high _temperature
  1106  002B9A  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1107  002B9C  0E1C               	movlw	low STR_2
  1108  002B9E  6FC4               	movwf	sprintf@fmt& (0+255),b
  1109  002BA0  0E08               	movlw	high STR_2
  1110  002BA2  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1111  002BA4  C048  F0C6         	movff	_temperatura,?_sprintf+4
  1112  002BA8  C049  F0C7         	movff	_temperatura+1,?_sprintf+5
  1113  002BAC  C04A  F0C8         	movff	_temperatura+2,?_sprintf+6
  1114  002BB0  C04B  F0C9         	movff	_temperatura+3,?_sprintf+7
  1115  002BB4  EC17  F01C         	call	_sprintf	;wreg free
  1116  002BB8  0EE0               	movlw	low _temperature
  1117  002BBA  6E11               	movwf	imprime_lcd@frase^0,c
  1118  002BBC  0E00               	movlw	high _temperature
  1119  002BBE  6E12               	movwf	(imprime_lcd@frase+1)^0,c
  1120  002BC0  EC4A  F01B         	call	_imprime_lcd	;wreg free
  1121  002BC4  0E01               	movlw	low STR_3
  1122  002BC6  6E11               	movwf	imprime_lcd@frase^0,c
  1123  002BC8  0E08               	movlw	high STR_3
  1124  002BCA  6E12               	movwf	(imprime_lcd@frase+1)^0,c
  1125  002BCC  EC4A  F01B         	call	_imprime_lcd	;wreg free
  1126  002BD0  EF3C  F015         	goto	l5302
  1127  002BD4  EF07  F000         	goto	start
  1128  002BD8                     __end_of_main:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _sprintf *****************
  1132 ;; Defined at:
  1133 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  s               2   98[BANK0 ] PTR unsigned char 
  1136 ;;		 -> temperature(8), 
  1137 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  1138 ;;		 -> STR_2(6), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  f               6  108[BANK0 ] struct _IO_FILE
  1141 ;;  ap              2  106[BANK0 ] PTR void [1]
  1142 ;;		 -> ?_sprintf(2), 
  1143 ;;  ret             2    0        int 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   98[BANK0 ] int 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       8       0       0       0       0       0       0       0
  1154 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1157 ;;Total ram usage:       16 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 9
  1160 ;; This function calls:
  1161 ;;		_vfprintf
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text1
  1168  00382E                     __ptext1:
  1169                           	callstack 0
  1170  00382E                     _sprintf:
  1171                           	callstack 21
  1172  00382E  0EC6               	movlw	low (?_sprintf+4)
  1173  003830  0100               	movlb	0	; () banked
  1174  003832  6FCA               	movwf	sprintf@ap& (0+255),b
  1175  003834  0E00               	movlw	high (?_sprintf+4)
  1176  003836  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  1177  003838  C0C2  F0CC         	movff	sprintf@s,sprintf@f
  1178  00383C  C0C3  F0CD         	movff	sprintf@s+1,sprintf@f+1
  1179  003840                     
  1180                           ; BSR set to: 0
  1181  003840  0E00               	movlw	0
  1182  003842  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  1183  003844  0E00               	movlw	0
  1184  003846  6FCE               	movwf	(sprintf@f+2)& (0+255),b
  1185  003848                     
  1186                           ; BSR set to: 0
  1187  003848  0E00               	movlw	0
  1188  00384A  6FD1               	movwf	(sprintf@f+5)& (0+255),b
  1189  00384C  0E00               	movlw	0
  1190  00384E  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  1191  003850                     
  1192                           ; BSR set to: 0
  1193  003850  0ECC               	movlw	low sprintf@f
  1194  003852  6FBC               	movwf	vfprintf@fp& (0+255),b
  1195  003854  0E00               	movlw	high sprintf@f
  1196  003856  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  1197  003858  C0C4  F0BE         	movff	sprintf@fmt,vfprintf@fmt
  1198  00385C  C0C5  F0BF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1199  003860  0ECA               	movlw	low sprintf@ap
  1200  003862  6FC0               	movwf	vfprintf@ap& (0+255),b
  1201  003864  0E00               	movlw	high sprintf@ap
  1202  003866  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  1203  003868  EC88  F01B         	call	_vfprintf	;wreg free
  1204  00386C  0100               	movlb	0	; () banked
  1205  00386E  51CE               	movf	(sprintf@f+2)& (0+255),w,b
  1206  003870  25C2               	addwf	sprintf@s& (0+255),w,b
  1207  003872  6ED9               	movwf	fsr2l,c
  1208  003874  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  1209  003876  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1210  003878  6EDA               	movwf	fsr2h,c
  1211  00387A  0E00               	movlw	0
  1212  00387C  6EDF               	movwf	indf2,c
  1213  00387E                     
  1214                           ; BSR set to: 0
  1215  00387E  0012               	return		;funcret
  1216  003880                     __end_of_sprintf:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _vfprintf *****************
  1220 ;; Defined at:
  1221 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  fp              2   92[BANK0 ] PTR struct _IO_FILE
  1224 ;;		 -> sprintf@f(6), 
  1225 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  1226 ;;		 -> STR_2(6), 
  1227 ;;  ap              2   96[BANK0 ] PTR PTR void 
  1228 ;;		 -> sprintf@ap(2), 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  cfmt            2   69[COMRAM] PTR unsigned char 
  1231 ;;		 -> STR_2(6), 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2   92[BANK0 ] int 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         0       6       0       0       0       0       0       0       0
  1242 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1244 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1245 ;;Total ram usage:        8 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 8
  1248 ;; This function calls:
  1249 ;;		_vfpfcnvrt
  1250 ;; This function is called by:
  1251 ;;		_sprintf
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text2
  1256  003710                     __ptext2:
  1257                           	callstack 0
  1258  003710                     _vfprintf:
  1259                           	callstack 21
  1260  003710                     
  1261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1262  003710  C0BE  F046         	movff	vfprintf@fmt,vfprintf@cfmt
  1263  003714  C0BF  F047         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1264  003718                     
  1265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1266  003718  0E00               	movlw	0
  1267  00371A  0100               	movlb	0	; () banked
  1268  00371C  6FDD               	movwf	(_nout+1)& (0+255),b
  1269  00371E  0E00               	movlw	0
  1270  003720  6FDC               	movwf	_nout& (0+255),b
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1273  003722  EFA6  F01B         	goto	l5272
  1274  003726                     l5270:
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1278  003726  C0BC  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  1279  00372A  C0BD  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1280  00372E  0E46               	movlw	low vfprintf@cfmt
  1281  003730  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  1282  003732  0E00               	movlw	high vfprintf@cfmt
  1283  003734  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1284  003736  C0C0  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  1285  00373A  C0C1  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1286  00373E  EC48  F00A         	call	_vfpfcnvrt	;wreg free
  1287  003742  0100               	movlb	0	; () banked
  1288  003744  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  1289  003746  27DC               	addwf	_nout& (0+255),f,b
  1290  003748  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1291  00374A  23DD               	addwfc	(_nout+1)& (0+255),f,b
  1292  00374C                     l5272:
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1296  00374C  C046  FFF6         	movff	vfprintf@cfmt,tblptrl
  1297  003750  C047  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1298  003754                     	if	0	;tblptru may be non-zero
  1299  003754                     	endif
  1300  003754                     	if	0	;tblptru may be non-zero
  1301  003754                     	endif
  1302  003754  0008               	tblrd		*
  1303  003756  50F5               	movf	tablat,w,c
  1304  003758  0900               	iorlw	0
  1305  00375A  A4D8               	btfss	status,2,c
  1306  00375C  EFB2  F01B         	goto	u7461
  1307  003760  EFB4  F01B         	goto	u7460
  1308  003764                     u7461:
  1309  003764  EF93  F01B         	goto	l5270
  1310  003768                     u7460:
  1311  003768                     
  1312                           ; BSR set to: 0
  1313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1314  003768  C0DC  F0BC         	movff	_nout,?_vfprintf
  1315  00376C  C0DD  F0BD         	movff	_nout+1,?_vfprintf+1
  1316  003770                     
  1317                           ; BSR set to: 0
  1318  003770  0012               	return		;funcret
  1319  003772                     __end_of_vfprintf:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _vfpfcnvrt *****************
  1323 ;; Defined at:
  1324 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  1327 ;;		 -> sprintf@f(6), 
  1328 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  1329 ;;		 -> vfprintf@cfmt(2), 
  1330 ;;  ap              2   72[BANK0 ] PTR PTR void 
  1331 ;;		 -> sprintf@ap(2), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  llu             8    0        unsigned long long 
  1334 ;;  ll              8    0        long long 
  1335 ;;  f               4   84[BANK0 ] long long 
  1336 ;;  ct              3   88[BANK0 ] unsigned char [3]
  1337 ;;  vp              3    0        PTR void 
  1338 ;;  cp              3    0        PTR unsigned char 
  1339 ;;  i               2    0        int 
  1340 ;;  done            2    0        int 
  1341 ;;  c               1   91[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2   68[BANK0 ] int 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       6       0       0       0       0       0       0       0
  1352 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1354 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1355 ;;Total ram usage:       24 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 7
  1358 ;; This function calls:
  1359 ;;		_atoi
  1360 ;;		_efgtoa
  1361 ;;		_fputc
  1362 ;;		_isdigit
  1363 ;;		_isupper
  1364 ;;		_strncmp
  1365 ;;		_tolower
  1366 ;; This function is called by:
  1367 ;;		_vfprintf
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text3
  1372  001490                     __ptext3:
  1373                           	callstack 0
  1374  001490                     _vfpfcnvrt:
  1375                           	callstack 21
  1376  001490                     
  1377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1378  001490  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1379  001494  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1380  001498  CFDE FFF6          	movff	postinc2,tblptrl
  1381  00149C  CFDD FFF7          	movff	postdec2,tblptrh
  1382  0014A0                     	if	0	;tblptru may be non-zero
  1383  0014A0                     	endif
  1384  0014A0                     	if	0	;tblptru may be non-zero
  1385  0014A0                     	endif
  1386  0014A0  0008               	tblrd		*
  1387  0014A2  50F5               	movf	tablat,w,c
  1388  0014A4  0A25               	xorlw	37
  1389  0014A6  A4D8               	btfss	status,2,c
  1390  0014A8  EF58  F00A         	goto	u7271
  1391  0014AC  EF5A  F00A         	goto	u7270
  1392  0014B0                     u7271:
  1393  0014B0  EFE1  F00C         	goto	l5258
  1394  0014B4                     u7270:
  1395  0014B4                     
  1396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1397  0014B4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1398  0014B8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1399  0014BC  2ADE               	incf	postinc2,f,c
  1400  0014BE  0E00               	movlw	0
  1401  0014C0  22DD               	addwfc	postdec2,f,c
  1402  0014C2                     
  1403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1404  0014C2  0E00               	movlw	0
  1405  0014C4  6E4D               	movwf	(_width+1)^0,c
  1406  0014C6  0E00               	movlw	0
  1407  0014C8  6E4C               	movwf	_width^0,c
  1408  0014CA  C04C  F050         	movff	_width,_flags
  1409  0014CE  C04D  F051         	movff	_width+1,_flags+1
  1410  0014D2                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1412  0014D2  684E               	setf	_prec^0,c
  1413  0014D4  684F               	setf	(_prec+1)^0,c
  1414  0014D6                     
  1415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1416  0014D6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1417  0014DA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1418  0014DE  CFDE FFF6          	movff	postinc2,tblptrl
  1419  0014E2  CFDD FFF7          	movff	postdec2,tblptrh
  1420  0014E6                     	if	0	;tblptru may be non-zero
  1421  0014E6                     	endif
  1422  0014E6                     	if	0	;tblptru may be non-zero
  1423  0014E6                     	endif
  1424  0014E6  0008               	tblrd		*
  1425  0014E8  50F5               	movf	tablat,w,c
  1426  0014EA  0A2A               	xorlw	42
  1427  0014EC  A4D8               	btfss	status,2,c
  1428  0014EE  EF7B  F00A         	goto	u7281
  1429  0014F2  EF7D  F00A         	goto	u7280
  1430  0014F6                     u7281:
  1431  0014F6  EFA6  F00A         	goto	l5174
  1432  0014FA                     u7280:
  1433  0014FA                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1435  0014FA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1436  0014FE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1437  001502  2ADE               	incf	postinc2,f,c
  1438  001504  0E00               	movlw	0
  1439  001506  22DD               	addwfc	postdec2,f,c
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1442  001508  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1443  00150C  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1444  001510  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  1445  001514  0E02               	movlw	2
  1446  001516  26DE               	addwf	postinc2,f,c
  1447  001518  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  1448  00151C  0E00               	movlw	0
  1449  00151E  22DD               	addwfc	postdec2,f,c
  1450  001520  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1451  001524  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1452  001528  CFDE F04C          	movff	postinc2,_width
  1453  00152C  CFDD F04D          	movff	postdec2,_width+1
  1454  001530                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1456  001530  BE4D               	btfsc	(_width+1)^0,7,c
  1457  001532  EF9F  F00A         	goto	u7290
  1458  001536  EF9D  F00A         	goto	u7291
  1459  00153A                     u7291:
  1460  00153A  EFEA  F00A         	goto	l5184
  1461  00153E                     u7290:
  1462  00153E                     
  1463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1464  00153E  8050               	bsf	_flags^0,0,c
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1467  001540  6C4C               	negf	_width^0,c
  1468  001542  1E4D               	comf	(_width+1)^0,f,c
  1469  001544  B0D8               	btfsc	status,0,c
  1470  001546  2A4D               	incf	(_width+1)^0,f,c
  1471  001548  EFEA  F00A         	goto	l5184
  1472  00154C                     l5174:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1475  00154C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1476  001550  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1477  001554  CFDE F014          	movff	postinc2,atoi@s
  1478  001558  CFDD F015          	movff	postdec2,atoi@s+1
  1479  00155C  ECEC  F015         	call	_atoi	;wreg free
  1480  001560  C014  F04C         	movff	?_atoi,_width
  1481  001564  C015  F04D         	movff	?_atoi+1,_width+1
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1484  001568  EFBD  F00A         	goto	l5178
  1485  00156C                     l5176:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1489  00156C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1490  001570  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1491  001574  2ADE               	incf	postinc2,f,c
  1492  001576  0E00               	movlw	0
  1493  001578  22DD               	addwfc	postdec2,f,c
  1494  00157A                     l5178:
  1495  00157A  0ED0               	movlw	208
  1496  00157C  0100               	movlb	0	; () banked
  1497  00157E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  1498  001580  0EFF               	movlw	255
  1499  001582  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1500  001584  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501  001588  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502  00158C  CFDE FFF6          	movff	postinc2,tblptrl
  1503  001590  CFDD FFF7          	movff	postdec2,tblptrh
  1504  001594                     	if	0	;tblptru may be non-zero
  1505  001594                     	endif
  1506  001594                     	if	0	;tblptru may be non-zero
  1507  001594                     	endif
  1508  001594  0008               	tblrd		*
  1509  001596  50F5               	movf	tablat,w,c
  1510  001598  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1511  00159A  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1512  00159C  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  1513  00159E  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1514  0015A0  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1515  0015A2  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1516  0015A4  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1517  0015A6  E10A               	bnz	u7300
  1518  0015A8  0E0A               	movlw	10
  1519  0015AA  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1520  0015AC  A0D8               	btfss	status,0,c
  1521  0015AE  EFDB  F00A         	goto	u7301
  1522  0015B2  EFDE  F00A         	goto	u7300
  1523  0015B6                     u7301:
  1524  0015B6  0E01               	movlw	1
  1525  0015B8  EFDF  F00A         	goto	u7310
  1526  0015BC                     u7300:
  1527  0015BC  0E00               	movlw	0
  1528  0015BE                     u7310:
  1529  0015BE  6FAE               	movwf	_vfpfcnvrt$952& (0+255),b
  1530  0015C0  6BAF               	clrf	(_vfpfcnvrt$952+1)& (0+255),b
  1531  0015C2                     
  1532                           ; BSR set to: 0
  1533  0015C2  51AE               	movf	_vfpfcnvrt$952& (0+255),w,b
  1534  0015C4  11AF               	iorwf	(_vfpfcnvrt$952+1)& (0+255),w,b
  1535  0015C6  A4D8               	btfss	status,2,c
  1536  0015C8  EFE8  F00A         	goto	u7321
  1537  0015CC  EFEA  F00A         	goto	u7320
  1538  0015D0                     u7321:
  1539  0015D0  EFB6  F00A         	goto	l5176
  1540  0015D4                     u7320:
  1541  0015D4                     l5184:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1544  0015D4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1545  0015D8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1546  0015DC  CFDE FFF6          	movff	postinc2,tblptrl
  1547  0015E0  CFDD FFF7          	movff	postdec2,tblptrh
  1548  0015E4                     	if	0	;tblptru may be non-zero
  1549  0015E4                     	endif
  1550  0015E4                     	if	0	;tblptru may be non-zero
  1551  0015E4                     	endif
  1552  0015E4  0008               	tblrd		*
  1553  0015E6  50F5               	movf	tablat,w,c
  1554  0015E8  0A2E               	xorlw	46
  1555  0015EA  A4D8               	btfss	status,2,c
  1556  0015EC  EFFA  F00A         	goto	u7331
  1557  0015F0  EFFC  F00A         	goto	u7330
  1558  0015F4                     u7331:
  1559  0015F4  EF7A  F00B         	goto	l5204
  1560  0015F8                     u7330:
  1561  0015F8                     
  1562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1563  0015F8  0E00               	movlw	0
  1564  0015FA  6E4F               	movwf	(_prec+1)^0,c
  1565  0015FC  0E00               	movlw	0
  1566  0015FE  6E4E               	movwf	_prec^0,c
  1567  001600                     
  1568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1569  001600  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1570  001604  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1571  001608  2ADE               	incf	postinc2,f,c
  1572  00160A  0E00               	movlw	0
  1573  00160C  22DD               	addwfc	postdec2,f,c
  1574  00160E                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1576  00160E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1577  001612  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1578  001616  CFDE FFF6          	movff	postinc2,tblptrl
  1579  00161A  CFDD FFF7          	movff	postdec2,tblptrh
  1580  00161E                     	if	0	;tblptru may be non-zero
  1581  00161E                     	endif
  1582  00161E                     	if	0	;tblptru may be non-zero
  1583  00161E                     	endif
  1584  00161E  0008               	tblrd		*
  1585  001620  50F5               	movf	tablat,w,c
  1586  001622  0A2A               	xorlw	42
  1587  001624  A4D8               	btfss	status,2,c
  1588  001626  EF17  F00B         	goto	u7341
  1589  00162A  EF19  F00B         	goto	u7340
  1590  00162E                     u7341:
  1591  00162E  EF36  F00B         	goto	l5194
  1592  001632                     u7340:
  1593  001632                     
  1594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1595  001632  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1596  001636  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1597  00163A  2ADE               	incf	postinc2,f,c
  1598  00163C  0E00               	movlw	0
  1599  00163E  22DD               	addwfc	postdec2,f,c
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1602  001640  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1603  001644  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1604  001648  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  1605  00164C  0E02               	movlw	2
  1606  00164E  26DE               	addwf	postinc2,f,c
  1607  001650  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  1608  001654  0E00               	movlw	0
  1609  001656  22DD               	addwfc	postdec2,f,c
  1610  001658  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1611  00165C  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1612  001660  CFDE F04E          	movff	postinc2,_prec
  1613  001664  CFDD F04F          	movff	postdec2,_prec+1
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1616  001668  EF7A  F00B         	goto	l5204
  1617  00166C                     l5194:
  1618                           
  1619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1620  00166C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1621  001670  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1622  001674  CFDE F014          	movff	postinc2,atoi@s
  1623  001678  CFDD F015          	movff	postdec2,atoi@s+1
  1624  00167C  ECEC  F015         	call	_atoi	;wreg free
  1625  001680  C014  F04E         	movff	?_atoi,_prec
  1626  001684  C015  F04F         	movff	?_atoi+1,_prec+1
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1629  001688  EF4D  F00B         	goto	l5198
  1630  00168C                     l5196:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1634  00168C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1635  001690  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1636  001694  2ADE               	incf	postinc2,f,c
  1637  001696  0E00               	movlw	0
  1638  001698  22DD               	addwfc	postdec2,f,c
  1639  00169A                     l5198:
  1640  00169A  0ED0               	movlw	208
  1641  00169C  0100               	movlb	0	; () banked
  1642  00169E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  1643  0016A0  0EFF               	movlw	255
  1644  0016A2  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1645  0016A4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1646  0016A8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1647  0016AC  CFDE FFF6          	movff	postinc2,tblptrl
  1648  0016B0  CFDD FFF7          	movff	postdec2,tblptrh
  1649  0016B4                     	if	0	;tblptru may be non-zero
  1650  0016B4                     	endif
  1651  0016B4                     	if	0	;tblptru may be non-zero
  1652  0016B4                     	endif
  1653  0016B4  0008               	tblrd		*
  1654  0016B6  50F5               	movf	tablat,w,c
  1655  0016B8  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1656  0016BA  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1657  0016BC  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  1658  0016BE  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1659  0016C0  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1660  0016C2  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1661  0016C4  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1662  0016C6  E10A               	bnz	u7350
  1663  0016C8  0E0A               	movlw	10
  1664  0016CA  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1665  0016CC  A0D8               	btfss	status,0,c
  1666  0016CE  EF6B  F00B         	goto	u7351
  1667  0016D2  EF6E  F00B         	goto	u7350
  1668  0016D6                     u7351:
  1669  0016D6  0E01               	movlw	1
  1670  0016D8  EF6F  F00B         	goto	u7360
  1671  0016DC                     u7350:
  1672  0016DC  0E00               	movlw	0
  1673  0016DE                     u7360:
  1674  0016DE  6FB0               	movwf	_vfpfcnvrt$953& (0+255),b
  1675  0016E0  6BB1               	clrf	(_vfpfcnvrt$953+1)& (0+255),b
  1676  0016E2                     
  1677                           ; BSR set to: 0
  1678  0016E2  51B0               	movf	_vfpfcnvrt$953& (0+255),w,b
  1679  0016E4  11B1               	iorwf	(_vfpfcnvrt$953+1)& (0+255),w,b
  1680  0016E6  A4D8               	btfss	status,2,c
  1681  0016E8  EF78  F00B         	goto	u7371
  1682  0016EC  EF7A  F00B         	goto	u7370
  1683  0016F0                     u7371:
  1684  0016F0  EF46  F00B         	goto	l5196
  1685  0016F4                     u7370:
  1686  0016F4                     l5204:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1689  0016F4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690  0016F8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691  0016FC  CFDE FFF6          	movff	postinc2,tblptrl
  1692  001700  CFDD FFF7          	movff	postdec2,tblptrh
  1693  001704                     	if	0	;tblptru may be non-zero
  1694  001704                     	endif
  1695  001704                     	if	0	;tblptru may be non-zero
  1696  001704                     	endif
  1697  001704  0008               	tblrd		*
  1698  001706  50F5               	movf	tablat,w,c
  1699  001708  6E13               	movwf	tolower@c^0,c
  1700  00170A  6A14               	clrf	(tolower@c+1)^0,c
  1701  00170C  ECB9  F01B         	call	_tolower	;wreg free
  1702  001710  5013               	movf	?_tolower^0,w,c
  1703  001712  0100               	movlb	0	; () banked
  1704  001714  6FB8               	movwf	vfpfcnvrt@ct& (0+255),b
  1705  001716                     
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1708  001716  51B8               	movf	vfpfcnvrt@ct& (0+255),w,b
  1709  001718  B4D8               	btfsc	status,2,c
  1710  00171A  EF91  F00B         	goto	u7381
  1711  00171E  EF93  F00B         	goto	u7380
  1712  001722                     u7381:
  1713  001722  EFCD  F00B         	goto	l5214
  1714  001726                     u7380:
  1715  001726                     
  1716                           ; BSR set to: 0
  1717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1718  001726  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1719  00172A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1720  00172E  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  1721  001732  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  1722  001736  0E01               	movlw	1
  1723  001738  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1724  00173A  0E00               	movlw	0
  1725  00173C  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1726  00173E  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1727  001742  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1728  001746                     	if	0	;tblptru may be non-zero
  1729  001746                     	endif
  1730  001746                     	if	0	;tblptru may be non-zero
  1731  001746                     	endif
  1732  001746  0008               	tblrd		*
  1733  001748  50F5               	movf	tablat,w,c
  1734  00174A  6E13               	movwf	tolower@c^0,c
  1735  00174C  6A14               	clrf	(tolower@c+1)^0,c
  1736  00174E  ECB9  F01B         	call	_tolower	;wreg free
  1737  001752  5013               	movf	?_tolower^0,w,c
  1738  001754  0100               	movlb	0	; () banked
  1739  001756  6FB9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1740  001758                     
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1743  001758  51B9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1744  00175A  B4D8               	btfsc	status,2,c
  1745  00175C  EFB2  F00B         	goto	u7391
  1746  001760  EFB4  F00B         	goto	u7390
  1747  001764                     u7391:
  1748  001764  EFCD  F00B         	goto	l5214
  1749  001768                     u7390:
  1750  001768                     
  1751                           ; BSR set to: 0
  1752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1753  001768  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1754  00176C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1755  001770  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  1756  001774  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  1757  001778  0E02               	movlw	2
  1758  00177A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1759  00177C  0E00               	movlw	0
  1760  00177E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1761  001780  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1762  001784  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1763  001788                     	if	0	;tblptru may be non-zero
  1764  001788                     	endif
  1765  001788                     	if	0	;tblptru may be non-zero
  1766  001788                     	endif
  1767  001788  0008               	tblrd		*
  1768  00178A  50F5               	movf	tablat,w,c
  1769  00178C  6E13               	movwf	tolower@c^0,c
  1770  00178E  6A14               	clrf	(tolower@c+1)^0,c
  1771  001790  ECB9  F01B         	call	_tolower	;wreg free
  1772  001794  5013               	movf	?_tolower^0,w,c
  1773  001796  0100               	movlb	0	; () banked
  1774  001798  6FBA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1775  00179A                     l5214:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1779  00179A  0E66               	movlw	102
  1780  00179C  19B8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1781  00179E  A4D8               	btfss	status,2,c
  1782  0017A0  EFD4  F00B         	goto	u7401
  1783  0017A4  EFD6  F00B         	goto	u7400
  1784  0017A8                     u7401:
  1785  0017A8  EF16  F00C         	goto	l5226
  1786  0017AC                     u7400:
  1787  0017AC                     
  1788                           ; BSR set to: 0
  1789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1790  0017AC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1791  0017B0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1792  0017B4  CFDE FFF6          	movff	postinc2,tblptrl
  1793  0017B8  CFDD FFF7          	movff	postdec2,tblptrh
  1794  0017BC                     	if	0	;tblptru may be non-zero
  1795  0017BC                     	endif
  1796  0017BC                     	if	0	;tblptru may be non-zero
  1797  0017BC                     	endif
  1798  0017BC  0008               	tblrd		*
  1799  0017BE  CFF5 F0BB          	movff	tablat,vfpfcnvrt@c
  1800  0017C2                     
  1801                           ; BSR set to: 0
  1802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1803  0017C2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1804  0017C6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1805  0017CA  2ADE               	incf	postinc2,f,c
  1806  0017CC  0E00               	movlw	0
  1807  0017CE  22DD               	addwfc	postdec2,f,c
  1808  0017D0                     
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1811  0017D0  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1812  0017D4  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1813  0017D8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  1814  0017DC  0E04               	movlw	4
  1815  0017DE  26DE               	addwf	postinc2,f,c
  1816  0017E0  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  1817  0017E4  0E00               	movlw	0
  1818  0017E6  22DD               	addwfc	postdec2,f,c
  1819  0017E8  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1820  0017EC  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1821  0017F0  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f
  1822  0017F4  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+1
  1823  0017F8  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f+2
  1824  0017FC  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+3
  1825  001800                     l5222:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1829  001800  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  1830  001804  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1831  001808  C0B4  F062         	movff	vfpfcnvrt@f,efgtoa@f
  1832  00180C  C0B5  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1833  001810  C0B6  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1834  001814  C0B7  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1835  001818  C0BB  F066         	movff	vfpfcnvrt@c,efgtoa@c
  1836  00181C  EC1B  F004         	call	_efgtoa	;wreg free
  1837  001820  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  1838  001824  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1839  001828  EFFC  F00C         	goto	l934
  1840  00182C                     l5226:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1844  00182C  0EB8               	movlw	low vfpfcnvrt@ct
  1845  00182E  6E0D               	movwf	strncmp@_l^0,c
  1846  001830  0E00               	movlw	high vfpfcnvrt@ct
  1847  001832  6E0E               	movwf	(strncmp@_l+1)^0,c
  1848  001834  0E32               	movlw	low STR_12
  1849  001836  6E0F               	movwf	strncmp@_r^0,c
  1850  001838  0E08               	movlw	high STR_12
  1851  00183A  6E10               	movwf	(strncmp@_r+1)^0,c
  1852  00183C  0E00               	movlw	0
  1853  00183E  6E12               	movwf	(strncmp@n+1)^0,c
  1854  001840  0E02               	movlw	2
  1855  001842  6E11               	movwf	strncmp@n^0,c
  1856  001844  ECBA  F018         	call	_strncmp	;wreg free
  1857  001848  500D               	movf	?_strncmp^0,w,c
  1858  00184A  100E               	iorwf	(?_strncmp+1)^0,w,c
  1859  00184C  A4D8               	btfss	status,2,c
  1860  00184E  EF2B  F00C         	goto	u7411
  1861  001852  EF2D  F00C         	goto	u7410
  1862  001856                     u7411:
  1863  001856  EFA9  F00C         	goto	l5242
  1864  00185A                     u7410:
  1865  00185A                     
  1866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1867  00185A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1868  00185E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1869  001862  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  1870  001866  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  1871  00186A  0E01               	movlw	1
  1872  00186C  0100               	movlb	0	; () banked
  1873  00186E  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  1874  001870  0E00               	movlw	0
  1875  001872  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1876  001874  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1877  001878  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1878  00187C                     	if	0	;tblptru may be non-zero
  1879  00187C                     	endif
  1880  00187C                     	if	0	;tblptru may be non-zero
  1881  00187C                     	endif
  1882  00187C  0008               	tblrd		*
  1883  00187E  CFF5 F0BB          	movff	tablat,vfpfcnvrt@c
  1884  001882  0EBF               	movlw	191
  1885  001884  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  1886  001886  0EFF               	movlw	255
  1887  001888  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1888  00188A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1889  00188E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1890  001892  CFDE FFF6          	movff	postinc2,tblptrl
  1891  001896  CFDD FFF7          	movff	postdec2,tblptrh
  1892  00189A                     	if	0	;tblptru may be non-zero
  1893  00189A                     	endif
  1894  00189A                     	if	0	;tblptru may be non-zero
  1895  00189A                     	endif
  1896  00189A  0008               	tblrd		*
  1897  00189C  50F5               	movf	tablat,w,c
  1898  00189E  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1899  0018A0  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1900  0018A2  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  1901  0018A4  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1902  0018A6  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1903  0018A8  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1904  0018AA  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1905  0018AC  E10A               	bnz	u7420
  1906  0018AE  0E1A               	movlw	26
  1907  0018B0  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1908  0018B2  A0D8               	btfss	status,0,c
  1909  0018B4  EF5E  F00C         	goto	u7421
  1910  0018B8  EF61  F00C         	goto	u7420
  1911  0018BC                     u7421:
  1912  0018BC  0E01               	movlw	1
  1913  0018BE  EF62  F00C         	goto	u7430
  1914  0018C2                     u7420:
  1915  0018C2  0E00               	movlw	0
  1916  0018C4                     u7430:
  1917  0018C4  6FB2               	movwf	_vfpfcnvrt$957& (0+255),b
  1918  0018C6  6BB3               	clrf	(_vfpfcnvrt$957+1)& (0+255),b
  1919  0018C8                     
  1920                           ; BSR set to: 0
  1921  0018C8  51B2               	movf	_vfpfcnvrt$957& (0+255),w,b
  1922  0018CA  11B3               	iorwf	(_vfpfcnvrt$957+1)& (0+255),w,b
  1923  0018CC  B4D8               	btfsc	status,2,c
  1924  0018CE  EF6B  F00C         	goto	u7441
  1925  0018D2  EF6D  F00C         	goto	u7440
  1926  0018D6                     u7441:
  1927  0018D6  EF87  F00C         	goto	l5236
  1928  0018DA                     u7440:
  1929  0018DA                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1932  0018DA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1933  0018DE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1934  0018E2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  1935  0018E6  0E04               	movlw	4
  1936  0018E8  26DE               	addwf	postinc2,f,c
  1937  0018EA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  1938  0018EE  0E00               	movlw	0
  1939  0018F0  22DD               	addwfc	postdec2,f,c
  1940  0018F2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1941  0018F6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1942  0018FA  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f
  1943  0018FE  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+1
  1944  001902  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f+2
  1945  001906  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+3
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1948  00190A  EF9F  F00C         	goto	l941
  1949  00190E                     l5236:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1953  00190E  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1954  001912  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1955  001916  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  1956  00191A  0E04               	movlw	4
  1957  00191C  26DE               	addwf	postinc2,f,c
  1958  00191E  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  1959  001922  0E00               	movlw	0
  1960  001924  22DD               	addwfc	postdec2,f,c
  1961  001926  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1962  00192A  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1963  00192E  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f
  1964  001932  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+1
  1965  001936  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f+2
  1966  00193A  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+3
  1967  00193E                     l941:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1971  00193E  0E02               	movlw	2
  1972  001940  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973  001944  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974  001948  26DE               	addwf	postinc2,f,c
  1975  00194A  0E00               	movlw	0
  1976  00194C  22DD               	addwfc	postdec2,f,c
  1977  00194E  EF00  F00C         	goto	l5222
  1978  001952                     l5242:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1981  001952  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1982  001956  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1983  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  1984  00195E  CFDD FFF7          	movff	postdec2,tblptrh
  1985  001962                     	if	0	;tblptru may be non-zero
  1986  001962                     	endif
  1987  001962                     	if	0	;tblptru may be non-zero
  1988  001962                     	endif
  1989  001962  0008               	tblrd		*
  1990  001964  50F5               	movf	tablat,w,c
  1991  001966  0A25               	xorlw	37
  1992  001968  A4D8               	btfss	status,2,c
  1993  00196A  EFB9  F00C         	goto	u7451
  1994  00196E  EFBB  F00C         	goto	u7450
  1995  001972                     u7451:
  1996  001972  EFD3  F00C         	goto	l5252
  1997  001976                     u7450:
  1998  001976                     
  1999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2000  001976  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2001  00197A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2002  00197E  2ADE               	incf	postinc2,f,c
  2003  001980  0E00               	movlw	0
  2004  001982  22DD               	addwfc	postdec2,f,c
  2005  001984                     
  2006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2007  001984  0E00               	movlw	0
  2008  001986  6E0E               	movwf	(fputc@c+1)^0,c
  2009  001988  0E25               	movlw	37
  2010  00198A  6E0D               	movwf	fputc@c^0,c
  2011  00198C  C0A4  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2012  001990  C0A5  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2013  001994  EC25  F019         	call	_fputc	;wreg free
  2014  001998                     l5248:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2017  001998  0E00               	movlw	0
  2018  00199A  0100               	movlb	0	; () banked
  2019  00199C  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2020  00199E  0E01               	movlw	1
  2021  0019A0  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  2022  0019A2  EFFC  F00C         	goto	l934
  2023  0019A6                     l5252:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2026  0019A6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2027  0019AA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2028  0019AE  2ADE               	incf	postinc2,f,c
  2029  0019B0  0E00               	movlw	0
  2030  0019B2  22DD               	addwfc	postdec2,f,c
  2031  0019B4                     
  2032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2033  0019B4  0E00               	movlw	0
  2034  0019B6  0100               	movlb	0	; () banked
  2035  0019B8  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2036  0019BA  0E00               	movlw	0
  2037  0019BC  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  2038  0019BE  EFFC  F00C         	goto	l934
  2039  0019C2                     l5258:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2042  0019C2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2043  0019C6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2044  0019CA  CFDE FFF6          	movff	postinc2,tblptrl
  2045  0019CE  CFDD FFF7          	movff	postdec2,tblptrh
  2046  0019D2                     	if	0	;tblptru may be non-zero
  2047  0019D2                     	endif
  2048  0019D2                     	if	0	;tblptru may be non-zero
  2049  0019D2                     	endif
  2050  0019D2  0008               	tblrd		*
  2051  0019D4  50F5               	movf	tablat,w,c
  2052  0019D6  6E0D               	movwf	fputc@c^0,c
  2053  0019D8  6A0E               	clrf	(fputc@c+1)^0,c
  2054  0019DA  C0A4  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  2055  0019DE  C0A5  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2056  0019E2  EC25  F019         	call	_fputc	;wreg free
  2057  0019E6                     
  2058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2059  0019E6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  0019EA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  0019EE  2ADE               	incf	postinc2,f,c
  2062  0019F0  0E00               	movlw	0
  2063  0019F2  22DD               	addwfc	postdec2,f,c
  2064  0019F4  EFCC  F00C         	goto	l5248
  2065  0019F8                     l934:
  2066  0019F8  0012               	return		;funcret
  2067  0019FA                     __end_of_vfpfcnvrt:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _strncmp *****************
  2071 ;; Defined at:
  2072 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  _l              2   12[COMRAM] PTR const unsigned char 
  2075 ;;		 -> vfpfcnvrt@ct(3), 
  2076 ;;  _r              2   14[COMRAM] PTR const unsigned char 
  2077 ;;		 -> STR_14(3), 
  2078 ;;  n               2   16[COMRAM] unsigned int 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  r               2   21[COMRAM] PTR const unsigned char 
  2081 ;;		 -> STR_14(3), 
  2082 ;;  l               2   19[COMRAM] PTR const unsigned char 
  2083 ;;		 -> vfpfcnvrt@ct(3), 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2   12[COMRAM] int 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         6       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2096 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:       11 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 2
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_vfpfcnvrt
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text4
  2108  003174                     __ptext4:
  2109                           	callstack 0
  2110  003174                     _strncmp:
  2111                           	callstack 25
  2112  003174  C00D  F014         	movff	strncmp@_l,strncmp@l
  2113  003178  C00E  F015         	movff	strncmp@_l+1,strncmp@l+1
  2114  00317C  C00F  F016         	movff	strncmp@_r,strncmp@r
  2115  003180  C010  F017         	movff	strncmp@_r+1,strncmp@r+1
  2116  003184  0611               	decf	strncmp@n^0,f,c
  2117  003186  A0D8               	btfss	status,0,c
  2118  003188  0612               	decf	(strncmp@n+1)^0,f,c
  2119  00318A  2811               	incf	strncmp@n^0,w,c
  2120  00318C  E106               	bnz	u7221
  2121  00318E  2812               	incf	(strncmp@n+1)^0,w,c
  2122  003190  A4D8               	btfss	status,2,c
  2123  003192  EFCD  F018         	goto	u7221
  2124  003196  EFCF  F018         	goto	u7220
  2125  00319A                     u7221:
  2126  00319A  EFDC  F018         	goto	l5146
  2127  00319E                     u7220:
  2128  00319E  0E00               	movlw	0
  2129  0031A0  6E0E               	movwf	(?_strncmp+1)^0,c
  2130  0031A2  0E00               	movlw	0
  2131  0031A4  6E0D               	movwf	?_strncmp^0,c
  2132  0031A6  EF24  F019         	goto	l1062
  2133  0031AA                     l5144:
  2134  0031AA  4A14               	infsnz	strncmp@l^0,f,c
  2135  0031AC  2A15               	incf	(strncmp@l+1)^0,f,c
  2136  0031AE  4A16               	infsnz	strncmp@r^0,f,c
  2137  0031B0  2A17               	incf	(strncmp@r+1)^0,f,c
  2138  0031B2  0611               	decf	strncmp@n^0,f,c
  2139  0031B4  A0D8               	btfss	status,0,c
  2140  0031B6  0612               	decf	(strncmp@n+1)^0,f,c
  2141  0031B8                     l5146:
  2142  0031B8  C014  FFD9         	movff	strncmp@l,fsr2l
  2143  0031BC  C015  FFDA         	movff	strncmp@l+1,fsr2h
  2144  0031C0  50DF               	movf	indf2,w,c
  2145  0031C2  B4D8               	btfsc	status,2,c
  2146  0031C4  EFE6  F018         	goto	u7231
  2147  0031C8  EFE8  F018         	goto	u7230
  2148  0031CC                     u7231:
  2149  0031CC  EF13  F019         	goto	l5154
  2150  0031D0                     u7230:
  2151  0031D0  C016  FFF6         	movff	strncmp@r,tblptrl
  2152  0031D4  C017  FFF7         	movff	strncmp@r+1,tblptrh
  2153  0031D8                     	if	0	;tblptru may be non-zero
  2154  0031D8                     	endif
  2155  0031D8                     	if	0	;tblptru may be non-zero
  2156  0031D8                     	endif
  2157  0031D8  0008               	tblrd		*
  2158  0031DA  50F5               	movf	tablat,w,c
  2159  0031DC  0900               	iorlw	0
  2160  0031DE  B4D8               	btfsc	status,2,c
  2161  0031E0  EFF4  F018         	goto	u7241
  2162  0031E4  EFF6  F018         	goto	u7240
  2163  0031E8                     u7241:
  2164  0031E8  EF13  F019         	goto	l5154
  2165  0031EC                     u7240:
  2166  0031EC  5011               	movf	strncmp@n^0,w,c
  2167  0031EE  1012               	iorwf	(strncmp@n+1)^0,w,c
  2168  0031F0  B4D8               	btfsc	status,2,c
  2169  0031F2  EFFD  F018         	goto	u7251
  2170  0031F6  EFFF  F018         	goto	u7250
  2171  0031FA                     u7251:
  2172  0031FA  EF13  F019         	goto	l5154
  2173  0031FE                     u7250:
  2174  0031FE  C014  FFD9         	movff	strncmp@l,fsr2l
  2175  003202  C015  FFDA         	movff	strncmp@l+1,fsr2h
  2176  003206  50DF               	movf	indf2,w,c
  2177  003208  6E13               	movwf	??_strncmp^0,c
  2178  00320A  C016  FFF6         	movff	strncmp@r,tblptrl
  2179  00320E  C017  FFF7         	movff	strncmp@r+1,tblptrh
  2180  003212                     	if	0	;tblptru may be non-zero
  2181  003212                     	endif
  2182  003212                     	if	0	;tblptru may be non-zero
  2183  003212                     	endif
  2184  003212  0008               	tblrd		*
  2185  003214  50F5               	movf	tablat,w,c
  2186  003216  1813               	xorwf	??_strncmp^0,w,c
  2187  003218  B4D8               	btfsc	status,2,c
  2188  00321A  EF11  F019         	goto	u7261
  2189  00321E  EF13  F019         	goto	u7260
  2190  003222                     u7261:
  2191  003222  EFD5  F018         	goto	l5144
  2192  003226                     u7260:
  2193  003226                     l5154:
  2194  003226  C014  FFD9         	movff	strncmp@l,fsr2l
  2195  00322A  C015  FFDA         	movff	strncmp@l+1,fsr2h
  2196  00322E  50DF               	movf	indf2,w,c
  2197  003230  6E13               	movwf	??_strncmp^0,c
  2198  003232  C016  FFF6         	movff	strncmp@r,tblptrl
  2199  003236  C017  FFF7         	movff	strncmp@r+1,tblptrh
  2200  00323A                     	if	0	;tblptru may be non-zero
  2201  00323A                     	endif
  2202  00323A                     	if	0	;tblptru may be non-zero
  2203  00323A                     	endif
  2204  00323A  0008               	tblrd		*
  2205  00323C  50F5               	movf	tablat,w,c
  2206  00323E  5C13               	subwf	??_strncmp^0,w,c
  2207  003240  6E0D               	movwf	?_strncmp^0,c
  2208  003242  6A0E               	clrf	(?_strncmp+1)^0,c
  2209  003244  A0D8               	btfss	status,0,c
  2210  003246  060E               	decf	(?_strncmp+1)^0,f,c
  2211  003248                     l1062:
  2212  003248  0012               	return		;funcret
  2213  00324A                     __end_of_strncmp:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _efgtoa *****************
  2217 ;; Defined at:
  2218 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2221 ;;		 -> sprintf@f(6), 
  2222 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2223 ;;  c               1    6[BANK0 ] unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  u               4   64[BANK0 ] unsigned char 
  2226 ;;  g               4   56[BANK0 ] unsigned char 
  2227 ;;  l               4   50[BANK0 ] unsigned char 
  2228 ;;  h               4   46[BANK0 ] unsigned char 
  2229 ;;  ou              4   32[BANK0 ] unsigned char 
  2230 ;;  n               2   62[BANK0 ] int 
  2231 ;;  e               2   60[BANK0 ] int 
  2232 ;;  i               2   54[BANK0 ] int 
  2233 ;;  w               2   42[BANK0 ] int 
  2234 ;;  p               2   40[BANK0 ] int 
  2235 ;;  sign            2   38[BANK0 ] int 
  2236 ;;  d               2   36[BANK0 ] int 
  2237 ;;  m               2   30[BANK0 ] int 
  2238 ;;  ne              2   28[BANK0 ] int 
  2239 ;;  pp              2   26[BANK0 ] int 
  2240 ;;  t               2   24[BANK0 ] int 
  2241 ;;  mode            1   45[BANK0 ] unsigned char 
  2242 ;;  nmode           1   44[BANK0 ] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    0[BANK0 ] int 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         0       7       0       0       0       0       0       0       0
  2253 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2254 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2255 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2256 ;;Total ram usage:       68 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 6
  2259 ;; This function calls:
  2260 ;;		___awdiv
  2261 ;;		___awmod
  2262 ;;		___fladd
  2263 ;;		___fldiv
  2264 ;;		___fleq
  2265 ;;		___flge
  2266 ;;		___flmul
  2267 ;;		___flneg
  2268 ;;		___flsub
  2269 ;;		___fltol
  2270 ;;		___fpclassifyf
  2271 ;;		_floorf
  2272 ;;		_isupper
  2273 ;;		_pad
  2274 ;;		_strcpy
  2275 ;;		_tolower
  2276 ;; This function is called by:
  2277 ;;		_vfpfcnvrt
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text5
  2282  000836                     __ptext5:
  2283                           	callstack 0
  2284  000836                     _efgtoa:
  2285                           	callstack 21
  2286  000836                     
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2288  000836  0E00               	movlw	0
  2289  000838  0100               	movlb	0	; () banked
  2290  00083A  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  2291  00083C  0E00               	movlw	0
  2292  00083E  6F86               	movwf	efgtoa@sign& (0+255),b
  2293  000840                     
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2296  000840  C062  F098         	movff	efgtoa@f,efgtoa@g
  2297  000844  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  2298  000848  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  2299  00084C  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  2300  000850                     
  2301                           ; BSR set to: 0
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2303  000850  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2304  000852  EF2F  F004         	goto	u6610
  2305  000856  EF2D  F004         	goto	u6611
  2306  00085A                     u6611:
  2307  00085A  EF45  F004         	goto	l4798
  2308  00085E                     u6610:
  2309  00085E                     
  2310                           ; BSR set to: 0
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2312  00085E  0E00               	movlw	0
  2313  000860  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  2314  000862  0E01               	movlw	1
  2315  000864  6F86               	movwf	efgtoa@sign& (0+255),b
  2316  000866                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2319  000866  C098  F00D         	movff	efgtoa@g,___flneg@f1
  2320  00086A  C099  F00E         	movff	efgtoa@g+1,___flneg@f1+1
  2321  00086E  C09A  F00F         	movff	efgtoa@g+2,___flneg@f1+2
  2322  000872  C09B  F010         	movff	efgtoa@g+3,___flneg@f1+3
  2323  000876  ECF1  F01C         	call	___flneg	;wreg free
  2324  00087A  C00D  F098         	movff	?___flneg,efgtoa@g
  2325  00087E  C00E  F099         	movff	?___flneg+1,efgtoa@g+1
  2326  000882  C00F  F09A         	movff	?___flneg+2,efgtoa@g+2
  2327  000886  C010  F09B         	movff	?___flneg+3,efgtoa@g+3
  2328  00088A                     l4798:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2331  00088A  0E00               	movlw	0
  2332  00088C  0100               	movlb	0	; () banked
  2333  00088E  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  2334  000890  0E00               	movlw	0
  2335  000892  6F9E               	movwf	efgtoa@n& (0+255),b
  2336  000894                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2339  000894  C04C  F08A         	movff	_width,efgtoa@w
  2340  000898  C04D  F08B         	movff	_width+1,efgtoa@w+1
  2341  00089C                     
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2344  00089C  5186               	movf	efgtoa@sign& (0+255),w,b
  2345  00089E  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2346  0008A0  A4D8               	btfss	status,2,c
  2347  0008A2  EF55  F004         	goto	u6621
  2348  0008A6  EF57  F004         	goto	u6620
  2349  0008AA                     u6621:
  2350  0008AA  EF5E  F004         	goto	l4806
  2351  0008AE                     u6620:
  2352  0008AE                     
  2353                           ; BSR set to: 0
  2354  0008AE  A450               	btfss	_flags^0,2,c
  2355  0008B0  EF5C  F004         	goto	u6631
  2356  0008B4  EF5E  F004         	goto	u6630
  2357  0008B8                     u6631:
  2358  0008B8  EF78  F004         	goto	l4818
  2359  0008BC                     u6630:
  2360  0008BC                     l4806:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2364  0008BC  5186               	movf	efgtoa@sign& (0+255),w,b
  2365  0008BE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2366  0008C0  A4D8               	btfss	status,2,c
  2367  0008C2  EF65  F004         	goto	u6641
  2368  0008C6  EF67  F004         	goto	u6640
  2369  0008CA                     u6641:
  2370  0008CA  EF6D  F004         	goto	l4810
  2371  0008CE                     u6640:
  2372  0008CE                     
  2373                           ; BSR set to: 0
  2374  0008CE  0E00               	movlw	0
  2375  0008D0  6F6D               	movwf	(_efgtoa$926+1)& (0+255),b
  2376  0008D2  0E2B               	movlw	43
  2377  0008D4  6F6C               	movwf	_efgtoa$926& (0+255),b
  2378  0008D6  EF71  F004         	goto	l4812
  2379  0008DA                     l4810:
  2380                           
  2381                           ; BSR set to: 0
  2382  0008DA  0E00               	movlw	0
  2383  0008DC  6F6D               	movwf	(_efgtoa$926+1)& (0+255),b
  2384  0008DE  0E2D               	movlw	45
  2385  0008E0  6F6C               	movwf	_efgtoa$926& (0+255),b
  2386  0008E2                     l4812:
  2387                           
  2388                           ; BSR set to: 0
  2389  0008E2  C06C  F100         	movff	_efgtoa$926,_dbuf
  2390  0008E6                     
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2393  0008E6  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  2394  0008E8  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  2395  0008EA                     
  2396                           ; BSR set to: 0
  2397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2398  0008EA  078A               	decf	efgtoa@w& (0+255),f,b
  2399  0008EC  A0D8               	btfss	status,0,c
  2400  0008EE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  2401  0008F0                     l4818:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2405  0008F0  C098  F00D         	movff	efgtoa@g,___fpclassifyf@x
  2406  0008F4  C099  F00E         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2407  0008F8  C09A  F00F         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2408  0008FC  C09B  F010         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2409  000900  EC3B  F018         	call	___fpclassifyf	;wreg free
  2410  000904  040D               	decf	?___fpclassifyf^0,w,c
  2411  000906  100E               	iorwf	(?___fpclassifyf+1)^0,w,c
  2412  000908  A4D8               	btfss	status,2,c
  2413  00090A  EF89  F004         	goto	u6651
  2414  00090E  EF8B  F004         	goto	u6650
  2415  000912                     u6651:
  2416  000912  EFE2  F004         	goto	l4836
  2417  000916                     u6650:
  2418  000916  0EBF               	movlw	191
  2419  000918  0100               	movlb	0	; () banked
  2420  00091A  6F67               	movwf	??_efgtoa& (0+255),b
  2421  00091C  0EFF               	movlw	255
  2422  00091E  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2423  000920  5166               	movf	efgtoa@c& (0+255),w,b
  2424  000922  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  2425  000924  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  2426  000926  5167               	movf	??_efgtoa& (0+255),w,b
  2427  000928  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2428  00092A  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2429  00092C  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2430  00092E  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2431  000930  E10A               	bnz	u6660
  2432  000932  0E1A               	movlw	26
  2433  000934  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2434  000936  A0D8               	btfss	status,0,c
  2435  000938  EFA0  F004         	goto	u6661
  2436  00093C  EFA3  F004         	goto	u6660
  2437  000940                     u6661:
  2438  000940  0E01               	movlw	1
  2439  000942  EFA4  F004         	goto	u6670
  2440  000946                     u6660:
  2441  000946  0E00               	movlw	0
  2442  000948                     u6670:
  2443  000948  6F6E               	movwf	_efgtoa$927& (0+255),b
  2444  00094A  6B6F               	clrf	(_efgtoa$927+1)& (0+255),b
  2445  00094C                     
  2446                           ; BSR set to: 0
  2447  00094C  516E               	movf	_efgtoa$927& (0+255),w,b
  2448  00094E  116F               	iorwf	(_efgtoa$927+1)& (0+255),w,b
  2449  000950  B4D8               	btfsc	status,2,c
  2450  000952  EFAD  F004         	goto	u6681
  2451  000956  EFAF  F004         	goto	u6680
  2452  00095A                     u6681:
  2453  00095A  EFBD  F004         	goto	l4828
  2454  00095E                     u6680:
  2455  00095E                     
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2458  00095E  0E00               	movlw	low _dbuf
  2459  000960  259E               	addwf	efgtoa@n& (0+255),w,b
  2460  000962  6E0D               	movwf	strcpy@dest^0,c
  2461  000964  0E01               	movlw	high _dbuf
  2462  000966  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2463  000968  6E0E               	movwf	(strcpy@dest+1)^0,c
  2464  00096A  0E22               	movlw	low STR_4
  2465  00096C  6E0F               	movwf	strcpy@src^0,c
  2466  00096E  0E08               	movlw	high STR_4
  2467  000970  6E10               	movwf	(strcpy@src+1)^0,c
  2468  000972  ECE9  F01B         	call	_strcpy	;wreg free
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2471  000976  EFC9  F004         	goto	l4830
  2472  00097A                     l4828:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2476  00097A  0E00               	movlw	low _dbuf
  2477  00097C  259E               	addwf	efgtoa@n& (0+255),w,b
  2478  00097E  6E0D               	movwf	strcpy@dest^0,c
  2479  000980  0E01               	movlw	high _dbuf
  2480  000982  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2481  000984  6E0E               	movwf	(strcpy@dest+1)^0,c
  2482  000986  0E2A               	movlw	low STR_5
  2483  000988  6E0F               	movwf	strcpy@src^0,c
  2484  00098A  0E08               	movlw	high STR_5
  2485  00098C  6E10               	movwf	(strcpy@src+1)^0,c
  2486  00098E  ECE9  F01B         	call	_strcpy	;wreg free
  2487  000992                     l4830:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2490  000992  0100               	movlb	0	; () banked
  2491  000994  0EFD               	movlw	253
  2492  000996  278A               	addwf	efgtoa@w& (0+255),f,b
  2493  000998  0EFF               	movlw	255
  2494  00099A  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2495  00099C                     l4832:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2498  00099C  C060  F01D         	movff	efgtoa@fp,pad@fp
  2499  0009A0  C061  F01E         	movff	efgtoa@fp+1,pad@fp+1
  2500  0009A4  0E00               	movlw	low _dbuf
  2501  0009A6  6E1F               	movwf	pad@buf^0,c
  2502  0009A8  0E01               	movlw	high _dbuf
  2503  0009AA  6E20               	movwf	(pad@buf+1)^0,c
  2504  0009AC  C08A  F021         	movff	efgtoa@w,pad@p
  2505  0009B0  C08B  F022         	movff	efgtoa@w+1,pad@p+1
  2506  0009B4  ECEC  F019         	call	_pad	;wreg free
  2507  0009B8  C01D  F060         	movff	?_pad,?_efgtoa
  2508  0009BC  C01E  F061         	movff	?_pad+1,?_efgtoa+1
  2509  0009C0  EF47  F00A         	goto	l832
  2510  0009C4                     l4836:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2513  0009C4  C098  F00D         	movff	efgtoa@g,___fpclassifyf@x
  2514  0009C8  C099  F00E         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2515  0009CC  C09A  F00F         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2516  0009D0  C09B  F010         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2517  0009D4  EC3B  F018         	call	___fpclassifyf	;wreg free
  2518  0009D8  500D               	movf	?___fpclassifyf^0,w,c
  2519  0009DA  100E               	iorwf	(?___fpclassifyf+1)^0,w,c
  2520  0009DC  A4D8               	btfss	status,2,c
  2521  0009DE  EFF3  F004         	goto	u6691
  2522  0009E2  EFF5  F004         	goto	u6690
  2523  0009E6                     u6691:
  2524  0009E6  EF35  F005         	goto	l4854
  2525  0009EA                     u6690:
  2526  0009EA  0EBF               	movlw	191
  2527  0009EC  0100               	movlb	0	; () banked
  2528  0009EE  6F67               	movwf	??_efgtoa& (0+255),b
  2529  0009F0  0EFF               	movlw	255
  2530  0009F2  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2531  0009F4  5166               	movf	efgtoa@c& (0+255),w,b
  2532  0009F6  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  2533  0009F8  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  2534  0009FA  5167               	movf	??_efgtoa& (0+255),w,b
  2535  0009FC  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2536  0009FE  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2537  000A00  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2538  000A02  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2539  000A04  E10A               	bnz	u6700
  2540  000A06  0E1A               	movlw	26
  2541  000A08  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2542  000A0A  A0D8               	btfss	status,0,c
  2543  000A0C  EF0A  F005         	goto	u6701
  2544  000A10  EF0D  F005         	goto	u6700
  2545  000A14                     u6701:
  2546  000A14  0E01               	movlw	1
  2547  000A16  EF0E  F005         	goto	u6710
  2548  000A1A                     u6700:
  2549  000A1A  0E00               	movlw	0
  2550  000A1C                     u6710:
  2551  000A1C  6F70               	movwf	_efgtoa$932& (0+255),b
  2552  000A1E  6B71               	clrf	(_efgtoa$932+1)& (0+255),b
  2553  000A20                     
  2554                           ; BSR set to: 0
  2555  000A20  5170               	movf	_efgtoa$932& (0+255),w,b
  2556  000A22  1171               	iorwf	(_efgtoa$932+1)& (0+255),w,b
  2557  000A24  B4D8               	btfsc	status,2,c
  2558  000A26  EF17  F005         	goto	u6721
  2559  000A2A  EF19  F005         	goto	u6720
  2560  000A2E                     u6721:
  2561  000A2E  EF27  F005         	goto	l4846
  2562  000A32                     u6720:
  2563  000A32                     
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2566  000A32  0E00               	movlw	low _dbuf
  2567  000A34  259E               	addwf	efgtoa@n& (0+255),w,b
  2568  000A36  6E0D               	movwf	strcpy@dest^0,c
  2569  000A38  0E01               	movlw	high _dbuf
  2570  000A3A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2571  000A3C  6E0E               	movwf	(strcpy@dest+1)^0,c
  2572  000A3E  0E26               	movlw	low STR_8
  2573  000A40  6E0F               	movwf	strcpy@src^0,c
  2574  000A42  0E08               	movlw	high STR_8
  2575  000A44  6E10               	movwf	(strcpy@src+1)^0,c
  2576  000A46  ECE9  F01B         	call	_strcpy	;wreg free
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2579  000A4A  EFC9  F004         	goto	l4830
  2580  000A4E                     l4846:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2584  000A4E  0E00               	movlw	low _dbuf
  2585  000A50  259E               	addwf	efgtoa@n& (0+255),w,b
  2586  000A52  6E0D               	movwf	strcpy@dest^0,c
  2587  000A54  0E01               	movlw	high _dbuf
  2588  000A56  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2589  000A58  6E0E               	movwf	(strcpy@dest+1)^0,c
  2590  000A5A  0E2E               	movlw	low STR_9
  2591  000A5C  6E0F               	movwf	strcpy@src^0,c
  2592  000A5E  0E08               	movlw	high STR_9
  2593  000A60  6E10               	movwf	(strcpy@src+1)^0,c
  2594  000A62  ECE9  F01B         	call	_strcpy	;wreg free
  2595  000A66  EFC9  F004         	goto	l4830
  2596  000A6A                     l4854:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2599  000A6A  0E00               	movlw	0
  2600  000A6C  0100               	movlb	0	; () banked
  2601  000A6E  6FA0               	movwf	efgtoa@u& (0+255),b
  2602  000A70  0E00               	movlw	0
  2603  000A72  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  2604  000A74  0E80               	movlw	128
  2605  000A76  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  2606  000A78  0E3F               	movlw	63
  2607  000A7A  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2610  000A7C  0E00               	movlw	0
  2611  000A7E  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  2612  000A80  0E00               	movlw	0
  2613  000A82  6F9C               	movwf	efgtoa@e& (0+255),b
  2614  000A84                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2617  000A84  C098  F00D         	movff	efgtoa@g,___fleq@ff1
  2618  000A88  C099  F00E         	movff	efgtoa@g+1,___fleq@ff1+1
  2619  000A8C  C09A  F00F         	movff	efgtoa@g+2,___fleq@ff1+2
  2620  000A90  C09B  F010         	movff	efgtoa@g+3,___fleq@ff1+3
  2621  000A94  0E00               	movlw	0
  2622  000A96  6E11               	movwf	___fleq@ff2^0,c
  2623  000A98  0E00               	movlw	0
  2624  000A9A  6E12               	movwf	(___fleq@ff2+1)^0,c
  2625  000A9C  0E00               	movlw	0
  2626  000A9E  6E13               	movwf	(___fleq@ff2+2)^0,c
  2627  000AA0  0E00               	movlw	0
  2628  000AA2  6E14               	movwf	(___fleq@ff2+3)^0,c
  2629  000AA4  ECA5  F01A         	call	___fleq	;wreg free
  2630  000AA8  B0D8               	btfsc	status,0,c
  2631  000AAA  EF59  F005         	goto	u6731
  2632  000AAE  EF5B  F005         	goto	u6730
  2633  000AB2                     u6731:
  2634  000AB2  EFDE  F005         	goto	l4872
  2635  000AB6                     u6730:
  2636  000AB6  EF7A  F005         	goto	l4864
  2637  000ABA                     l4860:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2640  000ABA  C0A0  F021         	movff	efgtoa@u,___flmul@b
  2641  000ABE  C0A1  F022         	movff	efgtoa@u+1,___flmul@b+1
  2642  000AC2  C0A2  F023         	movff	efgtoa@u+2,___flmul@b+2
  2643  000AC6  C0A3  F024         	movff	efgtoa@u+3,___flmul@b+3
  2644  000ACA  0E00               	movlw	0
  2645  000ACC  6E25               	movwf	___flmul@a^0,c
  2646  000ACE  0E00               	movlw	0
  2647  000AD0  6E26               	movwf	(___flmul@a+1)^0,c
  2648  000AD2  0E20               	movlw	32
  2649  000AD4  6E27               	movwf	(___flmul@a+2)^0,c
  2650  000AD6  0E41               	movlw	65
  2651  000AD8  6E28               	movwf	(___flmul@a+3)^0,c
  2652  000ADA  EC5D  F00F         	call	___flmul	;wreg free
  2653  000ADE  C021  F0A0         	movff	?___flmul,efgtoa@u
  2654  000AE2  C022  F0A1         	movff	?___flmul+1,efgtoa@u+1
  2655  000AE6  C023  F0A2         	movff	?___flmul+2,efgtoa@u+2
  2656  000AEA  C024  F0A3         	movff	?___flmul+3,efgtoa@u+3
  2657  000AEE                     
  2658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2659  000AEE  0100               	movlb	0	; () banked
  2660  000AF0  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  2661  000AF2  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  2662  000AF4                     l4864:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2665  000AF4  C098  F03A         	movff	efgtoa@g,___flge@ff1
  2666  000AF8  C099  F03B         	movff	efgtoa@g+1,___flge@ff1+1
  2667  000AFC  C09A  F03C         	movff	efgtoa@g+2,___flge@ff1+2
  2668  000B00  C09B  F03D         	movff	efgtoa@g+3,___flge@ff1+3
  2669  000B04  0E00               	movlw	0
  2670  000B06  6E25               	movwf	___flmul@a^0,c
  2671  000B08  0E00               	movlw	0
  2672  000B0A  6E26               	movwf	(___flmul@a+1)^0,c
  2673  000B0C  0E20               	movlw	32
  2674  000B0E  6E27               	movwf	(___flmul@a+2)^0,c
  2675  000B10  0E41               	movlw	65
  2676  000B12  6E28               	movwf	(___flmul@a+3)^0,c
  2677  000B14  C0A0  F021         	movff	efgtoa@u,___flmul@b
  2678  000B18  C0A1  F022         	movff	efgtoa@u+1,___flmul@b+1
  2679  000B1C  C0A2  F023         	movff	efgtoa@u+2,___flmul@b+2
  2680  000B20  C0A3  F024         	movff	efgtoa@u+3,___flmul@b+3
  2681  000B24  EC5D  F00F         	call	___flmul	;wreg free
  2682  000B28  C021  F03E         	movff	?___flmul,___flge@ff2
  2683  000B2C  C022  F03F         	movff	?___flmul+1,___flge@ff2+1
  2684  000B30  C023  F040         	movff	?___flmul+2,___flge@ff2+2
  2685  000B34  C024  F041         	movff	?___flmul+3,___flge@ff2+3
  2686  000B38  EC37  F017         	call	___flge	;wreg free
  2687  000B3C  B0D8               	btfsc	status,0,c
  2688  000B3E  EFA3  F005         	goto	u6741
  2689  000B42  EFA5  F005         	goto	u6740
  2690  000B46                     u6741:
  2691  000B46  EF5D  F005         	goto	l4860
  2692  000B4A                     u6740:
  2693  000B4A  EFC5  F005         	goto	l4870
  2694  000B4E                     l4866:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2697  000B4E  C0A0  F00D         	movff	efgtoa@u,___fldiv@b
  2698  000B52  C0A1  F00E         	movff	efgtoa@u+1,___fldiv@b+1
  2699  000B56  C0A2  F00F         	movff	efgtoa@u+2,___fldiv@b+2
  2700  000B5A  C0A3  F010         	movff	efgtoa@u+3,___fldiv@b+3
  2701  000B5E  0E00               	movlw	0
  2702  000B60  6E11               	movwf	___fldiv@a^0,c
  2703  000B62  0E00               	movlw	0
  2704  000B64  6E12               	movwf	(___fldiv@a+1)^0,c
  2705  000B66  0E20               	movlw	32
  2706  000B68  6E13               	movwf	(___fldiv@a+2)^0,c
  2707  000B6A  0E41               	movlw	65
  2708  000B6C  6E14               	movwf	(___fldiv@a+3)^0,c
  2709  000B6E  EC72  F011         	call	___fldiv	;wreg free
  2710  000B72  C00D  F0A0         	movff	?___fldiv,efgtoa@u
  2711  000B76  C00E  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  2712  000B7A  C00F  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  2713  000B7E  C010  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  2714  000B82                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2716  000B82  0100               	movlb	0	; () banked
  2717  000B84  079C               	decf	efgtoa@e& (0+255),f,b
  2718  000B86  A0D8               	btfss	status,0,c
  2719  000B88  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  2720  000B8A                     l4870:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2723  000B8A  C098  F03A         	movff	efgtoa@g,___flge@ff1
  2724  000B8E  C099  F03B         	movff	efgtoa@g+1,___flge@ff1+1
  2725  000B92  C09A  F03C         	movff	efgtoa@g+2,___flge@ff1+2
  2726  000B96  C09B  F03D         	movff	efgtoa@g+3,___flge@ff1+3
  2727  000B9A  C0A0  F03E         	movff	efgtoa@u,___flge@ff2
  2728  000B9E  C0A1  F03F         	movff	efgtoa@u+1,___flge@ff2+1
  2729  000BA2  C0A2  F040         	movff	efgtoa@u+2,___flge@ff2+2
  2730  000BA6  C0A3  F041         	movff	efgtoa@u+3,___flge@ff2+3
  2731  000BAA  EC37  F017         	call	___flge	;wreg free
  2732  000BAE  A0D8               	btfss	status,0,c
  2733  000BB0  EFDC  F005         	goto	u6751
  2734  000BB4  EFDE  F005         	goto	u6750
  2735  000BB8                     u6751:
  2736  000BB8  EFA7  F005         	goto	l4866
  2737  000BBC                     u6750:
  2738  000BBC                     l4872:
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2741  000BBC  C066  F013         	movff	efgtoa@c,tolower@c
  2742  000BC0  6A14               	clrf	(tolower@c+1)^0,c
  2743  000BC2  ECB9  F01B         	call	_tolower	;wreg free
  2744  000BC6  5013               	movf	?_tolower^0,w,c
  2745  000BC8  0100               	movlb	0	; () banked
  2746  000BCA  6F8D               	movwf	efgtoa@mode& (0+255),b
  2747  000BCC                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2750  000BCC  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  2751  000BD0                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2754  000BD0  0E67               	movlw	103
  2755  000BD2  198D               	xorwf	efgtoa@mode& (0+255),w,b
  2756  000BD4  A4D8               	btfss	status,2,c
  2757  000BD6  EFEF  F005         	goto	u6761
  2758  000BDA  EFF1  F005         	goto	u6760
  2759  000BDE                     u6761:
  2760  000BDE  EF17  F006         	goto	l4886
  2761  000BE2                     u6760:
  2762  000BE2                     
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2765  000BE2  504E               	movf	_prec^0,w,c
  2766  000BE4  104F               	iorwf	(_prec+1)^0,w,c
  2767  000BE6  A4D8               	btfss	status,2,c
  2768  000BE8  EFF8  F005         	goto	u6771
  2769  000BEC  EFFA  F005         	goto	u6770
  2770  000BF0                     u6771:
  2771  000BF0  EFFE  F005         	goto	l4882
  2772  000BF4                     u6770:
  2773  000BF4                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2776  000BF4  0E00               	movlw	0
  2777  000BF6  6E4F               	movwf	(_prec+1)^0,c
  2778  000BF8  0E01               	movlw	1
  2779  000BFA  6E4E               	movwf	_prec^0,c
  2780  000BFC                     l4882:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2784  000BFC  BE4F               	btfsc	(_prec+1)^0,7,c
  2785  000BFE  EF0B  F006         	goto	u6780
  2786  000C02  504F               	movf	(_prec+1)^0,w,c
  2787  000C04  E106               	bnz	u6781
  2788  000C06  044E               	decf	_prec^0,w,c
  2789  000C08  B0D8               	btfsc	status,0,c
  2790  000C0A  EF09  F006         	goto	u6781
  2791  000C0E  EF0B  F006         	goto	u6780
  2792  000C12                     u6781:
  2793  000C12  EF11  F006         	goto	l850
  2794  000C16                     u6780:
  2795  000C16                     l4884:
  2796                           
  2797                           ; BSR set to: 0
  2798  000C16  0E00               	movlw	0
  2799  000C18  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  2800  000C1A  0E06               	movlw	6
  2801  000C1C  6F88               	movwf	efgtoa@p& (0+255),b
  2802  000C1E  EF20  F006         	goto	l4892
  2803  000C22                     l850:
  2804                           
  2805                           ; BSR set to: 0
  2806  000C22  C04E  F088         	movff	_prec,efgtoa@p
  2807  000C26  C04F  F089         	movff	_prec+1,efgtoa@p+1
  2808  000C2A  EF20  F006         	goto	l4892
  2809  000C2E                     l4886:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2813  000C2E  BE4F               	btfsc	(_prec+1)^0,7,c
  2814  000C30  EF1C  F006         	goto	u6791
  2815  000C34  EF1E  F006         	goto	u6790
  2816  000C38                     u6791:
  2817  000C38  EF0B  F006         	goto	l4884
  2818  000C3C                     u6790:
  2819  000C3C  EF11  F006         	goto	l850
  2820  000C40                     l4892:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2824  000C40  0E67               	movlw	103
  2825  000C42  198D               	xorwf	efgtoa@mode& (0+255),w,b
  2826  000C44  A4D8               	btfss	status,2,c
  2827  000C46  EF27  F006         	goto	u6801
  2828  000C4A  EF29  F006         	goto	u6800
  2829  000C4E                     u6801:
  2830  000C4E  EF58  F006         	goto	l4902
  2831  000C52                     u6800:
  2832  000C52                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2835  000C52  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  2836  000C54  EF37  F006         	goto	u6810
  2837  000C58  0EFC               	movlw	252
  2838  000C5A  5D9C               	subwf	efgtoa@e& (0+255),w,b
  2839  000C5C  0EFF               	movlw	255
  2840  000C5E  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2841  000C60  A0D8               	btfss	status,0,c
  2842  000C62  EF35  F006         	goto	u6811
  2843  000C66  EF37  F006         	goto	u6810
  2844  000C6A                     u6811:
  2845  000C6A  EF56  F006         	goto	l4900
  2846  000C6E                     u6810:
  2847  000C6E                     
  2848                           ; BSR set to: 0
  2849  000C6E  0EFF               	movlw	255
  2850  000C70  6F67               	movwf	??_efgtoa& (0+255),b
  2851  000C72  0EFF               	movlw	255
  2852  000C74  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2853  000C76  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  2854  000C7A  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  2855  000C7E  5167               	movf	??_efgtoa& (0+255),w,b
  2856  000C80  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2857  000C82  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2858  000C84  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2859  000C86  519C               	movf	efgtoa@e& (0+255),w,b
  2860  000C88  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2861  000C8A  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2862  000C8C  0A80               	xorlw	128
  2863  000C8E  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  2864  000C90  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  2865  000C92  0A80               	xorlw	128
  2866  000C94  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2867  000C96  A0D8               	btfss	status,0,c
  2868  000C98  EF50  F006         	goto	u6821
  2869  000C9C  EF52  F006         	goto	u6820
  2870  000CA0                     u6821:
  2871  000CA0  EF56  F006         	goto	l4900
  2872  000CA4                     u6820:
  2873  000CA4                     
  2874                           ; BSR set to: 0
  2875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2876  000CA4  0E66               	movlw	102
  2877  000CA6  6F8C               	movwf	efgtoa@nmode& (0+255),b
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2880  000CA8  EF58  F006         	goto	l4902
  2881  000CAC                     l4900:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2885  000CAC  0E65               	movlw	101
  2886  000CAE  6F8C               	movwf	efgtoa@nmode& (0+255),b
  2887  000CB0                     l4902:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2891  000CB0  C088  F07E         	movff	efgtoa@p,efgtoa@m
  2892  000CB4  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  2893  000CB8                     
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2896  000CB8  0E67               	movlw	103
  2897  000CBA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  2898  000CBC  A4D8               	btfss	status,2,c
  2899  000CBE  EF63  F006         	goto	u6831
  2900  000CC2  EF65  F006         	goto	u6830
  2901  000CC6                     u6831:
  2902  000CC6  EF75  F006         	goto	l4910
  2903  000CCA                     u6830:
  2904  000CCA                     
  2905                           ; BSR set to: 0
  2906  000CCA  0E66               	movlw	102
  2907  000CCC  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  2908  000CCE  A4D8               	btfss	status,2,c
  2909  000CD0  EF6C  F006         	goto	u6841
  2910  000CD4  EF6E  F006         	goto	u6840
  2911  000CD8                     u6841:
  2912  000CD8  EF77  F006         	goto	l4912
  2913  000CDC                     u6840:
  2914  000CDC                     
  2915                           ; BSR set to: 0
  2916  000CDC  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2917  000CDE  EF75  F006         	goto	u6850
  2918  000CE2  EF73  F006         	goto	u6851
  2919  000CE6                     u6851:
  2920  000CE6  EF77  F006         	goto	l4912
  2921  000CEA                     u6850:
  2922  000CEA                     l4910:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2926  000CEA  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  2927  000CEC  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  2928  000CEE                     l4912:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2932  000CEE  0E66               	movlw	102
  2933  000CF0  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  2934  000CF2  A4D8               	btfss	status,2,c
  2935  000CF4  EF7E  F006         	goto	u6861
  2936  000CF8  EF80  F006         	goto	u6860
  2937  000CFC                     u6861:
  2938  000CFC  EFA0  F006         	goto	l4922
  2939  000D00                     u6860:
  2940  000D00                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2943  000D00  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2944  000D02  EF87  F006         	goto	u6870
  2945  000D06  EF85  F006         	goto	u6871
  2946  000D0A                     u6871:
  2947  000D0A  EF93  F006         	goto	l4918
  2948  000D0E                     u6870:
  2949  000D0E                     
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2952  000D0E  0E00               	movlw	0
  2953  000D10  6FA0               	movwf	efgtoa@u& (0+255),b
  2954  000D12  0E00               	movlw	0
  2955  000D14  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  2956  000D16  0E80               	movlw	128
  2957  000D18  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  2958  000D1A  0E3F               	movlw	63
  2959  000D1C  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2962  000D1E  0E00               	movlw	0
  2963  000D20  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  2964  000D22  0E00               	movlw	0
  2965  000D24  6F9C               	movwf	efgtoa@e& (0+255),b
  2966  000D26                     l4918:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2970  000D26  0E67               	movlw	103
  2971  000D28  198D               	xorwf	efgtoa@mode& (0+255),w,b
  2972  000D2A  B4D8               	btfsc	status,2,c
  2973  000D2C  EF9A  F006         	goto	u6881
  2974  000D30  EF9C  F006         	goto	u6880
  2975  000D34                     u6881:
  2976  000D34  EFA0  F006         	goto	l4922
  2977  000D38                     u6880:
  2978  000D38                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2981  000D38  519C               	movf	efgtoa@e& (0+255),w,b
  2982  000D3A  277E               	addwf	efgtoa@m& (0+255),f,b
  2983  000D3C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  2984  000D3E  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2985  000D40                     l4922:
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2989  000D40  0E00               	movlw	0
  2990  000D42  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  2991  000D44  0E00               	movlw	0
  2992  000D46  6F96               	movwf	efgtoa@i& (0+255),b
  2993  000D48                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2996  000D48  C098  F08E         	movff	efgtoa@g,efgtoa@h
  2997  000D4C  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  2998  000D50  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  2999  000D54  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  3000  000D58                     
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3003  000D58  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  3004  000D5C  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  3005  000D60  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  3006  000D64  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3009  000D68  EF31  F007         	goto	l4936
  3010  000D6C                     l4928:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3014  000D6C  C08E  F00D         	movff	efgtoa@h,___fldiv@b
  3015  000D70  C08F  F00E         	movff	efgtoa@h+1,___fldiv@b+1
  3016  000D74  C090  F00F         	movff	efgtoa@h+2,___fldiv@b+2
  3017  000D78  C091  F010         	movff	efgtoa@h+3,___fldiv@b+3
  3018  000D7C  C0A0  F011         	movff	efgtoa@u,___fldiv@a
  3019  000D80  C0A1  F012         	movff	efgtoa@u+1,___fldiv@a+1
  3020  000D84  C0A2  F013         	movff	efgtoa@u+2,___fldiv@a+2
  3021  000D88  C0A3  F014         	movff	efgtoa@u+3,___fldiv@a+3
  3022  000D8C  EC72  F011         	call	___fldiv	;wreg free
  3023  000D90  C00D  F026         	movff	?___fldiv,floorf@x
  3024  000D94  C00E  F027         	movff	?___fldiv+1,floorf@x+1
  3025  000D98  C00F  F028         	movff	?___fldiv+2,floorf@x+2
  3026  000D9C  C010  F029         	movff	?___fldiv+3,floorf@x+3
  3027  000DA0  EC3F  F013         	call	_floorf	;wreg free
  3028  000DA4  C026  F092         	movff	?_floorf,efgtoa@l
  3029  000DA8  C027  F093         	movff	?_floorf+1,efgtoa@l+1
  3030  000DAC  C028  F094         	movff	?_floorf+2,efgtoa@l+2
  3031  000DB0  C029  F095         	movff	?_floorf+3,efgtoa@l+3
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3034  000DB4  C092  F00D         	movff	efgtoa@l,___fltol@f1
  3035  000DB8  C093  F00E         	movff	efgtoa@l+1,___fltol@f1+1
  3036  000DBC  C094  F00F         	movff	efgtoa@l+2,___fltol@f1+2
  3037  000DC0  C095  F010         	movff	efgtoa@l+3,___fltol@f1+3
  3038  000DC4  ECB4  F016         	call	___fltol	;wreg free
  3039  000DC8  C00D  F084         	movff	?___fltol,efgtoa@d
  3040  000DCC  C00E  F085         	movff	?___fltol+1,efgtoa@d+1
  3041  000DD0                     
  3042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3043  000DD0  C08E  F03A         	movff	efgtoa@h,___flsub@b
  3044  000DD4  C08F  F03B         	movff	efgtoa@h+1,___flsub@b+1
  3045  000DD8  C090  F03C         	movff	efgtoa@h+2,___flsub@b+2
  3046  000DDC  C091  F03D         	movff	efgtoa@h+3,___flsub@b+3
  3047  000DE0  C0A0  F025         	movff	efgtoa@u,___flmul@a
  3048  000DE4  C0A1  F026         	movff	efgtoa@u+1,___flmul@a+1
  3049  000DE8  C0A2  F027         	movff	efgtoa@u+2,___flmul@a+2
  3050  000DEC  C0A3  F028         	movff	efgtoa@u+3,___flmul@a+3
  3051  000DF0  C092  F021         	movff	efgtoa@l,___flmul@b
  3052  000DF4  C093  F022         	movff	efgtoa@l+1,___flmul@b+1
  3053  000DF8  C094  F023         	movff	efgtoa@l+2,___flmul@b+2
  3054  000DFC  C095  F024         	movff	efgtoa@l+3,___flmul@b+3
  3055  000E00  EC5D  F00F         	call	___flmul	;wreg free
  3056  000E04  C021  F03E         	movff	?___flmul,___flsub@a
  3057  000E08  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  3058  000E0C  C023  F040         	movff	?___flmul+2,___flsub@a+2
  3059  000E10  C024  F041         	movff	?___flmul+3,___flsub@a+3
  3060  000E14  EC90  F01C         	call	___flsub	;wreg free
  3061  000E18  C03A  F08E         	movff	?___flsub,efgtoa@h
  3062  000E1C  C03B  F08F         	movff	?___flsub+1,efgtoa@h+1
  3063  000E20  C03C  F090         	movff	?___flsub+2,efgtoa@h+2
  3064  000E24  C03D  F091         	movff	?___flsub+3,efgtoa@h+3
  3065  000E28                     
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3067  000E28  C0A0  F00D         	movff	efgtoa@u,___fldiv@b
  3068  000E2C  C0A1  F00E         	movff	efgtoa@u+1,___fldiv@b+1
  3069  000E30  C0A2  F00F         	movff	efgtoa@u+2,___fldiv@b+2
  3070  000E34  C0A3  F010         	movff	efgtoa@u+3,___fldiv@b+3
  3071  000E38  0E00               	movlw	0
  3072  000E3A  6E11               	movwf	___fldiv@a^0,c
  3073  000E3C  0E00               	movlw	0
  3074  000E3E  6E12               	movwf	(___fldiv@a+1)^0,c
  3075  000E40  0E20               	movlw	32
  3076  000E42  6E13               	movwf	(___fldiv@a+2)^0,c
  3077  000E44  0E41               	movlw	65
  3078  000E46  6E14               	movwf	(___fldiv@a+3)^0,c
  3079  000E48  EC72  F011         	call	___fldiv	;wreg free
  3080  000E4C  C00D  F0A0         	movff	?___fldiv,efgtoa@u
  3081  000E50  C00E  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  3082  000E54  C00F  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  3083  000E58  C010  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  3084  000E5C                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3086  000E5C  0100               	movlb	0	; () banked
  3087  000E5E  4B96               	infsnz	efgtoa@i& (0+255),f,b
  3088  000E60  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  3089  000E62                     l4936:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3093  000E62  517E               	movf	efgtoa@m& (0+255),w,b
  3094  000E64  5D96               	subwf	efgtoa@i& (0+255),w,b
  3095  000E66  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  3096  000E68  0A80               	xorlw	128
  3097  000E6A  6F67               	movwf	??_efgtoa& (0+255),b
  3098  000E6C  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  3099  000E6E  0A80               	xorlw	128
  3100  000E70  5967               	subwfb	??_efgtoa& (0+255),w,b
  3101  000E72  A0D8               	btfss	status,0,c
  3102  000E74  EF3E  F007         	goto	u6891
  3103  000E78  EF40  F007         	goto	u6890
  3104  000E7C                     u6891:
  3105  000E7C  EFB6  F006         	goto	l4928
  3106  000E80                     u6890:
  3107  000E80                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3110  000E80  C0A0  F021         	movff	efgtoa@u,___flmul@b
  3111  000E84  C0A1  F022         	movff	efgtoa@u+1,___flmul@b+1
  3112  000E88  C0A2  F023         	movff	efgtoa@u+2,___flmul@b+2
  3113  000E8C  C0A3  F024         	movff	efgtoa@u+3,___flmul@b+3
  3114  000E90  0E00               	movlw	0
  3115  000E92  6E25               	movwf	___flmul@a^0,c
  3116  000E94  0E00               	movlw	0
  3117  000E96  6E26               	movwf	(___flmul@a+1)^0,c
  3118  000E98  0EA0               	movlw	160
  3119  000E9A  6E27               	movwf	(___flmul@a+2)^0,c
  3120  000E9C  0E40               	movlw	64
  3121  000E9E  6E28               	movwf	(___flmul@a+3)^0,c
  3122  000EA0  EC5D  F00F         	call	___flmul	;wreg free
  3123  000EA4  C021  F092         	movff	?___flmul,efgtoa@l
  3124  000EA8  C022  F093         	movff	?___flmul+1,efgtoa@l+1
  3125  000EAC  C023  F094         	movff	?___flmul+2,efgtoa@l+2
  3126  000EB0  C024  F095         	movff	?___flmul+3,efgtoa@l+3
  3127  000EB4                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3129  000EB4  C08E  F03A         	movff	efgtoa@h,___flge@ff1
  3130  000EB8  C08F  F03B         	movff	efgtoa@h+1,___flge@ff1+1
  3131  000EBC  C090  F03C         	movff	efgtoa@h+2,___flge@ff1+2
  3132  000EC0  C091  F03D         	movff	efgtoa@h+3,___flge@ff1+3
  3133  000EC4  C092  F03E         	movff	efgtoa@l,___flge@ff2
  3134  000EC8  C093  F03F         	movff	efgtoa@l+1,___flge@ff2+1
  3135  000ECC  C094  F040         	movff	efgtoa@l+2,___flge@ff2+2
  3136  000ED0  C095  F041         	movff	efgtoa@l+3,___flge@ff2+3
  3137  000ED4  EC37  F017         	call	___flge	;wreg free
  3138  000ED8  B0D8               	btfsc	status,0,c
  3139  000EDA  EF71  F007         	goto	u6901
  3140  000EDE  EF73  F007         	goto	u6900
  3141  000EE2                     u6901:
  3142  000EE2  EF7E  F007         	goto	l4944
  3143  000EE6                     u6900:
  3144  000EE6                     
  3145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3146  000EE6  0E00               	movlw	0
  3147  000EE8  0100               	movlb	0	; () banked
  3148  000EEA  6F92               	movwf	efgtoa@l& (0+255),b
  3149  000EEC  0E00               	movlw	0
  3150  000EEE  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  3151  000EF0  0E00               	movlw	0
  3152  000EF2  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  3153  000EF4  0E00               	movlw	0
  3154  000EF6  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3157  000EF8  EFA7  F007         	goto	l4950
  3158  000EFC                     l4944:
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3161  000EFC  C08E  F00D         	movff	efgtoa@h,___fleq@ff1
  3162  000F00  C08F  F00E         	movff	efgtoa@h+1,___fleq@ff1+1
  3163  000F04  C090  F00F         	movff	efgtoa@h+2,___fleq@ff1+2
  3164  000F08  C091  F010         	movff	efgtoa@h+3,___fleq@ff1+3
  3165  000F0C  C092  F011         	movff	efgtoa@l,___fleq@ff2
  3166  000F10  C093  F012         	movff	efgtoa@l+1,___fleq@ff2+1
  3167  000F14  C094  F013         	movff	efgtoa@l+2,___fleq@ff2+2
  3168  000F18  C095  F014         	movff	efgtoa@l+3,___fleq@ff2+3
  3169  000F1C  ECA5  F01A         	call	___fleq	;wreg free
  3170  000F20  A0D8               	btfss	status,0,c
  3171  000F22  EF95  F007         	goto	u6911
  3172  000F26  EF97  F007         	goto	u6910
  3173  000F2A                     u6911:
  3174  000F2A  EFA7  F007         	goto	l4950
  3175  000F2E                     u6910:
  3176  000F2E  0100               	movlb	0	; () banked
  3177  000F30  B184               	btfsc	efgtoa@d& (0+255),0,b
  3178  000F32  EF9D  F007         	goto	u6921
  3179  000F36  EF9F  F007         	goto	u6920
  3180  000F3A                     u6921:
  3181  000F3A  EFA7  F007         	goto	l4950
  3182  000F3E                     u6920:
  3183  000F3E                     
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3186  000F3E  0E00               	movlw	0
  3187  000F40  6F92               	movwf	efgtoa@l& (0+255),b
  3188  000F42  0E00               	movlw	0
  3189  000F44  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  3190  000F46  0E00               	movlw	0
  3191  000F48  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  3192  000F4A  0E00               	movlw	0
  3193  000F4C  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  3194  000F4E                     l4950:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3197  000F4E  C098  F00D         	movff	efgtoa@g,___fladd@b
  3198  000F52  C099  F00E         	movff	efgtoa@g+1,___fladd@b+1
  3199  000F56  C09A  F00F         	movff	efgtoa@g+2,___fladd@b+2
  3200  000F5A  C09B  F010         	movff	efgtoa@g+3,___fladd@b+3
  3201  000F5E  C092  F011         	movff	efgtoa@l,___fladd@a
  3202  000F62  C093  F012         	movff	efgtoa@l+1,___fladd@a+1
  3203  000F66  C094  F013         	movff	efgtoa@l+2,___fladd@a+2
  3204  000F6A  C095  F014         	movff	efgtoa@l+3,___fladd@a+3
  3205  000F6E  ECFD  F00C         	call	___fladd	;wreg free
  3206  000F72  C00D  F08E         	movff	?___fladd,efgtoa@h
  3207  000F76  C00E  F08F         	movff	?___fladd+1,efgtoa@h+1
  3208  000F7A  C00F  F090         	movff	?___fladd+2,efgtoa@h+2
  3209  000F7E  C010  F091         	movff	?___fladd+3,efgtoa@h+3
  3210  000F82                     
  3211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3212  000F82  C08E  F03A         	movff	efgtoa@h,___flge@ff1
  3213  000F86  C08F  F03B         	movff	efgtoa@h+1,___flge@ff1+1
  3214  000F8A  C090  F03C         	movff	efgtoa@h+2,___flge@ff1+2
  3215  000F8E  C091  F03D         	movff	efgtoa@h+3,___flge@ff1+3
  3216  000F92  0E00               	movlw	0
  3217  000F94  6E25               	movwf	___flmul@a^0,c
  3218  000F96  0E00               	movlw	0
  3219  000F98  6E26               	movwf	(___flmul@a+1)^0,c
  3220  000F9A  0E20               	movlw	32
  3221  000F9C  6E27               	movwf	(___flmul@a+2)^0,c
  3222  000F9E  0E41               	movlw	65
  3223  000FA0  6E28               	movwf	(___flmul@a+3)^0,c
  3224  000FA2  C080  F021         	movff	efgtoa@ou,___flmul@b
  3225  000FA6  C081  F022         	movff	efgtoa@ou+1,___flmul@b+1
  3226  000FAA  C082  F023         	movff	efgtoa@ou+2,___flmul@b+2
  3227  000FAE  C083  F024         	movff	efgtoa@ou+3,___flmul@b+3
  3228  000FB2  EC5D  F00F         	call	___flmul	;wreg free
  3229  000FB6  C021  F03E         	movff	?___flmul,___flge@ff2
  3230  000FBA  C022  F03F         	movff	?___flmul+1,___flge@ff2+1
  3231  000FBE  C023  F040         	movff	?___flmul+2,___flge@ff2+2
  3232  000FC2  C024  F041         	movff	?___flmul+3,___flge@ff2+3
  3233  000FC6  EC37  F017         	call	___flge	;wreg free
  3234  000FCA  A0D8               	btfss	status,0,c
  3235  000FCC  EFEA  F007         	goto	u6931
  3236  000FD0  EFEC  F007         	goto	u6930
  3237  000FD4                     u6931:
  3238  000FD4  EF15  F008         	goto	l4962
  3239  000FD8                     u6930:
  3240  000FD8                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3242  000FD8  0100               	movlb	0	; () banked
  3243  000FDA  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  3244  000FDC  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  3245  000FDE                     
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3248  000FDE  C080  F021         	movff	efgtoa@ou,___flmul@b
  3249  000FE2  C081  F022         	movff	efgtoa@ou+1,___flmul@b+1
  3250  000FE6  C082  F023         	movff	efgtoa@ou+2,___flmul@b+2
  3251  000FEA  C083  F024         	movff	efgtoa@ou+3,___flmul@b+3
  3252  000FEE  0E00               	movlw	0
  3253  000FF0  6E25               	movwf	___flmul@a^0,c
  3254  000FF2  0E00               	movlw	0
  3255  000FF4  6E26               	movwf	(___flmul@a+1)^0,c
  3256  000FF6  0E20               	movlw	32
  3257  000FF8  6E27               	movwf	(___flmul@a+2)^0,c
  3258  000FFA  0E41               	movlw	65
  3259  000FFC  6E28               	movwf	(___flmul@a+3)^0,c
  3260  000FFE  EC5D  F00F         	call	___flmul	;wreg free
  3261  001002  C021  F080         	movff	?___flmul,efgtoa@ou
  3262  001006  C022  F081         	movff	?___flmul+1,efgtoa@ou+1
  3263  00100A  C023  F082         	movff	?___flmul+2,efgtoa@ou+2
  3264  00100E  C024  F083         	movff	?___flmul+3,efgtoa@ou+3
  3265  001012                     
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3267  001012  0E66               	movlw	102
  3268  001014  0100               	movlb	0	; () banked
  3269  001016  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  3270  001018  A4D8               	btfss	status,2,c
  3271  00101A  EF11  F008         	goto	u6941
  3272  00101E  EF13  F008         	goto	u6940
  3273  001022                     u6941:
  3274  001022  EF15  F008         	goto	l4962
  3275  001026                     u6940:
  3276  001026                     
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3279  001026  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  3280  001028  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  3281  00102A                     l4962:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3284  00102A  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  3285  00102E  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  3286  001032  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  3287  001036  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  3288  00103A                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3290  00103A  0E65               	movlw	101
  3291  00103C  0100               	movlb	0	; () banked
  3292  00103E  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  3293  001040  B4D8               	btfsc	status,2,c
  3294  001042  EF25  F008         	goto	u6951
  3295  001046  EF27  F008         	goto	u6950
  3296  00104A                     u6951:
  3297  00104A  EF2D  F008         	goto	l4968
  3298  00104E                     u6950:
  3299  00104E                     
  3300                           ; BSR set to: 0
  3301  00104E  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  3302  001052  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  3303  001056  EF31  F008         	goto	l878
  3304  00105A                     l4968:
  3305                           
  3306                           ; BSR set to: 0
  3307  00105A  0E00               	movlw	0
  3308  00105C  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  3309  00105E  0E00               	movlw	0
  3310  001060  6F7C               	movwf	efgtoa@ne& (0+255),b
  3311  001062                     l878:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3315  001062  0E00               	movlw	0
  3316  001064  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  3317  001066  0E00               	movlw	0
  3318  001068  6F7A               	movwf	efgtoa@pp& (0+255),b
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3321  00106A  0E00               	movlw	0
  3322  00106C  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  3323  00106E  0E00               	movlw	0
  3324  001070  6F78               	movwf	efgtoa@t& (0+255),b
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3327  001072  0E00               	movlw	0
  3328  001074  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  3329  001076  0E00               	movlw	0
  3330  001078  6F96               	movwf	efgtoa@i& (0+255),b
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3333  00107A  EF2D  F009         	goto	l5018
  3334  00107E                     l4970:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3338  00107E  C08E  F00D         	movff	efgtoa@h,___fldiv@b
  3339  001082  C08F  F00E         	movff	efgtoa@h+1,___fldiv@b+1
  3340  001086  C090  F00F         	movff	efgtoa@h+2,___fldiv@b+2
  3341  00108A  C091  F010         	movff	efgtoa@h+3,___fldiv@b+3
  3342  00108E  C0A0  F011         	movff	efgtoa@u,___fldiv@a
  3343  001092  C0A1  F012         	movff	efgtoa@u+1,___fldiv@a+1
  3344  001096  C0A2  F013         	movff	efgtoa@u+2,___fldiv@a+2
  3345  00109A  C0A3  F014         	movff	efgtoa@u+3,___fldiv@a+3
  3346  00109E  EC72  F011         	call	___fldiv	;wreg free
  3347  0010A2  C00D  F026         	movff	?___fldiv,floorf@x
  3348  0010A6  C00E  F027         	movff	?___fldiv+1,floorf@x+1
  3349  0010AA  C00F  F028         	movff	?___fldiv+2,floorf@x+2
  3350  0010AE  C010  F029         	movff	?___fldiv+3,floorf@x+3
  3351  0010B2  EC3F  F013         	call	_floorf	;wreg free
  3352  0010B6  C026  F092         	movff	?_floorf,efgtoa@l
  3353  0010BA  C027  F093         	movff	?_floorf+1,efgtoa@l+1
  3354  0010BE  C028  F094         	movff	?_floorf+2,efgtoa@l+2
  3355  0010C2  C029  F095         	movff	?_floorf+3,efgtoa@l+3
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3358  0010C6  C092  F00D         	movff	efgtoa@l,___fltol@f1
  3359  0010CA  C093  F00E         	movff	efgtoa@l+1,___fltol@f1+1
  3360  0010CE  C094  F00F         	movff	efgtoa@l+2,___fltol@f1+2
  3361  0010D2  C095  F010         	movff	efgtoa@l+3,___fltol@f1+3
  3362  0010D6  ECB4  F016         	call	___fltol	;wreg free
  3363  0010DA  C00D  F084         	movff	?___fltol,efgtoa@d
  3364  0010DE  C00E  F085         	movff	?___fltol+1,efgtoa@d+1
  3365  0010E2                     
  3366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3367  0010E2  B850               	btfsc	_flags^0,4,c
  3368  0010E4  EF76  F008         	goto	u6961
  3369  0010E8  EF78  F008         	goto	u6960
  3370  0010EC                     u6961:
  3371  0010EC  EF96  F008         	goto	l4982
  3372  0010F0                     u6960:
  3373  0010F0  0100               	movlb	0	; () banked
  3374  0010F2  5184               	movf	efgtoa@d& (0+255),w,b
  3375  0010F4  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3376  0010F6  A4D8               	btfss	status,2,c
  3377  0010F8  EF80  F008         	goto	u6971
  3378  0010FC  EF82  F008         	goto	u6970
  3379  001100                     u6971:
  3380  001100  EF96  F008         	goto	l4982
  3381  001104                     u6970:
  3382  001104                     
  3383                           ; BSR set to: 0
  3384  001104  0E67               	movlw	103
  3385  001106  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3386  001108  A4D8               	btfss	status,2,c
  3387  00110A  EF89  F008         	goto	u6981
  3388  00110E  EF8B  F008         	goto	u6980
  3389  001112                     u6981:
  3390  001112  EF96  F008         	goto	l4982
  3391  001116                     u6980:
  3392  001116                     
  3393                           ; BSR set to: 0
  3394  001116  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3395  001118  EF92  F008         	goto	u6990
  3396  00111C  EF90  F008         	goto	u6991
  3397  001120                     u6991:
  3398  001120  EF96  F008         	goto	l4982
  3399  001124                     u6990:
  3400  001124                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3403  001124  4B78               	infsnz	efgtoa@t& (0+255),f,b
  3404  001126  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3407  001128  EFE1  F008         	goto	l5010
  3408  00112C                     l4982:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3411  00112C  0100               	movlb	0	; () banked
  3412  00112E  517A               	movf	efgtoa@pp& (0+255),w,b
  3413  001130  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3414  001132  A4D8               	btfss	status,2,c
  3415  001134  EF9E  F008         	goto	u7001
  3416  001138  EFA0  F008         	goto	u7000
  3417  00113C                     u7001:
  3418  00113C  EFCA  F008         	goto	l5002
  3419  001140                     u7000:
  3420  001140                     
  3421                           ; BSR set to: 0
  3422  001140  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3423  001142  EFA7  F008         	goto	u7010
  3424  001146  EFA5  F008         	goto	u7011
  3425  00114A                     u7011:
  3426  00114A  EFCA  F008         	goto	l5002
  3427  00114E                     u7010:
  3428  00114E                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3431  00114E  0E00               	movlw	low _dbuf
  3432  001150  259E               	addwf	efgtoa@n& (0+255),w,b
  3433  001152  6ED9               	movwf	fsr2l,c
  3434  001154  0E01               	movlw	high _dbuf
  3435  001156  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3436  001158  6EDA               	movwf	fsr2h,c
  3437  00115A  0E2E               	movlw	46
  3438  00115C  6EDF               	movwf	indf2,c
  3439  00115E                     
  3440                           ; BSR set to: 0
  3441  00115E  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3442  001160  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3443  001162                     
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3446  001162  078A               	decf	efgtoa@w& (0+255),f,b
  3447  001164  A0D8               	btfss	status,0,c
  3448  001166  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  3449  001168                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3452  001168  0E00               	movlw	0
  3453  00116A  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  3454  00116C  0E01               	movlw	1
  3455  00116E  6F7A               	movwf	efgtoa@pp& (0+255),b
  3456  001170  EFCA  F008         	goto	l5002
  3457  001174                     l4994:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3461  001174  0E00               	movlw	low _dbuf
  3462  001176  259E               	addwf	efgtoa@n& (0+255),w,b
  3463  001178  6ED9               	movwf	fsr2l,c
  3464  00117A  0E01               	movlw	high _dbuf
  3465  00117C  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3466  00117E  6EDA               	movwf	fsr2h,c
  3467  001180  0E30               	movlw	48
  3468  001182  6EDF               	movwf	indf2,c
  3469  001184                     
  3470                           ; BSR set to: 0
  3471  001184  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3472  001186  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3473  001188                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3476  001188  078A               	decf	efgtoa@w& (0+255),f,b
  3477  00118A  A0D8               	btfss	status,0,c
  3478  00118C  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  3479  00118E                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3482  00118E  0778               	decf	efgtoa@t& (0+255),f,b
  3483  001190  A0D8               	btfss	status,0,c
  3484  001192  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  3485  001194                     l5002:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3489  001194  5178               	movf	efgtoa@t& (0+255),w,b
  3490  001196  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3491  001198  A4D8               	btfss	status,2,c
  3492  00119A  EFD1  F008         	goto	u7021
  3493  00119E  EFD3  F008         	goto	u7020
  3494  0011A2                     u7021:
  3495  0011A2  EFBA  F008         	goto	l4994
  3496  0011A6                     u7020:
  3497  0011A6                     
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3500  0011A6  0E00               	movlw	low _dbuf
  3501  0011A8  259E               	addwf	efgtoa@n& (0+255),w,b
  3502  0011AA  6ED9               	movwf	fsr2l,c
  3503  0011AC  0E01               	movlw	high _dbuf
  3504  0011AE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3505  0011B0  6EDA               	movwf	fsr2h,c
  3506  0011B2  5184               	movf	efgtoa@d& (0+255),w,b
  3507  0011B4  0F30               	addlw	48
  3508  0011B6  6EDF               	movwf	indf2,c
  3509  0011B8                     
  3510                           ; BSR set to: 0
  3511  0011B8  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3512  0011BA  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3513  0011BC                     
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3516  0011BC  078A               	decf	efgtoa@w& (0+255),f,b
  3517  0011BE  A0D8               	btfss	status,0,c
  3518  0011C0  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  3519  0011C2                     l5010:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3523  0011C2  C08E  F03A         	movff	efgtoa@h,___flsub@b
  3524  0011C6  C08F  F03B         	movff	efgtoa@h+1,___flsub@b+1
  3525  0011CA  C090  F03C         	movff	efgtoa@h+2,___flsub@b+2
  3526  0011CE  C091  F03D         	movff	efgtoa@h+3,___flsub@b+3
  3527  0011D2  C0A0  F025         	movff	efgtoa@u,___flmul@a
  3528  0011D6  C0A1  F026         	movff	efgtoa@u+1,___flmul@a+1
  3529  0011DA  C0A2  F027         	movff	efgtoa@u+2,___flmul@a+2
  3530  0011DE  C0A3  F028         	movff	efgtoa@u+3,___flmul@a+3
  3531  0011E2  C092  F021         	movff	efgtoa@l,___flmul@b
  3532  0011E6  C093  F022         	movff	efgtoa@l+1,___flmul@b+1
  3533  0011EA  C094  F023         	movff	efgtoa@l+2,___flmul@b+2
  3534  0011EE  C095  F024         	movff	efgtoa@l+3,___flmul@b+3
  3535  0011F2  EC5D  F00F         	call	___flmul	;wreg free
  3536  0011F6  C021  F03E         	movff	?___flmul,___flsub@a
  3537  0011FA  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  3538  0011FE  C023  F040         	movff	?___flmul+2,___flsub@a+2
  3539  001202  C024  F041         	movff	?___flmul+3,___flsub@a+3
  3540  001206  EC90  F01C         	call	___flsub	;wreg free
  3541  00120A  C03A  F08E         	movff	?___flsub,efgtoa@h
  3542  00120E  C03B  F08F         	movff	?___flsub+1,efgtoa@h+1
  3543  001212  C03C  F090         	movff	?___flsub+2,efgtoa@h+2
  3544  001216  C03D  F091         	movff	?___flsub+3,efgtoa@h+3
  3545  00121A                     
  3546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3547  00121A  C0A0  F00D         	movff	efgtoa@u,___fldiv@b
  3548  00121E  C0A1  F00E         	movff	efgtoa@u+1,___fldiv@b+1
  3549  001222  C0A2  F00F         	movff	efgtoa@u+2,___fldiv@b+2
  3550  001226  C0A3  F010         	movff	efgtoa@u+3,___fldiv@b+3
  3551  00122A  0E00               	movlw	0
  3552  00122C  6E11               	movwf	___fldiv@a^0,c
  3553  00122E  0E00               	movlw	0
  3554  001230  6E12               	movwf	(___fldiv@a+1)^0,c
  3555  001232  0E20               	movlw	32
  3556  001234  6E13               	movwf	(___fldiv@a+2)^0,c
  3557  001236  0E41               	movlw	65
  3558  001238  6E14               	movwf	(___fldiv@a+3)^0,c
  3559  00123A  EC72  F011         	call	___fldiv	;wreg free
  3560  00123E  C00D  F0A0         	movff	?___fldiv,efgtoa@u
  3561  001242  C00E  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  3562  001246  C00F  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  3563  00124A  C010  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  3564  00124E                     
  3565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3566  00124E  0100               	movlb	0	; () banked
  3567  001250  077C               	decf	efgtoa@ne& (0+255),f,b
  3568  001252  A0D8               	btfss	status,0,c
  3569  001254  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3570  001256                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3573  001256  4B96               	infsnz	efgtoa@i& (0+255),f,b
  3574  001258  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  3575  00125A                     l5018:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3579  00125A  517E               	movf	efgtoa@m& (0+255),w,b
  3580  00125C  5D96               	subwf	efgtoa@i& (0+255),w,b
  3581  00125E  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  3582  001260  0A80               	xorlw	128
  3583  001262  6F67               	movwf	??_efgtoa& (0+255),b
  3584  001264  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  3585  001266  0A80               	xorlw	128
  3586  001268  5967               	subwfb	??_efgtoa& (0+255),w,b
  3587  00126A  B0D8               	btfsc	status,0,c
  3588  00126C  EF3A  F009         	goto	u7031
  3589  001270  EF3C  F009         	goto	u7030
  3590  001274                     u7031:
  3591  001274  EF4A  F009         	goto	l5022
  3592  001278                     u7030:
  3593  001278                     
  3594                           ; BSR set to: 0
  3595  001278  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3596  00127A  EF48  F009         	goto	u7041
  3597  00127E  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  3598  001280  E109               	bnz	u7040
  3599  001282  0E4B               	movlw	75
  3600  001284  5D9E               	subwf	efgtoa@n& (0+255),w,b
  3601  001286  A0D8               	btfss	status,0,c
  3602  001288  EF48  F009         	goto	u7041
  3603  00128C  EF4A  F009         	goto	u7040
  3604  001290                     u7041:
  3605  001290  EF3F  F008         	goto	l4970
  3606  001294                     u7040:
  3607  001294                     l5022:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3611  001294  517A               	movf	efgtoa@pp& (0+255),w,b
  3612  001296  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3613  001298  A4D8               	btfss	status,2,c
  3614  00129A  EF51  F009         	goto	u7051
  3615  00129E  EF53  F009         	goto	u7050
  3616  0012A2                     u7051:
  3617  0012A2  EF64  F009         	goto	l5030
  3618  0012A6                     u7050:
  3619  0012A6                     
  3620                           ; BSR set to: 0
  3621  0012A6  A850               	btfss	_flags^0,4,c
  3622  0012A8  EF58  F009         	goto	u7061
  3623  0012AC  EF5A  F009         	goto	u7060
  3624  0012B0                     u7061:
  3625  0012B0  EF64  F009         	goto	l5030
  3626  0012B4                     u7060:
  3627  0012B4                     
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3630  0012B4  0E00               	movlw	low _dbuf
  3631  0012B6  259E               	addwf	efgtoa@n& (0+255),w,b
  3632  0012B8  6ED9               	movwf	fsr2l,c
  3633  0012BA  0E01               	movlw	high _dbuf
  3634  0012BC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3635  0012BE  6EDA               	movwf	fsr2h,c
  3636  0012C0  0E2E               	movlw	46
  3637  0012C2  6EDF               	movwf	indf2,c
  3638  0012C4                     
  3639                           ; BSR set to: 0
  3640  0012C4  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3641  0012C6  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3642  0012C8                     l5030:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3646  0012C8  0E00               	movlw	low _dbuf
  3647  0012CA  259E               	addwf	efgtoa@n& (0+255),w,b
  3648  0012CC  6ED9               	movwf	fsr2l,c
  3649  0012CE  0E01               	movlw	high _dbuf
  3650  0012D0  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3651  0012D2  6EDA               	movwf	fsr2h,c
  3652  0012D4  0E00               	movlw	0
  3653  0012D6  6EDF               	movwf	indf2,c
  3654  0012D8                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3657  0012D8  0E65               	movlw	101
  3658  0012DA  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  3659  0012DC  A4D8               	btfss	status,2,c
  3660  0012DE  EF73  F009         	goto	u7071
  3661  0012E2  EF75  F009         	goto	u7070
  3662  0012E6                     u7071:
  3663  0012E6  EFCE  F004         	goto	l4832
  3664  0012EA                     u7070:
  3665  0012EA                     
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3668  0012EA  0E00               	movlw	0
  3669  0012EC  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  3670  0012EE  0E4F               	movlw	79
  3671  0012F0  6F96               	movwf	efgtoa@i& (0+255),b
  3672  0012F2                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3675  0012F2  0E00               	movlw	low _dbuf
  3676  0012F4  2596               	addwf	efgtoa@i& (0+255),w,b
  3677  0012F6  6ED9               	movwf	fsr2l,c
  3678  0012F8  0E01               	movlw	high _dbuf
  3679  0012FA  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3680  0012FC  6EDA               	movwf	fsr2h,c
  3681  0012FE  0E00               	movlw	0
  3682  001300  6EDF               	movwf	indf2,c
  3683  001302                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3686  001302  0E00               	movlw	0
  3687  001304  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  3688  001306  0E00               	movlw	0
  3689  001308  6F86               	movwf	efgtoa@sign& (0+255),b
  3690  00130A                     
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3693  00130A  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3694  00130C  EF8C  F009         	goto	u7080
  3695  001310  EF8A  F009         	goto	u7081
  3696  001314                     u7081:
  3697  001314  EF94  F009         	goto	l5046
  3698  001318                     u7080:
  3699  001318                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3702  001318  0E00               	movlw	0
  3703  00131A  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  3704  00131C  0E01               	movlw	1
  3705  00131E  6F86               	movwf	efgtoa@sign& (0+255),b
  3706  001320                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3709  001320  6D9C               	negf	efgtoa@e& (0+255),b
  3710  001322  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  3711  001324  B0D8               	btfsc	status,0,c
  3712  001326  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  3713  001328                     l5046:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3717  001328  0E00               	movlw	0
  3718  00132A  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  3719  00132C  0E02               	movlw	2
  3720  00132E  6F88               	movwf	efgtoa@p& (0+255),b
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3723  001330  EFC5  F009         	goto	l5058
  3724  001334                     l5048:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3728  001334  0796               	decf	efgtoa@i& (0+255),f,b
  3729  001336  A0D8               	btfss	status,0,c
  3730  001338  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  3731  00133A                     
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3734  00133A  0E00               	movlw	low _dbuf
  3735  00133C  2596               	addwf	efgtoa@i& (0+255),w,b
  3736  00133E  6ED9               	movwf	fsr2l,c
  3737  001340  0E01               	movlw	high _dbuf
  3738  001342  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3739  001344  6EDA               	movwf	fsr2h,c
  3740  001346  C09C  F00D         	movff	efgtoa@e,___awmod@dividend
  3741  00134A  C09D  F00E         	movff	efgtoa@e+1,___awmod@dividend+1
  3742  00134E  0E00               	movlw	0
  3743  001350  6E10               	movwf	(___awmod@divisor+1)^0,c
  3744  001352  0E0A               	movlw	10
  3745  001354  6E0F               	movwf	___awmod@divisor^0,c
  3746  001356  EC4D  F01A         	call	___awmod	;wreg free
  3747  00135A  500D               	movf	?___awmod^0,w,c
  3748  00135C  0F30               	addlw	48
  3749  00135E  6EDF               	movwf	indf2,c
  3750  001360                     
  3751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3752  001360  C09C  F00D         	movff	efgtoa@e,___awdiv@dividend
  3753  001364  C09D  F00E         	movff	efgtoa@e+1,___awdiv@dividend+1
  3754  001368  0E00               	movlw	0
  3755  00136A  6E10               	movwf	(___awdiv@divisor+1)^0,c
  3756  00136C  0E0A               	movlw	10
  3757  00136E  6E0F               	movwf	___awdiv@divisor^0,c
  3758  001370  EC8A  F019         	call	___awdiv	;wreg free
  3759  001374  C00D  F09C         	movff	?___awdiv,efgtoa@e
  3760  001378  C00E  F09D         	movff	?___awdiv+1,efgtoa@e+1
  3761  00137C                     
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3763  00137C  0100               	movlb	0	; () banked
  3764  00137E  0788               	decf	efgtoa@p& (0+255),f,b
  3765  001380  A0D8               	btfss	status,0,c
  3766  001382  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  3767  001384                     
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3770  001384  078A               	decf	efgtoa@w& (0+255),f,b
  3771  001386  A0D8               	btfss	status,0,c
  3772  001388  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  3773  00138A                     l5058:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3777  00138A  519C               	movf	efgtoa@e& (0+255),w,b
  3778  00138C  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3779  00138E  A4D8               	btfss	status,2,c
  3780  001390  EFCC  F009         	goto	u7091
  3781  001394  EFCE  F009         	goto	u7090
  3782  001398                     u7091:
  3783  001398  EF9A  F009         	goto	l5048
  3784  00139C                     u7090:
  3785  00139C                     
  3786                           ; BSR set to: 0
  3787  00139C  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3788  00139E  EFDB  F009         	goto	u7100
  3789  0013A2  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  3790  0013A4  E106               	bnz	u7101
  3791  0013A6  0588               	decf	efgtoa@p& (0+255),w,b
  3792  0013A8  B0D8               	btfsc	status,0,c
  3793  0013AA  EFD9  F009         	goto	u7101
  3794  0013AE  EFDB  F009         	goto	u7100
  3795  0013B2                     u7101:
  3796  0013B2  EF9A  F009         	goto	l5048
  3797  0013B6                     u7100:
  3798  0013B6                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3801  0013B6  0796               	decf	efgtoa@i& (0+255),f,b
  3802  0013B8  A0D8               	btfss	status,0,c
  3803  0013BA  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  3804  0013BC                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3807  0013BC  5186               	movf	efgtoa@sign& (0+255),w,b
  3808  0013BE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3809  0013C0  A4D8               	btfss	status,2,c
  3810  0013C2  EFE5  F009         	goto	u7111
  3811  0013C6  EFE7  F009         	goto	u7110
  3812  0013CA                     u7111:
  3813  0013CA  EFED  F009         	goto	l5068
  3814  0013CE                     u7110:
  3815  0013CE                     
  3816                           ; BSR set to: 0
  3817  0013CE  0E00               	movlw	0
  3818  0013D0  6F73               	movwf	(_efgtoa$936+1)& (0+255),b
  3819  0013D2  0E2B               	movlw	43
  3820  0013D4  6F72               	movwf	_efgtoa$936& (0+255),b
  3821  0013D6  EFF1  F009         	goto	l5070
  3822  0013DA                     l5068:
  3823                           
  3824                           ; BSR set to: 0
  3825  0013DA  0E00               	movlw	0
  3826  0013DC  6F73               	movwf	(_efgtoa$936+1)& (0+255),b
  3827  0013DE  0E2D               	movlw	45
  3828  0013E0  6F72               	movwf	_efgtoa$936& (0+255),b
  3829  0013E2                     l5070:
  3830                           
  3831                           ; BSR set to: 0
  3832  0013E2  0E00               	movlw	low _dbuf
  3833  0013E4  2596               	addwf	efgtoa@i& (0+255),w,b
  3834  0013E6  6ED9               	movwf	fsr2l,c
  3835  0013E8  0E01               	movlw	high _dbuf
  3836  0013EA  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3837  0013EC  6EDA               	movwf	fsr2h,c
  3838  0013EE  C072  FFDF         	movff	_efgtoa$936,indf2
  3839  0013F2                     
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3842  0013F2  078A               	decf	efgtoa@w& (0+255),f,b
  3843  0013F4  A0D8               	btfss	status,0,c
  3844  0013F6  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  3845  0013F8                     
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3848  0013F8  0796               	decf	efgtoa@i& (0+255),f,b
  3849  0013FA  A0D8               	btfss	status,0,c
  3850  0013FC  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  3851  0013FE                     
  3852                           ; BSR set to: 0
  3853  0013FE  0EBF               	movlw	191
  3854  001400  6F67               	movwf	??_efgtoa& (0+255),b
  3855  001402  0EFF               	movlw	255
  3856  001404  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3857  001406  5166               	movf	efgtoa@c& (0+255),w,b
  3858  001408  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  3859  00140A  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  3860  00140C  5167               	movf	??_efgtoa& (0+255),w,b
  3861  00140E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3862  001410  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3863  001412  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3864  001414  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3865  001416  E10A               	bnz	u7120
  3866  001418  0E1A               	movlw	26
  3867  00141A  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3868  00141C  A0D8               	btfss	status,0,c
  3869  00141E  EF13  F00A         	goto	u7121
  3870  001422  EF16  F00A         	goto	u7120
  3871  001426                     u7121:
  3872  001426  0E01               	movlw	1
  3873  001428  EF17  F00A         	goto	u7130
  3874  00142C                     u7120:
  3875  00142C  0E00               	movlw	0
  3876  00142E                     u7130:
  3877  00142E  6F76               	movwf	_efgtoa$938& (0+255),b
  3878  001430  6B77               	clrf	(_efgtoa$938+1)& (0+255),b
  3879  001432                     
  3880                           ; BSR set to: 0
  3881  001432  5176               	movf	_efgtoa$938& (0+255),w,b
  3882  001434  1177               	iorwf	(_efgtoa$938+1)& (0+255),w,b
  3883  001436  A4D8               	btfss	status,2,c
  3884  001438  EF20  F00A         	goto	u7141
  3885  00143C  EF22  F00A         	goto	u7140
  3886  001440                     u7141:
  3887  001440  EF28  F00A         	goto	l5084
  3888  001444                     u7140:
  3889  001444                     
  3890                           ; BSR set to: 0
  3891  001444  0E00               	movlw	0
  3892  001446  6F75               	movwf	(_efgtoa$937+1)& (0+255),b
  3893  001448  0E65               	movlw	101
  3894  00144A  6F74               	movwf	_efgtoa$937& (0+255),b
  3895  00144C  EF2C  F00A         	goto	l5086
  3896  001450                     l5084:
  3897                           
  3898                           ; BSR set to: 0
  3899  001450  0E00               	movlw	0
  3900  001452  6F75               	movwf	(_efgtoa$937+1)& (0+255),b
  3901  001454  0E45               	movlw	69
  3902  001456  6F74               	movwf	_efgtoa$937& (0+255),b
  3903  001458                     l5086:
  3904                           
  3905                           ; BSR set to: 0
  3906  001458  0E00               	movlw	low _dbuf
  3907  00145A  2596               	addwf	efgtoa@i& (0+255),w,b
  3908  00145C  6ED9               	movwf	fsr2l,c
  3909  00145E  0E01               	movlw	high _dbuf
  3910  001460  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3911  001462  6EDA               	movwf	fsr2h,c
  3912  001464  C074  FFDF         	movff	_efgtoa$937,indf2
  3913  001468                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3916  001468  078A               	decf	efgtoa@w& (0+255),f,b
  3917  00146A  A0D8               	btfss	status,0,c
  3918  00146C  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  3919  00146E                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3922  00146E  0E00               	movlw	low _dbuf
  3923  001470  259E               	addwf	efgtoa@n& (0+255),w,b
  3924  001472  6E0D               	movwf	strcpy@dest^0,c
  3925  001474  0E01               	movlw	high _dbuf
  3926  001476  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3927  001478  6E0E               	movwf	(strcpy@dest+1)^0,c
  3928  00147A  0E00               	movlw	low _dbuf
  3929  00147C  2596               	addwf	efgtoa@i& (0+255),w,b
  3930  00147E  6E0F               	movwf	strcpy@src^0,c
  3931  001480  0E01               	movlw	high _dbuf
  3932  001482  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3933  001484  6E10               	movwf	(strcpy@src+1)^0,c
  3934  001486  ECE9  F01B         	call	_strcpy	;wreg free
  3935  00148A  EFCE  F004         	goto	l4832
  3936  00148E                     l832:
  3937  00148E  0012               	return		;funcret
  3938  001490                     __end_of_efgtoa:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _tolower *****************
  3942 ;; Defined at:
  3943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  c               2   18[COMRAM] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2   18[COMRAM] int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3957 ;;      Params:         2       0       0       0       0       0       0       0       0
  3958 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3959 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3960 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3961 ;;Total ram usage:        8 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 3
  3964 ;; This function calls:
  3965 ;;		_isupper
  3966 ;; This function is called by:
  3967 ;;		_efgtoa
  3968 ;;		_vfpfcnvrt
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text6
  3973  003772                     __ptext6:
  3974                           	callstack 0
  3975  003772                     _tolower:
  3976                           	callstack 24
  3977  003772  0EBF               	movlw	191
  3978  003774  6E15               	movwf	??_tolower^0,c
  3979  003776  0EFF               	movlw	255
  3980  003778  6E16               	movwf	(??_tolower+1)^0,c
  3981  00377A  C013  F017         	movff	tolower@c,??_tolower+2
  3982  00377E  C014  F018         	movff	tolower@c+1,??_tolower+3
  3983  003782  5015               	movf	??_tolower^0,w,c
  3984  003784  2617               	addwf	(??_tolower+2)^0,f,c
  3985  003786  5016               	movf	(??_tolower+1)^0,w,c
  3986  003788  2218               	addwfc	(??_tolower+3)^0,f,c
  3987  00378A  5018               	movf	(??_tolower+3)^0,w,c
  3988  00378C  E10A               	bnz	u6440
  3989  00378E  0E1A               	movlw	26
  3990  003790  5C17               	subwf	(??_tolower+2)^0,w,c
  3991  003792  A0D8               	btfss	status,0,c
  3992  003794  EFCE  F01B         	goto	u6441
  3993  003798  EFD1  F01B         	goto	u6440
  3994  00379C                     u6441:
  3995  00379C  0E01               	movlw	1
  3996  00379E  EFD2  F01B         	goto	u6450
  3997  0037A2                     u6440:
  3998  0037A2  0E00               	movlw	0
  3999  0037A4                     u6450:
  4000  0037A4  6E19               	movwf	_tolower$1086^0,c
  4001  0037A6  6A1A               	clrf	(_tolower$1086+1)^0,c
  4002  0037A8  5019               	movf	_tolower$1086^0,w,c
  4003  0037AA  101A               	iorwf	(_tolower$1086+1)^0,w,c
  4004  0037AC  B4D8               	btfsc	status,2,c
  4005  0037AE  EFDB  F01B         	goto	u6461
  4006  0037B2  EFDD  F01B         	goto	u6460
  4007  0037B6                     u6461:
  4008  0037B6  EFE4  F01B         	goto	l1072
  4009  0037BA                     u6460:
  4010  0037BA  0E20               	movlw	32
  4011  0037BC  1013               	iorwf	tolower@c^0,w,c
  4012  0037BE  6E13               	movwf	?_tolower^0,c
  4013  0037C0  5014               	movf	(tolower@c+1)^0,w,c
  4014  0037C2  6E14               	movwf	(?_tolower+1)^0,c
  4015  0037C4  EFE8  F01B         	goto	l1077
  4016  0037C8                     l1072:
  4017  0037C8  C013  F013         	movff	tolower@c,?_tolower
  4018  0037CC  C014  F014         	movff	tolower@c+1,?_tolower+1
  4019  0037D0                     l1077:
  4020  0037D0  0012               	return		;funcret
  4021  0037D2                     __end_of_tolower:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function _isupper *****************
  4025 ;; Defined at:
  4026 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  c               2   12[COMRAM] int 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  2   12[COMRAM] int 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4040 ;;      Params:         2       0       0       0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4042 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4043 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4044 ;;Total ram usage:        6 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 2
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_efgtoa
  4051 ;;		_vfpfcnvrt
  4052 ;;		_tolower
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text7
  4057  0039AA                     __ptext7:
  4058                           	callstack 0
  4059  0039AA                     _isupper:
  4060                           	callstack 24
  4061  0039AA  0EBF               	movlw	191
  4062  0039AC  6E0F               	movwf	??_isupper^0,c
  4063  0039AE  0EFF               	movlw	255
  4064  0039B0  6E10               	movwf	(??_isupper+1)^0,c
  4065  0039B2  C00D  F011         	movff	isupper@c,??_isupper+2
  4066  0039B6  C00E  F012         	movff	isupper@c+1,??_isupper+3
  4067  0039BA  500F               	movf	??_isupper^0,w,c
  4068  0039BC  2611               	addwf	(??_isupper+2)^0,f,c
  4069  0039BE  5010               	movf	(??_isupper+1)^0,w,c
  4070  0039C0  2212               	addwfc	(??_isupper+3)^0,f,c
  4071  0039C2  5012               	movf	(??_isupper+3)^0,w,c
  4072  0039C4  E10A               	bnz	u5590
  4073  0039C6  0E1A               	movlw	26
  4074  0039C8  5C11               	subwf	(??_isupper+2)^0,w,c
  4075  0039CA  A0D8               	btfss	status,0,c
  4076  0039CC  EFEA  F01C         	goto	u5591
  4077  0039D0  EFED  F01C         	goto	u5590
  4078  0039D4                     u5591:
  4079  0039D4  0E01               	movlw	1
  4080  0039D6  EFEE  F01C         	goto	u5600
  4081  0039DA                     u5590:
  4082  0039DA  0E00               	movlw	0
  4083  0039DC                     u5600:
  4084  0039DC  6E0D               	movwf	?_isupper^0,c
  4085  0039DE  6A0E               	clrf	(?_isupper+1)^0,c
  4086  0039E0  0012               	return		;funcret
  4087  0039E2                     __end_of_isupper:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _strcpy *****************
  4091 ;; Defined at:
  4092 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  dest            2   12[COMRAM] PTR unsigned char 
  4095 ;;		 -> dbuf(80), 
  4096 ;;  src             2   14[COMRAM] PTR const unsigned char 
  4097 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4098 ;;		 -> dbuf(80), 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  d               2   20[COMRAM] PTR unsigned char 
  4101 ;;		 -> dbuf(80), 
  4102 ;;  s               2   18[COMRAM] PTR const unsigned char 
  4103 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4104 ;;		 -> dbuf(80), 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  2   12[COMRAM] PTR unsigned char 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4114 ;;      Params:         4       0       0       0       0       0       0       0       0
  4115 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4116 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4117 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4118 ;;Total ram usage:       10 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 2
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_efgtoa
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text8
  4129  0037D2                     __ptext8:
  4130                           	callstack 0
  4131  0037D2                     _strcpy:
  4132                           	callstack 24
  4133  0037D2  C00F  F013         	movff	strcpy@src,strcpy@s
  4134  0037D6  C010  F014         	movff	strcpy@src+1,strcpy@s+1
  4135  0037DA  C00D  F015         	movff	strcpy@dest,strcpy@d
  4136  0037DE  C00E  F016         	movff	strcpy@dest+1,strcpy@d+1
  4137  0037E2                     l4732:
  4138  0037E2  5013               	movf	strcpy@s^0,w,c
  4139  0037E4  6E11               	movwf	??_strcpy^0,c
  4140  0037E6  5014               	movf	(strcpy@s+1)^0,w,c
  4141  0037E8  6E12               	movwf	(??_strcpy+1)^0,c
  4142  0037EA  4A13               	infsnz	strcpy@s^0,f,c
  4143  0037EC  2A14               	incf	(strcpy@s+1)^0,f,c
  4144  0037EE  C011  FFF6         	movff	??_strcpy,tblptrl
  4145  0037F2  C012  FFF7         	movff	??_strcpy+1,tblptrh
  4146  0037F6  6AF8               	clrf	tblptru,c
  4147  0037F8  C015  FFD9         	movff	strcpy@d,fsr2l
  4148  0037FC  C016  FFDA         	movff	strcpy@d+1,fsr2h
  4149  003800  4A15               	infsnz	strcpy@d^0,f,c
  4150  003802  2A16               	incf	(strcpy@d+1)^0,f,c
  4151  003804  0E07               	movlw	(high __ramtop+-1)
  4152  003806  64F7               	cpfsgt	tblptrh,c
  4153  003808  D003               	bra	u6427
  4154  00380A  0008               	tblrd		*
  4155  00380C  50F5               	movf	tablat,w,c
  4156  00380E  D005               	bra	u6420
  4157  003810                     u6427:
  4158  003810  CFF6 FFE1          	movff	tblptrl,fsr1l
  4159  003814  CFF7 FFE2          	movff	tblptrh,fsr1h
  4160  003818  50E7               	movf	indf1,w,c
  4161  00381A                     u6420:
  4162  00381A  6EDF               	movwf	indf2,c
  4163  00381C  50DF               	movf	indf2,w,c
  4164  00381E  A4D8               	btfss	status,2,c
  4165  003820  EF14  F01C         	goto	u6431
  4166  003824  EF16  F01C         	goto	u6430
  4167  003828                     u6431:
  4168  003828  EFF1  F01B         	goto	l4732
  4169  00382C                     u6430:
  4170  00382C  0012               	return		;funcret
  4171  00382E                     __end_of_strcpy:
  4172                           	callstack 0
  4173                           
  4174 ;; *************** function _pad *****************
  4175 ;; Defined at:
  4176 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4179 ;;		 -> sprintf@f(6), 
  4180 ;;  buf             2   30[COMRAM] PTR unsigned char 
  4181 ;;		 -> dbuf(80), 
  4182 ;;  p               2   32[COMRAM] int 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  w               2   37[COMRAM] int 
  4185 ;;  i               2   35[COMRAM] int 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  2   28[COMRAM] int 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         6       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4198 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:       11 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 5
  4202 ;; This function calls:
  4203 ;;		_fputc
  4204 ;;		_fputs
  4205 ;;		_strlen
  4206 ;; This function is called by:
  4207 ;;		_efgtoa
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text9
  4212  0033D8                     __ptext9:
  4213                           	callstack 0
  4214  0033D8                     _pad:
  4215                           	callstack 21
  4216  0033D8                     
  4217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4218  0033D8  A050               	btfss	_flags^0,0,c
  4219  0033DA  EFF1  F019         	goto	u6311
  4220  0033DE  EFF3  F019         	goto	u6310
  4221  0033E2                     u6311:
  4222  0033E2  EFFD  F019         	goto	l4690
  4223  0033E6                     u6310:
  4224  0033E6                     
  4225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4226  0033E6  C01F  F016         	movff	pad@buf,fputs@s
  4227  0033EA  C020  F017         	movff	pad@buf+1,fputs@s+1
  4228  0033EE  C01D  F018         	movff	pad@fp,fputs@fp
  4229  0033F2  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  4230  0033F6  ECB3  F01C         	call	_fputs	;wreg free
  4231  0033FA                     l4690:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4234  0033FA  BE22               	btfsc	(pad@p+1)^0,7,c
  4235  0033FC  EF02  F01A         	goto	u6321
  4236  003400  EF04  F01A         	goto	u6320
  4237  003404                     u6321:
  4238  003404  EF0A  F01A         	goto	l4694
  4239  003408                     u6320:
  4240  003408  C021  F026         	movff	pad@p,pad@w
  4241  00340C  C022  F027         	movff	pad@p+1,pad@w+1
  4242  003410  EF0E  F01A         	goto	l809
  4243  003414                     l4694:
  4244  003414  0E00               	movlw	0
  4245  003416  6E27               	movwf	(pad@w+1)^0,c
  4246  003418  0E00               	movlw	0
  4247  00341A  6E26               	movwf	pad@w^0,c
  4248  00341C                     l809:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4251  00341C  0E00               	movlw	0
  4252  00341E  6E25               	movwf	(pad@i+1)^0,c
  4253  003420  0E00               	movlw	0
  4254  003422  6E24               	movwf	pad@i^0,c
  4255                           
  4256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4257  003424  EF20  F01A         	goto	l4700
  4258  003428                     l4696:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4261  003428  0E00               	movlw	0
  4262  00342A  6E0E               	movwf	(fputc@c+1)^0,c
  4263  00342C  0E20               	movlw	32
  4264  00342E  6E0D               	movwf	fputc@c^0,c
  4265  003430  C01D  F00F         	movff	pad@fp,fputc@fp
  4266  003434  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  4267  003438  EC25  F019         	call	_fputc	;wreg free
  4268  00343C                     
  4269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4270  00343C  4A24               	infsnz	pad@i^0,f,c
  4271  00343E  2A25               	incf	(pad@i+1)^0,f,c
  4272  003440                     l4700:
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4275  003440  5026               	movf	pad@w^0,w,c
  4276  003442  5C24               	subwf	pad@i^0,w,c
  4277  003444  5025               	movf	(pad@i+1)^0,w,c
  4278  003446  0A80               	xorlw	128
  4279  003448  6E23               	movwf	??_pad^0,c
  4280  00344A  5027               	movf	(pad@w+1)^0,w,c
  4281  00344C  0A80               	xorlw	128
  4282  00344E  5823               	subwfb	??_pad^0,w,c
  4283  003450  A0D8               	btfss	status,0,c
  4284  003452  EF2D  F01A         	goto	u6331
  4285  003456  EF2F  F01A         	goto	u6330
  4286  00345A                     u6331:
  4287  00345A  EF14  F01A         	goto	l4696
  4288  00345E                     u6330:
  4289  00345E                     
  4290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4291  00345E  B050               	btfsc	_flags^0,0,c
  4292  003460  EF34  F01A         	goto	u6341
  4293  003464  EF36  F01A         	goto	u6340
  4294  003468                     u6341:
  4295  003468  EF40  F01A         	goto	l4704
  4296  00346C                     u6340:
  4297  00346C                     
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4299  00346C  C01F  F016         	movff	pad@buf,fputs@s
  4300  003470  C020  F017         	movff	pad@buf+1,fputs@s+1
  4301  003474  C01D  F018         	movff	pad@fp,fputs@fp
  4302  003478  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  4303  00347C  ECB3  F01C         	call	_fputs	;wreg free
  4304  003480                     l4704:
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4307  003480  C01F  F00D         	movff	pad@buf,strlen@s
  4308  003484  C020  F00E         	movff	pad@buf+1,strlen@s+1
  4309  003488  EC69  F01C         	call	_strlen	;wreg free
  4310  00348C  5026               	movf	pad@w^0,w,c
  4311  00348E  240D               	addwf	?_strlen^0,w,c
  4312  003490  6E1D               	movwf	?_pad^0,c
  4313  003492  5027               	movf	(pad@w+1)^0,w,c
  4314  003494  200E               	addwfc	(?_strlen+1)^0,w,c
  4315  003496  6E1E               	movwf	(?_pad+1)^0,c
  4316  003498  0012               	return		;funcret
  4317  00349A                     __end_of_pad:
  4318                           	callstack 0
  4319                           
  4320 ;; *************** function _fputs *****************
  4321 ;; Defined at:
  4322 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  s               2   21[COMRAM] PTR const unsigned char 
  4325 ;;		 -> dbuf(80), 
  4326 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  4327 ;;		 -> sprintf@f(6), 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  i               2   26[COMRAM] int 
  4330 ;;  c               1   25[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  2   21[COMRAM] int 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4340 ;;      Params:         4       0       0       0       0       0       0       0       0
  4341 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4343 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4344 ;;Total ram usage:        7 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 4
  4347 ;; This function calls:
  4348 ;;		_fputc
  4349 ;; This function is called by:
  4350 ;;		_pad
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text10
  4355  003966                     __ptext10:
  4356                           	callstack 0
  4357  003966                     _fputs:
  4358                           	callstack 21
  4359  003966  0E00               	movlw	0
  4360  003968  6E1C               	movwf	(fputs@i+1)^0,c
  4361  00396A  0E00               	movlw	0
  4362  00396C  6E1B               	movwf	fputs@i^0,c
  4363  00396E  EFC4  F01C         	goto	l4230
  4364  003972                     l4226:
  4365  003972  C01A  F00D         	movff	fputs@c,fputc@c
  4366  003976  6A0E               	clrf	(fputc@c+1)^0,c
  4367  003978  C018  F00F         	movff	fputs@fp,fputc@fp
  4368  00397C  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  4369  003980  EC25  F019         	call	_fputc	;wreg free
  4370  003984  4A1B               	infsnz	fputs@i^0,f,c
  4371  003986  2A1C               	incf	(fputs@i+1)^0,f,c
  4372  003988                     l4230:
  4373  003988  501B               	movf	fputs@i^0,w,c
  4374  00398A  2416               	addwf	fputs@s^0,w,c
  4375  00398C  6ED9               	movwf	fsr2l,c
  4376  00398E  501C               	movf	(fputs@i+1)^0,w,c
  4377  003990  2017               	addwfc	(fputs@s+1)^0,w,c
  4378  003992  6EDA               	movwf	fsr2h,c
  4379  003994  50DF               	movf	indf2,w,c
  4380  003996  6E1A               	movwf	fputs@c^0,c
  4381  003998  501A               	movf	fputs@c^0,w,c
  4382  00399A  A4D8               	btfss	status,2,c
  4383  00399C  EFD2  F01C         	goto	u5581
  4384  0039A0  EFD4  F01C         	goto	u5580
  4385  0039A4                     u5581:
  4386  0039A4  EFB9  F01C         	goto	l4226
  4387  0039A8                     u5580:
  4388  0039A8  0012               	return		;funcret
  4389  0039AA                     __end_of_fputs:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _fputc *****************
  4393 ;; Defined at:
  4394 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  c               2   12[COMRAM] int 
  4397 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  4398 ;;		 -> sprintf@f(6), 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  2   12[COMRAM] int 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4410 ;;      Params:         4       0       0       0       0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4412 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4413 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4414 ;;Total ram usage:        9 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 3
  4417 ;; This function calls:
  4418 ;;		_putch
  4419 ;; This function is called by:
  4420 ;;		_pad
  4421 ;;		_vfpfcnvrt
  4422 ;;		_fputs
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text11
  4427  00324A                     __ptext11:
  4428                           	callstack 0
  4429  00324A                     _fputc:
  4430                           	callstack 24
  4431  00324A  500F               	movf	fputc@fp^0,w,c
  4432  00324C  1010               	iorwf	(fputc@fp+1)^0,w,c
  4433  00324E  B4D8               	btfsc	status,2,c
  4434  003250  EF2C  F019         	goto	u5131
  4435  003254  EF2E  F019         	goto	u5130
  4436  003258                     u5131:
  4437  003258  EF37  F019         	goto	l4002
  4438  00325C                     u5130:
  4439  00325C  500F               	movf	fputc@fp^0,w,c
  4440  00325E  1010               	iorwf	(fputc@fp+1)^0,w,c
  4441  003260  A4D8               	btfss	status,2,c
  4442  003262  EF35  F019         	goto	u5141
  4443  003266  EF37  F019         	goto	u5140
  4444  00326A                     u5141:
  4445  00326A  EF3C  F019         	goto	l4004
  4446  00326E                     u5140:
  4447  00326E                     l4002:
  4448  00326E  500D               	movf	fputc@c^0,w,c
  4449  003270  EC8B  F01D         	call	_putch
  4450  003274  EF89  F019         	goto	l1035
  4451  003278                     l4004:
  4452  003278  EE20 F004          	lfsr	2,4
  4453  00327C  500F               	movf	fputc@fp^0,w,c
  4454  00327E  26D9               	addwf	fsr2l,f,c
  4455  003280  5010               	movf	(fputc@fp+1)^0,w,c
  4456  003282  22DA               	addwfc	fsr2h,f,c
  4457  003284  50DE               	movf	postinc2,w,c
  4458  003286  10DE               	iorwf	postinc2,w,c
  4459  003288  B4D8               	btfsc	status,2,c
  4460  00328A  EF49  F019         	goto	u5151
  4461  00328E  EF4B  F019         	goto	u5150
  4462  003292                     u5151:
  4463  003292  EF66  F019         	goto	l4008
  4464  003296                     u5150:
  4465  003296  EE20 F004          	lfsr	2,4
  4466  00329A  500F               	movf	fputc@fp^0,w,c
  4467  00329C  26D9               	addwf	fsr2l,f,c
  4468  00329E  5010               	movf	(fputc@fp+1)^0,w,c
  4469  0032A0  22DA               	addwfc	fsr2h,f,c
  4470  0032A2  EE10 F002          	lfsr	1,2
  4471  0032A6  500F               	movf	fputc@fp^0,w,c
  4472  0032A8  26E1               	addwf	fsr1l,f,c
  4473  0032AA  5010               	movf	(fputc@fp+1)^0,w,c
  4474  0032AC  22E2               	addwfc	fsr1h,f,c
  4475  0032AE  50DE               	movf	postinc2,w,c
  4476  0032B0  5CE6               	subwf	postinc1,w,c
  4477  0032B2  50E6               	movf	postinc1,w,c
  4478  0032B4  0A80               	xorlw	128
  4479  0032B6  6E15               	movwf	(??_fputc+4)^0,c
  4480  0032B8  50DE               	movf	postinc2,w,c
  4481  0032BA  0A80               	xorlw	128
  4482  0032BC  5815               	subwfb	(??_fputc+4)^0,w,c
  4483  0032BE  B0D8               	btfsc	status,0,c
  4484  0032C0  EF64  F019         	goto	u5161
  4485  0032C4  EF66  F019         	goto	u5160
  4486  0032C8                     u5161:
  4487  0032C8  EF89  F019         	goto	l1035
  4488  0032CC                     u5160:
  4489  0032CC                     l4008:
  4490  0032CC  EE20 F002          	lfsr	2,2
  4491  0032D0  500F               	movf	fputc@fp^0,w,c
  4492  0032D2  26D9               	addwf	fsr2l,f,c
  4493  0032D4  5010               	movf	(fputc@fp+1)^0,w,c
  4494  0032D6  22DA               	addwfc	fsr2h,f,c
  4495  0032D8  CFDE F011          	movff	postinc2,??_fputc
  4496  0032DC  CFDD F012          	movff	postdec2,??_fputc+1
  4497  0032E0  C00F  FFD9         	movff	fputc@fp,fsr2l
  4498  0032E4  C010  FFDA         	movff	fputc@fp+1,fsr2h
  4499  0032E8  CFDE F013          	movff	postinc2,??_fputc+2
  4500  0032EC  CFDD F014          	movff	postdec2,??_fputc+3
  4501  0032F0  5011               	movf	??_fputc^0,w,c
  4502  0032F2  2413               	addwf	(??_fputc+2)^0,w,c
  4503  0032F4  6ED9               	movwf	fsr2l,c
  4504  0032F6  5012               	movf	(??_fputc+1)^0,w,c
  4505  0032F8  2014               	addwfc	(??_fputc+3)^0,w,c
  4506  0032FA  6EDA               	movwf	fsr2h,c
  4507  0032FC  C00D  FFDF         	movff	fputc@c,indf2
  4508  003300  EE20 F002          	lfsr	2,2
  4509  003304  500F               	movf	fputc@fp^0,w,c
  4510  003306  26D9               	addwf	fsr2l,f,c
  4511  003308  5010               	movf	(fputc@fp+1)^0,w,c
  4512  00330A  22DA               	addwfc	fsr2h,f,c
  4513  00330C  2ADE               	incf	postinc2,f,c
  4514  00330E  0E00               	movlw	0
  4515  003310  22DD               	addwfc	postdec2,f,c
  4516  003312                     l1035:
  4517  003312  0012               	return		;funcret
  4518  003314                     __end_of_fputc:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _putch *****************
  4522 ;; Defined at:
  4523 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  c               1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  c               1    0[COMRAM] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4540 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 2
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_fputc
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text12
  4552  003B16                     __ptext12:
  4553                           	callstack 0
  4554  003B16                     _putch:
  4555                           	callstack 24
  4556  003B16  0012               	return		;funcret
  4557  003B18                     __end_of_putch:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _floorf *****************
  4561 ;; Defined at:
  4562 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  x               4   37[COMRAM] float 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  u               4   53[COMRAM] struct .
  4567 ;;  m               4   47[COMRAM] unsigned long 
  4568 ;;  e               2   51[COMRAM] int 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  4   37[COMRAM] float 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4578 ;;      Params:         4       0       0       0       0       0       0       0       0
  4579 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4580 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4581 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:       20 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; Hardware stack levels required when called: 2
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_efgtoa
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text13
  4593  00267E                     __ptext13:
  4594                           	callstack 0
  4595  00267E                     _floorf:
  4596                           	callstack 24
  4597  00267E  C0D4  F036         	movff	floorf@F527,floorf@u
  4598  002682  C0D5  F037         	movff	floorf@F527+1,floorf@u+1
  4599  002686  C0D6  F038         	movff	floorf@F527+2,floorf@u+2
  4600  00268A  C0D7  F039         	movff	floorf@F527+3,floorf@u+3
  4601  00268E  C026  F036         	movff	floorf@x,floorf@u
  4602  002692  C027  F037         	movff	floorf@x+1,floorf@u+1
  4603  002696  C028  F038         	movff	floorf@x+2,floorf@u+2
  4604  00269A  C029  F039         	movff	floorf@x+3,floorf@u+3
  4605  00269E  0E81               	movlw	129
  4606  0026A0  6E2A               	movwf	??_floorf^0,c
  4607  0026A2  0EFF               	movlw	255
  4608  0026A4  6E2B               	movwf	(??_floorf+1)^0,c
  4609  0026A6  C036  F02C         	movff	floorf@u,??_floorf+2
  4610  0026AA  C037  F02D         	movff	floorf@u+1,??_floorf+3
  4611  0026AE  C038  F02E         	movff	floorf@u+2,??_floorf+4
  4612  0026B2  C039  F02F         	movff	floorf@u+3,??_floorf+5
  4613  0026B6  0E18               	movlw	24
  4614  0026B8  EF63  F013         	goto	u6470
  4615  0026BC                     u6475:
  4616  0026BC  90D8               	bcf	status,0,c
  4617  0026BE  322F               	rrcf	(??_floorf+5)^0,f,c
  4618  0026C0  322E               	rrcf	(??_floorf+4)^0,f,c
  4619  0026C2  322D               	rrcf	(??_floorf+3)^0,f,c
  4620  0026C4  322C               	rrcf	(??_floorf+2)^0,f,c
  4621  0026C6                     u6470:
  4622  0026C6  2EE8               	decfsz	wreg,f,c
  4623  0026C8  EF5E  F013         	goto	u6475
  4624  0026CC  502C               	movf	(??_floorf+2)^0,w,c
  4625  0026CE  242A               	addwf	??_floorf^0,w,c
  4626  0026D0  6E34               	movwf	floorf@e^0,c
  4627  0026D2  0E00               	movlw	0
  4628  0026D4  202B               	addwfc	(??_floorf+1)^0,w,c
  4629  0026D6  6E35               	movwf	(floorf@e+1)^0,c
  4630  0026D8  BE35               	btfsc	(floorf@e+1)^0,7,c
  4631  0026DA  EF78  F013         	goto	u6481
  4632  0026DE  5035               	movf	(floorf@e+1)^0,w,c
  4633  0026E0  E109               	bnz	u6480
  4634  0026E2  0E17               	movlw	23
  4635  0026E4  5C34               	subwf	floorf@e^0,w,c
  4636  0026E6  A0D8               	btfss	status,0,c
  4637  0026E8  EF78  F013         	goto	u6481
  4638  0026EC  EF7A  F013         	goto	u6480
  4639  0026F0                     u6481:
  4640  0026F0  EF84  F013         	goto	l4750
  4641  0026F4                     u6480:
  4642  0026F4                     l4748:
  4643  0026F4  C026  F026         	movff	floorf@x,?_floorf
  4644  0026F8  C027  F027         	movff	floorf@x+1,?_floorf+1
  4645  0026FC  C028  F028         	movff	floorf@x+2,?_floorf+2
  4646  002700  C029  F029         	movff	floorf@x+3,?_floorf+3
  4647  002704  EF47  F014         	goto	l996
  4648  002708                     l4750:
  4649  002708  BE35               	btfsc	(floorf@e+1)^0,7,c
  4650  00270A  EF89  F013         	goto	u6491
  4651  00270E  EF8B  F013         	goto	u6490
  4652  002712                     u6491:
  4653  002712  EFFB  F013         	goto	l4760
  4654  002716                     u6490:
  4655  002716  C034  F02A         	movff	floorf@e,??_floorf
  4656  00271A  0EFF               	movlw	255
  4657  00271C  6E2B               	movwf	(??_floorf+1)^0,c
  4658  00271E  0EFF               	movlw	255
  4659  002720  6E2C               	movwf	(??_floorf+2)^0,c
  4660  002722  0E7F               	movlw	127
  4661  002724  6E2D               	movwf	(??_floorf+3)^0,c
  4662  002726  0E00               	movlw	0
  4663  002728  6E2E               	movwf	(??_floorf+4)^0,c
  4664  00272A                     u6505:
  4665  00272A  662A               	tstfsz	??_floorf^0,c
  4666  00272C  EF9A  F013         	goto	u6506
  4667  002730  EFA2  F013         	goto	u6507
  4668  002734                     u6506:
  4669  002734  342E               	rlcf	(??_floorf+4)^0,w,c
  4670  002736  322E               	rrcf	(??_floorf+4)^0,f,c
  4671  002738  322D               	rrcf	(??_floorf+3)^0,f,c
  4672  00273A  322C               	rrcf	(??_floorf+2)^0,f,c
  4673  00273C  322B               	rrcf	(??_floorf+1)^0,f,c
  4674  00273E  2E2A               	decfsz	??_floorf^0,f,c
  4675  002740  EF95  F013         	goto	u6505
  4676  002744                     u6507:
  4677  002744  C02B  F030         	movff	??_floorf+1,floorf@m
  4678  002748  C02C  F031         	movff	??_floorf+2,floorf@m+1
  4679  00274C  C02D  F032         	movff	??_floorf+3,floorf@m+2
  4680  002750  C02E  F033         	movff	??_floorf+4,floorf@m+3
  4681  002754  5030               	movf	floorf@m^0,w,c
  4682  002756  1436               	andwf	floorf@u^0,w,c
  4683  002758  6E2A               	movwf	??_floorf^0,c
  4684  00275A  5031               	movf	(floorf@m+1)^0,w,c
  4685  00275C  1437               	andwf	(floorf@u+1)^0,w,c
  4686  00275E  6E2B               	movwf	(??_floorf+1)^0,c
  4687  002760  5032               	movf	(floorf@m+2)^0,w,c
  4688  002762  1438               	andwf	(floorf@u+2)^0,w,c
  4689  002764  6E2C               	movwf	(??_floorf+2)^0,c
  4690  002766  5033               	movf	(floorf@m+3)^0,w,c
  4691  002768  1439               	andwf	(floorf@u+3)^0,w,c
  4692  00276A  6E2D               	movwf	(??_floorf+3)^0,c
  4693  00276C  502A               	movf	??_floorf^0,w,c
  4694  00276E  102B               	iorwf	(??_floorf+1)^0,w,c
  4695  002770  102C               	iorwf	(??_floorf+2)^0,w,c
  4696  002772  102D               	iorwf	(??_floorf+3)^0,w,c
  4697  002774  A4D8               	btfss	status,2,c
  4698  002776  EFBF  F013         	goto	u6511
  4699  00277A  EFC1  F013         	goto	u6510
  4700  00277E                     u6511:
  4701  00277E  EFC3  F013         	goto	l4756
  4702  002782                     u6510:
  4703  002782  EF7A  F013         	goto	l4748
  4704  002786                     l4756:
  4705  002786  C036  F02A         	movff	floorf@u,??_floorf
  4706  00278A  C037  F02B         	movff	floorf@u+1,??_floorf+1
  4707  00278E  C038  F02C         	movff	floorf@u+2,??_floorf+2
  4708  002792  C039  F02D         	movff	floorf@u+3,??_floorf+3
  4709  002796  0E20               	movlw	32
  4710  002798  EFD3  F013         	goto	u6520
  4711  00279C                     u6525:
  4712  00279C  90D8               	bcf	status,0,c
  4713  00279E  322D               	rrcf	(??_floorf+3)^0,f,c
  4714  0027A0  322C               	rrcf	(??_floorf+2)^0,f,c
  4715  0027A2  322B               	rrcf	(??_floorf+1)^0,f,c
  4716  0027A4  322A               	rrcf	??_floorf^0,f,c
  4717  0027A6                     u6520:
  4718  0027A6  2EE8               	decfsz	wreg,f,c
  4719  0027A8  EFCE  F013         	goto	u6525
  4720  0027AC  502A               	movf	??_floorf^0,w,c
  4721  0027AE  102B               	iorwf	(??_floorf+1)^0,w,c
  4722  0027B0  102C               	iorwf	(??_floorf+2)^0,w,c
  4723  0027B2  102D               	iorwf	(??_floorf+3)^0,w,c
  4724  0027B4  B4D8               	btfsc	status,2,c
  4725  0027B6  EFDF  F013         	goto	u6531
  4726  0027BA  EFE1  F013         	goto	u6530
  4727  0027BE                     u6531:
  4728  0027BE  EFE9  F013         	goto	l999
  4729  0027C2                     u6530:
  4730  0027C2  5030               	movf	floorf@m^0,w,c
  4731  0027C4  2636               	addwf	floorf@u^0,f,c
  4732  0027C6  5031               	movf	(floorf@m+1)^0,w,c
  4733  0027C8  2237               	addwfc	(floorf@u+1)^0,f,c
  4734  0027CA  5032               	movf	(floorf@m+2)^0,w,c
  4735  0027CC  2238               	addwfc	(floorf@u+2)^0,f,c
  4736  0027CE  5033               	movf	(floorf@m+3)^0,w,c
  4737  0027D0  2239               	addwfc	(floorf@u+3)^0,f,c
  4738  0027D2                     l999:
  4739  0027D2  1C30               	comf	floorf@m^0,w,c
  4740  0027D4  6E2A               	movwf	??_floorf^0,c
  4741  0027D6  1C31               	comf	(floorf@m+1)^0,w,c
  4742  0027D8  6E2B               	movwf	(??_floorf+1)^0,c
  4743  0027DA  1C32               	comf	(floorf@m+2)^0,w,c
  4744  0027DC  6E2C               	movwf	(??_floorf+2)^0,c
  4745  0027DE  1C33               	comf	(floorf@m+3)^0,w,c
  4746  0027E0  6E2D               	movwf	(??_floorf+3)^0,c
  4747  0027E2  502A               	movf	??_floorf^0,w,c
  4748  0027E4  1636               	andwf	floorf@u^0,f,c
  4749  0027E6  502B               	movf	(??_floorf+1)^0,w,c
  4750  0027E8  1637               	andwf	(floorf@u+1)^0,f,c
  4751  0027EA  502C               	movf	(??_floorf+2)^0,w,c
  4752  0027EC  1638               	andwf	(floorf@u+2)^0,f,c
  4753  0027EE  502D               	movf	(??_floorf+3)^0,w,c
  4754  0027F0  1639               	andwf	(floorf@u+3)^0,f,c
  4755  0027F2  EF3F  F014         	goto	l4768
  4756  0027F6                     l4760:
  4757  0027F6  C036  F02A         	movff	floorf@u,??_floorf
  4758  0027FA  C037  F02B         	movff	floorf@u+1,??_floorf+1
  4759  0027FE  C038  F02C         	movff	floorf@u+2,??_floorf+2
  4760  002802  C039  F02D         	movff	floorf@u+3,??_floorf+3
  4761  002806  0E20               	movlw	32
  4762  002808  EF0B  F014         	goto	u6540
  4763  00280C                     u6545:
  4764  00280C  90D8               	bcf	status,0,c
  4765  00280E  322D               	rrcf	(??_floorf+3)^0,f,c
  4766  002810  322C               	rrcf	(??_floorf+2)^0,f,c
  4767  002812  322B               	rrcf	(??_floorf+1)^0,f,c
  4768  002814  322A               	rrcf	??_floorf^0,f,c
  4769  002816                     u6540:
  4770  002816  2EE8               	decfsz	wreg,f,c
  4771  002818  EF06  F014         	goto	u6545
  4772  00281C  502A               	movf	??_floorf^0,w,c
  4773  00281E  102B               	iorwf	(??_floorf+1)^0,w,c
  4774  002820  102C               	iorwf	(??_floorf+2)^0,w,c
  4775  002822  102D               	iorwf	(??_floorf+3)^0,w,c
  4776  002824  A4D8               	btfss	status,2,c
  4777  002826  EF17  F014         	goto	u6551
  4778  00282A  EF19  F014         	goto	u6550
  4779  00282E                     u6551:
  4780  00282E  EF23  F014         	goto	l4764
  4781  002832                     u6550:
  4782  002832  0E00               	movlw	0
  4783  002834  6E36               	movwf	floorf@u^0,c
  4784  002836  0E00               	movlw	0
  4785  002838  6E37               	movwf	(floorf@u+1)^0,c
  4786  00283A  0E00               	movlw	0
  4787  00283C  6E38               	movwf	(floorf@u+2)^0,c
  4788  00283E  0E00               	movlw	0
  4789  002840  6E39               	movwf	(floorf@u+3)^0,c
  4790  002842  EF3F  F014         	goto	l4768
  4791  002846                     l4764:
  4792  002846  90D8               	bcf	status,0,c
  4793  002848  3436               	rlcf	floorf@u^0,w,c
  4794  00284A  6E2A               	movwf	??_floorf^0,c
  4795  00284C  3437               	rlcf	(floorf@u+1)^0,w,c
  4796  00284E  6E2B               	movwf	(??_floorf+1)^0,c
  4797  002850  3438               	rlcf	(floorf@u+2)^0,w,c
  4798  002852  6E2C               	movwf	(??_floorf+2)^0,c
  4799  002854  3439               	rlcf	(floorf@u+3)^0,w,c
  4800  002856  6E2D               	movwf	(??_floorf+3)^0,c
  4801  002858  502A               	movf	??_floorf^0,w,c
  4802  00285A  102B               	iorwf	(??_floorf+1)^0,w,c
  4803  00285C  102C               	iorwf	(??_floorf+2)^0,w,c
  4804  00285E  102D               	iorwf	(??_floorf+3)^0,w,c
  4805  002860  B4D8               	btfsc	status,2,c
  4806  002862  EF35  F014         	goto	u6561
  4807  002866  EF37  F014         	goto	u6560
  4808  00286A                     u6561:
  4809  00286A  EF3F  F014         	goto	l4768
  4810  00286E                     u6560:
  4811  00286E  0E00               	movlw	0
  4812  002870  6E36               	movwf	floorf@u^0,c
  4813  002872  0E00               	movlw	0
  4814  002874  6E37               	movwf	(floorf@u+1)^0,c
  4815  002876  0E80               	movlw	128
  4816  002878  6E38               	movwf	(floorf@u+2)^0,c
  4817  00287A  0EBF               	movlw	191
  4818  00287C  6E39               	movwf	(floorf@u+3)^0,c
  4819  00287E                     l4768:
  4820  00287E  C036  F026         	movff	floorf@u,?_floorf
  4821  002882  C037  F027         	movff	floorf@u+1,?_floorf+1
  4822  002886  C038  F028         	movff	floorf@u+2,?_floorf+2
  4823  00288A  C039  F029         	movff	floorf@u+3,?_floorf+3
  4824  00288E                     l996:
  4825  00288E  0012               	return		;funcret
  4826  002890                     __end_of_floorf:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function ___fpclassifyf *****************
  4830 ;; Defined at:
  4831 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  x               4   12[COMRAM] float 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  u               4   22[COMRAM] struct .
  4836 ;;  e               2   20[COMRAM] int 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  2   12[COMRAM] int 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4846 ;;      Params:         4       0       0       0       0       0       0       0       0
  4847 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4848 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4849 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4850 ;;Total ram usage:       14 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 2
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_efgtoa
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text14
  4861  003076                     __ptext14:
  4862                           	callstack 0
  4863  003076                     ___fpclassifyf:
  4864                           	callstack 24
  4865  003076  C0D8  F017         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4866  00307A  C0D9  F018         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4867  00307E  C0DA  F019         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4868  003082  C0DB  F01A         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4869  003086  C00D  F017         	movff	___fpclassifyf@x,___fpclassifyf@u
  4870  00308A  C00E  F018         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4871  00308E  C00F  F019         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4872  003092  C010  F01A         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4873  003096  C017  F011         	movff	___fpclassifyf@u,??___fpclassifyf
  4874  00309A  C018  F012         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4875  00309E  C019  F013         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4876  0030A2  C01A  F014         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4877  0030A6  0E18               	movlw	24
  4878  0030A8  EF5B  F018         	goto	u6350
  4879  0030AC                     u6355:
  4880  0030AC  90D8               	bcf	status,0,c
  4881  0030AE  3214               	rrcf	(??___fpclassifyf+3)^0,f,c
  4882  0030B0  3213               	rrcf	(??___fpclassifyf+2)^0,f,c
  4883  0030B2  3212               	rrcf	(??___fpclassifyf+1)^0,f,c
  4884  0030B4  3211               	rrcf	??___fpclassifyf^0,f,c
  4885  0030B6                     u6350:
  4886  0030B6  2EE8               	decfsz	wreg,f,c
  4887  0030B8  EF56  F018         	goto	u6355
  4888  0030BC  5011               	movf	??___fpclassifyf^0,w,c
  4889  0030BE  6E15               	movwf	___fpclassifyf@e^0,c
  4890  0030C0  6A16               	clrf	(___fpclassifyf@e+1)^0,c
  4891  0030C2  5015               	movf	___fpclassifyf@e^0,w,c
  4892  0030C4  1016               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4893  0030C6  A4D8               	btfss	status,2,c
  4894  0030C8  EF68  F018         	goto	u6361
  4895  0030CC  EF6A  F018         	goto	u6360
  4896  0030D0                     u6361:
  4897  0030D0  EF8A  F018         	goto	l4720
  4898  0030D4                     u6360:
  4899  0030D4  90D8               	bcf	status,0,c
  4900  0030D6  3417               	rlcf	___fpclassifyf@u^0,w,c
  4901  0030D8  6E11               	movwf	??___fpclassifyf^0,c
  4902  0030DA  3418               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4903  0030DC  6E12               	movwf	(??___fpclassifyf+1)^0,c
  4904  0030DE  3419               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4905  0030E0  6E13               	movwf	(??___fpclassifyf+2)^0,c
  4906  0030E2  341A               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4907  0030E4  6E14               	movwf	(??___fpclassifyf+3)^0,c
  4908  0030E6  5011               	movf	??___fpclassifyf^0,w,c
  4909  0030E8  1012               	iorwf	(??___fpclassifyf+1)^0,w,c
  4910  0030EA  1013               	iorwf	(??___fpclassifyf+2)^0,w,c
  4911  0030EC  1014               	iorwf	(??___fpclassifyf+3)^0,w,c
  4912  0030EE  A4D8               	btfss	status,2,c
  4913  0030F0  EF7C  F018         	goto	u6371
  4914  0030F4  EF7E  F018         	goto	u6370
  4915  0030F8                     u6371:
  4916  0030F8  EF84  F018         	goto	l4716
  4917  0030FC                     u6370:
  4918  0030FC  0E00               	movlw	0
  4919  0030FE  6E0E               	movwf	(?___fpclassifyf+1)^0,c
  4920  003100  0E02               	movlw	2
  4921  003102  6E0D               	movwf	?___fpclassifyf^0,c
  4922  003104  EFB9  F018         	goto	l958
  4923  003108                     l4716:
  4924  003108  0E00               	movlw	0
  4925  00310A  6E0E               	movwf	(?___fpclassifyf+1)^0,c
  4926  00310C  0E03               	movlw	3
  4927  00310E  6E0D               	movwf	?___fpclassifyf^0,c
  4928  003110  EFB9  F018         	goto	l958
  4929  003114                     l4720:
  4930  003114  2815               	incf	___fpclassifyf@e^0,w,c
  4931  003116  1016               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4932  003118  A4D8               	btfss	status,2,c
  4933  00311A  EF91  F018         	goto	u6381
  4934  00311E  EF93  F018         	goto	u6380
  4935  003122                     u6381:
  4936  003122  EFB5  F018         	goto	l4726
  4937  003126                     u6380:
  4938  003126  C017  F011         	movff	___fpclassifyf@u,??___fpclassifyf
  4939  00312A  C018  F012         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4940  00312E  C019  F013         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4941  003132  C01A  F014         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4942  003136  0E09               	movlw	9
  4943  003138                     u6395:
  4944  003138  90D8               	bcf	status,0,c
  4945  00313A  3611               	rlcf	??___fpclassifyf^0,f,c
  4946  00313C  3612               	rlcf	(??___fpclassifyf+1)^0,f,c
  4947  00313E  3613               	rlcf	(??___fpclassifyf+2)^0,f,c
  4948  003140  3614               	rlcf	(??___fpclassifyf+3)^0,f,c
  4949  003142  2EE8               	decfsz	wreg,f,c
  4950  003144  EF9C  F018         	goto	u6395
  4951  003148  5011               	movf	??___fpclassifyf^0,w,c
  4952  00314A  1012               	iorwf	(??___fpclassifyf+1)^0,w,c
  4953  00314C  1013               	iorwf	(??___fpclassifyf+2)^0,w,c
  4954  00314E  1014               	iorwf	(??___fpclassifyf+3)^0,w,c
  4955  003150  B4D8               	btfsc	status,2,c
  4956  003152  EFAD  F018         	goto	u6401
  4957  003156  EFB0  F018         	goto	u6400
  4958  00315A                     u6401:
  4959  00315A  0E01               	movlw	1
  4960  00315C  EFB1  F018         	goto	u6410
  4961  003160                     u6400:
  4962  003160  0E00               	movlw	0
  4963  003162                     u6410:
  4964  003162  6E0D               	movwf	?___fpclassifyf^0,c
  4965  003164  6A0E               	clrf	(?___fpclassifyf+1)^0,c
  4966  003166  EFB9  F018         	goto	l958
  4967  00316A                     l4726:
  4968  00316A  0E00               	movlw	0
  4969  00316C  6E0E               	movwf	(?___fpclassifyf+1)^0,c
  4970  00316E  0E04               	movlw	4
  4971  003170  6E0D               	movwf	?___fpclassifyf^0,c
  4972  003172                     l958:
  4973  003172  0012               	return		;funcret
  4974  003174                     __end_of___fpclassifyf:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function ___fltol *****************
  4978 ;; Defined at:
  4979 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  f1              4   12[COMRAM] int 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  exp1            1   21[COMRAM] unsigned char 
  4984 ;;  sign1           1   20[COMRAM] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  4   12[COMRAM] long 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4994 ;;      Params:         4       0       0       0       0       0       0       0       0
  4995 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4997 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4998 ;;Total ram usage:       10 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 2
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;;		_efgtoa
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text15
  5010  002D68                     __ptext15:
  5011                           	callstack 0
  5012  002D68                     ___fltol:
  5013                           	callstack 24
  5014  002D68  340F               	rlcf	(___fltol@f1+2)^0,w,c
  5015  002D6A  3410               	rlcf	(___fltol@f1+3)^0,w,c
  5016  002D6C  6E16               	movwf	___fltol@exp1^0,c
  5017  002D6E  5016               	movf	___fltol@exp1^0,w,c
  5018  002D70  A4D8               	btfss	status,2,c
  5019  002D72  EFBD  F016         	goto	u6241
  5020  002D76  EFBF  F016         	goto	u6240
  5021  002D7A                     u6241:
  5022  002D7A  EFC9  F016         	goto	l4648
  5023  002D7E                     u6240:
  5024  002D7E                     l4644:
  5025  002D7E  0E00               	movlw	0
  5026  002D80  6E0D               	movwf	?___fltol^0,c
  5027  002D82  0E00               	movlw	0
  5028  002D84  6E0E               	movwf	(?___fltol+1)^0,c
  5029  002D86  0E00               	movlw	0
  5030  002D88  6E0F               	movwf	(?___fltol+2)^0,c
  5031  002D8A  0E00               	movlw	0
  5032  002D8C  6E10               	movwf	(?___fltol+3)^0,c
  5033  002D8E  EF36  F017         	goto	l387
  5034  002D92                     l4648:
  5035  002D92  C00D  F011         	movff	___fltol@f1,??___fltol
  5036  002D96  C00E  F012         	movff	___fltol@f1+1,??___fltol+1
  5037  002D9A  C00F  F013         	movff	___fltol@f1+2,??___fltol+2
  5038  002D9E  C010  F014         	movff	___fltol@f1+3,??___fltol+3
  5039  002DA2  0E20               	movlw	32
  5040  002DA4  EFD9  F016         	goto	u6250
  5041  002DA8                     u6255:
  5042  002DA8  90D8               	bcf	status,0,c
  5043  002DAA  3214               	rrcf	(??___fltol+3)^0,f,c
  5044  002DAC  3213               	rrcf	(??___fltol+2)^0,f,c
  5045  002DAE  3212               	rrcf	(??___fltol+1)^0,f,c
  5046  002DB0  3211               	rrcf	??___fltol^0,f,c
  5047  002DB2                     u6250:
  5048  002DB2  2EE8               	decfsz	wreg,f,c
  5049  002DB4  EFD4  F016         	goto	u6255
  5050  002DB8  5011               	movf	??___fltol^0,w,c
  5051  002DBA  6E15               	movwf	___fltol@sign1^0,c
  5052  002DBC  8E0F               	bsf	(___fltol@f1+2)^0,7,c
  5053  002DBE  0EFF               	movlw	255
  5054  002DC0  160D               	andwf	___fltol@f1^0,f,c
  5055  002DC2  0EFF               	movlw	255
  5056  002DC4  160E               	andwf	(___fltol@f1+1)^0,f,c
  5057  002DC6  0EFF               	movlw	255
  5058  002DC8  160F               	andwf	(___fltol@f1+2)^0,f,c
  5059  002DCA  0E00               	movlw	0
  5060  002DCC  1610               	andwf	(___fltol@f1+3)^0,f,c
  5061  002DCE  0E96               	movlw	150
  5062  002DD0  5E16               	subwf	___fltol@exp1^0,f,c
  5063  002DD2  BE16               	btfsc	___fltol@exp1^0,7,c
  5064  002DD4  EFF0  F016         	goto	u6260
  5065  002DD8  EFEE  F016         	goto	u6261
  5066  002DDC                     u6261:
  5067  002DDC  EF06  F017         	goto	l4668
  5068  002DE0                     u6260:
  5069  002DE0  5016               	movf	___fltol@exp1^0,w,c
  5070  002DE2  0A80               	xorlw	128
  5071  002DE4  0F97               	addlw	151
  5072  002DE6  B0D8               	btfsc	status,0,c
  5073  002DE8  EFF8  F016         	goto	u6271
  5074  002DEC  EFFA  F016         	goto	u6270
  5075  002DF0                     u6271:
  5076  002DF0  EFFC  F016         	goto	l4664
  5077  002DF4                     u6270:
  5078  002DF4  EFBF  F016         	goto	l4644
  5079  002DF8                     l4664:
  5080  002DF8  90D8               	bcf	status,0,c
  5081  002DFA  3210               	rrcf	(___fltol@f1+3)^0,f,c
  5082  002DFC  320F               	rrcf	(___fltol@f1+2)^0,f,c
  5083  002DFE  320E               	rrcf	(___fltol@f1+1)^0,f,c
  5084  002E00  320D               	rrcf	___fltol@f1^0,f,c
  5085  002E02  3E16               	incfsz	___fltol@exp1^0,f,c
  5086  002E04  EFFC  F016         	goto	l4664
  5087  002E08  EF1E  F017         	goto	l4678
  5088  002E0C                     l4668:
  5089  002E0C  0E1F               	movlw	31
  5090  002E0E  6416               	cpfsgt	___fltol@exp1^0,c
  5091  002E10  EF0C  F017         	goto	u6281
  5092  002E14  EF0E  F017         	goto	u6280
  5093  002E18                     u6281:
  5094  002E18  EF16  F017         	goto	l4676
  5095  002E1C                     u6280:
  5096  002E1C  EFBF  F016         	goto	l4644
  5097  002E20                     l4674:
  5098  002E20  90D8               	bcf	status,0,c
  5099  002E22  360D               	rlcf	___fltol@f1^0,f,c
  5100  002E24  360E               	rlcf	(___fltol@f1+1)^0,f,c
  5101  002E26  360F               	rlcf	(___fltol@f1+2)^0,f,c
  5102  002E28  3610               	rlcf	(___fltol@f1+3)^0,f,c
  5103  002E2A  0616               	decf	___fltol@exp1^0,f,c
  5104  002E2C                     l4676:
  5105  002E2C  5016               	movf	___fltol@exp1^0,w,c
  5106  002E2E  A4D8               	btfss	status,2,c
  5107  002E30  EF1C  F017         	goto	u6291
  5108  002E34  EF1E  F017         	goto	u6290
  5109  002E38                     u6291:
  5110  002E38  EF10  F017         	goto	l4674
  5111  002E3C                     u6290:
  5112  002E3C                     l4678:
  5113  002E3C  5015               	movf	___fltol@sign1^0,w,c
  5114  002E3E  B4D8               	btfsc	status,2,c
  5115  002E40  EF24  F017         	goto	u6301
  5116  002E44  EF26  F017         	goto	u6300
  5117  002E48                     u6301:
  5118  002E48  EF2E  F017         	goto	l4682
  5119  002E4C                     u6300:
  5120  002E4C  1E10               	comf	(___fltol@f1+3)^0,f,c
  5121  002E4E  1E0F               	comf	(___fltol@f1+2)^0,f,c
  5122  002E50  1E0E               	comf	(___fltol@f1+1)^0,f,c
  5123  002E52  6C0D               	negf	___fltol@f1^0,c
  5124  002E54  0E00               	movlw	0
  5125  002E56  220E               	addwfc	(___fltol@f1+1)^0,f,c
  5126  002E58  220F               	addwfc	(___fltol@f1+2)^0,f,c
  5127  002E5A  2210               	addwfc	(___fltol@f1+3)^0,f,c
  5128  002E5C                     l4682:
  5129  002E5C  C00D  F00D         	movff	___fltol@f1,?___fltol
  5130  002E60  C00E  F00E         	movff	___fltol@f1+1,?___fltol+1
  5131  002E64  C00F  F00F         	movff	___fltol@f1+2,?___fltol+2
  5132  002E68  C010  F010         	movff	___fltol@f1+3,?___fltol+3
  5133  002E6C                     l387:
  5134  002E6C  0012               	return		;funcret
  5135  002E6E                     __end_of___fltol:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function ___flsub *****************
  5139 ;; Defined at:
  5140 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  b               4   57[COMRAM] long 
  5143 ;;  a               4   61[COMRAM] long 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  4   57[COMRAM] long 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0, cstack
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5155 ;;      Params:         8       0       0       0       0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5158 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5159 ;;Total ram usage:        8 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; Hardware stack levels required when called: 3
  5162 ;; This function calls:
  5163 ;;		___fladd
  5164 ;; This function is called by:
  5165 ;;		_efgtoa
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text16
  5170  003920                     __ptext16:
  5171                           	callstack 0
  5172  003920                     ___flsub:
  5173                           	callstack 23
  5174  003920  0E00               	movlw	0
  5175  003922  1A3E               	xorwf	___flsub@a^0,f,c
  5176  003924  0E00               	movlw	0
  5177  003926  1A3F               	xorwf	(___flsub@a+1)^0,f,c
  5178  003928  0E00               	movlw	0
  5179  00392A  1A40               	xorwf	(___flsub@a+2)^0,f,c
  5180  00392C  0E80               	movlw	128
  5181  00392E  1A41               	xorwf	(___flsub@a+3)^0,f,c
  5182  003930  C03A  F00D         	movff	___flsub@b,___fladd@b
  5183  003934  C03B  F00E         	movff	___flsub@b+1,___fladd@b+1
  5184  003938  C03C  F00F         	movff	___flsub@b+2,___fladd@b+2
  5185  00393C  C03D  F010         	movff	___flsub@b+3,___fladd@b+3
  5186  003940  C03E  F011         	movff	___flsub@a,___fladd@a
  5187  003944  C03F  F012         	movff	___flsub@a+1,___fladd@a+1
  5188  003948  C040  F013         	movff	___flsub@a+2,___fladd@a+2
  5189  00394C  C041  F014         	movff	___flsub@a+3,___fladd@a+3
  5190  003950  ECFD  F00C         	call	___fladd	;wreg free
  5191  003954  C00D  F03A         	movff	?___fladd,?___flsub
  5192  003958  C00E  F03B         	movff	?___fladd+1,?___flsub+1
  5193  00395C  C00F  F03C         	movff	?___fladd+2,?___flsub+2
  5194  003960  C010  F03D         	movff	?___fladd+3,?___flsub+3
  5195  003964  0012               	return		;funcret
  5196  003966                     __end_of___flsub:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function ___fladd *****************
  5200 ;; Defined at:
  5201 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  b               4   12[COMRAM] long 
  5204 ;;  a               4   16[COMRAM] long 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  grs             1   27[COMRAM] unsigned char 
  5207 ;;  bexp            1   26[COMRAM] unsigned char 
  5208 ;;  aexp            1   25[COMRAM] unsigned char 
  5209 ;;  signs           1   24[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  4   12[COMRAM] unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5219 ;;      Params:         8       0       0       0       0       0       0       0       0
  5220 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5221 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5222 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5223 ;;Total ram usage:       16 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 2
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		___flsub
  5230 ;;		_efgtoa
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text17
  5235  0019FA                     __ptext17:
  5236                           	callstack 0
  5237  0019FA                     ___fladd:
  5238                           	callstack 23
  5239  0019FA  5010               	movf	(___fladd@b+3)^0,w,c
  5240  0019FC  0B80               	andlw	128
  5241  0019FE  6E19               	movwf	___fladd@signs^0,c
  5242  001A00  5010               	movf	(___fladd@b+3)^0,w,c
  5243  001A02  2410               	addwf	(___fladd@b+3)^0,w,c
  5244  001A04  6E1B               	movwf	___fladd@bexp^0,c
  5245  001A06  AE0F               	btfss	(___fladd@b+2)^0,7,c
  5246  001A08  EF08  F00D         	goto	u5191
  5247  001A0C  EF0A  F00D         	goto	u5190
  5248  001A10                     u5191:
  5249  001A10  EF0B  F00D         	goto	l4028
  5250  001A14                     u5190:
  5251  001A14  801B               	bsf	___fladd@bexp^0,0,c
  5252  001A16                     l4028:
  5253  001A16  501B               	movf	___fladd@bexp^0,w,c
  5254  001A18  B4D8               	btfsc	status,2,c
  5255  001A1A  EF11  F00D         	goto	u5201
  5256  001A1E  EF13  F00D         	goto	u5200
  5257  001A22                     u5201:
  5258  001A22  EF28  F00D         	goto	l4038
  5259  001A26                     u5200:
  5260  001A26  281B               	incf	___fladd@bexp^0,w,c
  5261  001A28  A4D8               	btfss	status,2,c
  5262  001A2A  EF19  F00D         	goto	u5211
  5263  001A2E  EF1B  F00D         	goto	u5210
  5264  001A32                     u5211:
  5265  001A32  EF23  F00D         	goto	l4034
  5266  001A36                     u5210:
  5267  001A36  0E00               	movlw	0
  5268  001A38  6E0D               	movwf	___fladd@b^0,c
  5269  001A3A  0E00               	movlw	0
  5270  001A3C  6E0E               	movwf	(___fladd@b+1)^0,c
  5271  001A3E  0E00               	movlw	0
  5272  001A40  6E0F               	movwf	(___fladd@b+2)^0,c
  5273  001A42  0E00               	movlw	0
  5274  001A44  6E10               	movwf	(___fladd@b+3)^0,c
  5275  001A46                     l4034:
  5276  001A46  8E0F               	bsf	(___fladd@b+2)^0,7,c
  5277  001A48  0E00               	movlw	0
  5278  001A4A  6E10               	movwf	(___fladd@b+3)^0,c
  5279  001A4C  EF30  F00D         	goto	l4040
  5280  001A50                     l4038:
  5281  001A50  0E00               	movlw	0
  5282  001A52  6E0D               	movwf	___fladd@b^0,c
  5283  001A54  0E00               	movlw	0
  5284  001A56  6E0E               	movwf	(___fladd@b+1)^0,c
  5285  001A58  0E00               	movlw	0
  5286  001A5A  6E0F               	movwf	(___fladd@b+2)^0,c
  5287  001A5C  0E00               	movlw	0
  5288  001A5E  6E10               	movwf	(___fladd@b+3)^0,c
  5289  001A60                     l4040:
  5290  001A60  5014               	movf	(___fladd@a+3)^0,w,c
  5291  001A62  0B80               	andlw	128
  5292  001A64  6E1A               	movwf	___fladd@aexp^0,c
  5293  001A66  5019               	movf	___fladd@signs^0,w,c
  5294  001A68  181A               	xorwf	___fladd@aexp^0,w,c
  5295  001A6A  B4D8               	btfsc	status,2,c
  5296  001A6C  EF3A  F00D         	goto	u5221
  5297  001A70  EF3C  F00D         	goto	u5220
  5298  001A74                     u5221:
  5299  001A74  EF3D  F00D         	goto	l4046
  5300  001A78                     u5220:
  5301  001A78  8C19               	bsf	___fladd@signs^0,6,c
  5302  001A7A                     l4046:
  5303  001A7A  5014               	movf	(___fladd@a+3)^0,w,c
  5304  001A7C  2414               	addwf	(___fladd@a+3)^0,w,c
  5305  001A7E  6E1A               	movwf	___fladd@aexp^0,c
  5306  001A80  AE13               	btfss	(___fladd@a+2)^0,7,c
  5307  001A82  EF45  F00D         	goto	u5231
  5308  001A86  EF47  F00D         	goto	u5230
  5309  001A8A                     u5231:
  5310  001A8A  EF48  F00D         	goto	l4052
  5311  001A8E                     u5230:
  5312  001A8E  801A               	bsf	___fladd@aexp^0,0,c
  5313  001A90                     l4052:
  5314  001A90  501A               	movf	___fladd@aexp^0,w,c
  5315  001A92  B4D8               	btfsc	status,2,c
  5316  001A94  EF4E  F00D         	goto	u5241
  5317  001A98  EF50  F00D         	goto	u5240
  5318  001A9C                     u5241:
  5319  001A9C  EF65  F00D         	goto	l4062
  5320  001AA0                     u5240:
  5321  001AA0  281A               	incf	___fladd@aexp^0,w,c
  5322  001AA2  A4D8               	btfss	status,2,c
  5323  001AA4  EF56  F00D         	goto	u5251
  5324  001AA8  EF58  F00D         	goto	u5250
  5325  001AAC                     u5251:
  5326  001AAC  EF60  F00D         	goto	l4058
  5327  001AB0                     u5250:
  5328  001AB0  0E00               	movlw	0
  5329  001AB2  6E11               	movwf	___fladd@a^0,c
  5330  001AB4  0E00               	movlw	0
  5331  001AB6  6E12               	movwf	(___fladd@a+1)^0,c
  5332  001AB8  0E00               	movlw	0
  5333  001ABA  6E13               	movwf	(___fladd@a+2)^0,c
  5334  001ABC  0E00               	movlw	0
  5335  001ABE  6E14               	movwf	(___fladd@a+3)^0,c
  5336  001AC0                     l4058:
  5337  001AC0  8E13               	bsf	(___fladd@a+2)^0,7,c
  5338  001AC2  0E00               	movlw	0
  5339  001AC4  6E14               	movwf	(___fladd@a+3)^0,c
  5340  001AC6  EF6D  F00D         	goto	l4064
  5341  001ACA                     l4062:
  5342  001ACA  0E00               	movlw	0
  5343  001ACC  6E11               	movwf	___fladd@a^0,c
  5344  001ACE  0E00               	movlw	0
  5345  001AD0  6E12               	movwf	(___fladd@a+1)^0,c
  5346  001AD2  0E00               	movlw	0
  5347  001AD4  6E13               	movwf	(___fladd@a+2)^0,c
  5348  001AD6  0E00               	movlw	0
  5349  001AD8  6E14               	movwf	(___fladd@a+3)^0,c
  5350  001ADA                     l4064:
  5351  001ADA  501B               	movf	___fladd@bexp^0,w,c
  5352  001ADC  5C1A               	subwf	___fladd@aexp^0,w,c
  5353  001ADE  B0D8               	btfsc	status,0,c
  5354  001AE0  EF74  F00D         	goto	u5261
  5355  001AE4  EF76  F00D         	goto	u5260
  5356  001AE8                     u5261:
  5357  001AE8  EF9D  F00D         	goto	l4100
  5358  001AEC                     u5260:
  5359  001AEC  AC19               	btfss	___fladd@signs^0,6,c
  5360  001AEE  EF7B  F00D         	goto	u5271
  5361  001AF2  EF7D  F00D         	goto	u5270
  5362  001AF6                     u5271:
  5363  001AF6  EF7F  F00D         	goto	l4070
  5364  001AFA                     u5270:
  5365  001AFA  0E80               	movlw	128
  5366  001AFC  1A19               	xorwf	___fladd@signs^0,f,c
  5367  001AFE                     l4070:
  5368  001AFE  C01B  F01C         	movff	___fladd@bexp,___fladd@grs
  5369  001B02  C01A  F01B         	movff	___fladd@aexp,___fladd@bexp
  5370  001B06  C01C  F01A         	movff	___fladd@grs,___fladd@aexp
  5371  001B0A  C00D  F01C         	movff	___fladd@b,___fladd@grs
  5372  001B0E  C011  F00D         	movff	___fladd@a,___fladd@b
  5373  001B12  C01C  F011         	movff	___fladd@grs,___fladd@a
  5374  001B16  C00E  F01C         	movff	___fladd@b+1,___fladd@grs
  5375  001B1A  C012  F00E         	movff	___fladd@a+1,___fladd@b+1
  5376  001B1E  C01C  F012         	movff	___fladd@grs,___fladd@a+1
  5377  001B22  C00F  F01C         	movff	___fladd@b+2,___fladd@grs
  5378  001B26  C013  F00F         	movff	___fladd@a+2,___fladd@b+2
  5379  001B2A  C01C  F013         	movff	___fladd@grs,___fladd@a+2
  5380  001B2E  C010  F01C         	movff	___fladd@b+3,___fladd@grs
  5381  001B32  C014  F010         	movff	___fladd@a+3,___fladd@b+3
  5382  001B36  C01C  F014         	movff	___fladd@grs,___fladd@a+3
  5383  001B3A                     l4100:
  5384  001B3A  0E00               	movlw	0
  5385  001B3C  6E1C               	movwf	___fladd@grs^0,c
  5386  001B3E  501B               	movf	___fladd@bexp^0,w,c
  5387  001B40  C01A  F015         	movff	___fladd@aexp,??___fladd
  5388  001B44  6A16               	clrf	(??___fladd+1)^0,c
  5389  001B46  5E15               	subwf	??___fladd^0,f,c
  5390  001B48  0E00               	movlw	0
  5391  001B4A  5A16               	subwfb	(??___fladd+1)^0,f,c
  5392  001B4C  BE16               	btfsc	(??___fladd+1)^0,7,c
  5393  001B4E  EFB2  F00D         	goto	u5281
  5394  001B52  5016               	movf	(??___fladd+1)^0,w,c
  5395  001B54  E109               	bnz	u5280
  5396  001B56  0E1A               	movlw	26
  5397  001B58  5C15               	subwf	??___fladd^0,w,c
  5398  001B5A  A0D8               	btfss	status,0,c
  5399  001B5C  EFB2  F00D         	goto	u5281
  5400  001B60  EFB4  F00D         	goto	u5280
  5401  001B64                     u5281:
  5402  001B64  EFEB  F00D         	goto	l619
  5403  001B68                     u5280:
  5404  001B68  500D               	movf	___fladd@b^0,w,c
  5405  001B6A  100E               	iorwf	(___fladd@b+1)^0,w,c
  5406  001B6C  100F               	iorwf	(___fladd@b+2)^0,w,c
  5407  001B6E  1010               	iorwf	(___fladd@b+3)^0,w,c
  5408  001B70  A4D8               	btfss	status,2,c
  5409  001B72  EFBD  F00D         	goto	u5291
  5410  001B76  EFC0  F00D         	goto	u5290
  5411  001B7A                     u5291:
  5412  001B7A  0E01               	movlw	1
  5413  001B7C  EFC1  F00D         	goto	u5300
  5414  001B80                     u5290:
  5415  001B80  0E00               	movlw	0
  5416  001B82                     u5300:
  5417  001B82  6E1C               	movwf	___fladd@grs^0,c
  5418  001B84  0E00               	movlw	0
  5419  001B86  6E0D               	movwf	___fladd@b^0,c
  5420  001B88  0E00               	movlw	0
  5421  001B8A  6E0E               	movwf	(___fladd@b+1)^0,c
  5422  001B8C  0E00               	movlw	0
  5423  001B8E  6E0F               	movwf	(___fladd@b+2)^0,c
  5424  001B90  0E00               	movlw	0
  5425  001B92  6E10               	movwf	(___fladd@b+3)^0,c
  5426  001B94  C01A  F01B         	movff	___fladd@aexp,___fladd@bexp
  5427  001B98  EFF4  F00D         	goto	l618
  5428  001B9C                     l620:
  5429  001B9C  A01C               	btfss	___fladd@grs^0,0,c
  5430  001B9E  EFD3  F00D         	goto	u5311
  5431  001BA2  EFD5  F00D         	goto	u5310
  5432  001BA6                     u5311:
  5433  001BA6  EFDB  F00D         	goto	l4112
  5434  001BAA                     u5310:
  5435  001BAA  90D8               	bcf	status,0,c
  5436  001BAC  301C               	rrcf	___fladd@grs^0,w,c
  5437  001BAE  0901               	iorlw	1
  5438  001BB0  6E1C               	movwf	___fladd@grs^0,c
  5439  001BB2  EFDD  F00D         	goto	l4114
  5440  001BB6                     l4112:
  5441  001BB6  90D8               	bcf	status,0,c
  5442  001BB8  321C               	rrcf	___fladd@grs^0,f,c
  5443  001BBA                     l4114:
  5444  001BBA  A00D               	btfss	___fladd@b^0,0,c
  5445  001BBC  EFE2  F00D         	goto	u5321
  5446  001BC0  EFE4  F00D         	goto	u5320
  5447  001BC4                     u5321:
  5448  001BC4  EFE5  F00D         	goto	l4118
  5449  001BC8                     u5320:
  5450  001BC8  8E1C               	bsf	___fladd@grs^0,7,c
  5451  001BCA                     l4118:
  5452  001BCA  3410               	rlcf	(___fladd@b+3)^0,w,c
  5453  001BCC  3210               	rrcf	(___fladd@b+3)^0,f,c
  5454  001BCE  320F               	rrcf	(___fladd@b+2)^0,f,c
  5455  001BD0  320E               	rrcf	(___fladd@b+1)^0,f,c
  5456  001BD2  320D               	rrcf	___fladd@b^0,f,c
  5457  001BD4  2A1B               	incf	___fladd@bexp^0,f,c
  5458  001BD6                     l619:
  5459  001BD6  501A               	movf	___fladd@aexp^0,w,c
  5460  001BD8  5C1B               	subwf	___fladd@bexp^0,w,c
  5461  001BDA  A0D8               	btfss	status,0,c
  5462  001BDC  EFF2  F00D         	goto	u5331
  5463  001BE0  EFF4  F00D         	goto	u5330
  5464  001BE4                     u5331:
  5465  001BE4  EFCE  F00D         	goto	l620
  5466  001BE8                     u5330:
  5467  001BE8                     l618:
  5468  001BE8  BC19               	btfsc	___fladd@signs^0,6,c
  5469  001BEA  EFF9  F00D         	goto	u5341
  5470  001BEE  EFFB  F00D         	goto	u5340
  5471  001BF2                     u5341:
  5472  001BF2  EF3B  F00E         	goto	l4146
  5473  001BF6                     u5340:
  5474  001BF6  501B               	movf	___fladd@bexp^0,w,c
  5475  001BF8  A4D8               	btfss	status,2,c
  5476  001BFA  EF01  F00E         	goto	u5351
  5477  001BFE  EF03  F00E         	goto	u5350
  5478  001C02                     u5351:
  5479  001C02  EF0D  F00E         	goto	l4128
  5480  001C06                     u5350:
  5481  001C06  0E00               	movlw	0
  5482  001C08  6E0D               	movwf	?___fladd^0,c
  5483  001C0A  0E00               	movlw	0
  5484  001C0C  6E0E               	movwf	(?___fladd+1)^0,c
  5485  001C0E  0E00               	movlw	0
  5486  001C10  6E0F               	movwf	(?___fladd+2)^0,c
  5487  001C12  0E00               	movlw	0
  5488  001C14  6E10               	movwf	(?___fladd+3)^0,c
  5489  001C16  EF5C  F00F         	goto	l627
  5490  001C1A                     l4128:
  5491  001C1A  5011               	movf	___fladd@a^0,w,c
  5492  001C1C  260D               	addwf	___fladd@b^0,f,c
  5493  001C1E  5012               	movf	(___fladd@a+1)^0,w,c
  5494  001C20  220E               	addwfc	(___fladd@b+1)^0,f,c
  5495  001C22  5013               	movf	(___fladd@a+2)^0,w,c
  5496  001C24  220F               	addwfc	(___fladd@b+2)^0,f,c
  5497  001C26  5014               	movf	(___fladd@a+3)^0,w,c
  5498  001C28  2210               	addwfc	(___fladd@b+3)^0,f,c
  5499  001C2A  A010               	btfss	(___fladd@b+3)^0,0,c
  5500  001C2C  EF1A  F00E         	goto	u5361
  5501  001C30  EF1C  F00E         	goto	u5360
  5502  001C34                     u5361:
  5503  001C34  EFC8  F00E         	goto	l4182
  5504  001C38                     u5360:
  5505  001C38  A01C               	btfss	___fladd@grs^0,0,c
  5506  001C3A  EF21  F00E         	goto	u5371
  5507  001C3E  EF23  F00E         	goto	u5370
  5508  001C42                     u5371:
  5509  001C42  EF29  F00E         	goto	l4136
  5510  001C46                     u5370:
  5511  001C46  90D8               	bcf	status,0,c
  5512  001C48  301C               	rrcf	___fladd@grs^0,w,c
  5513  001C4A  0901               	iorlw	1
  5514  001C4C  6E1C               	movwf	___fladd@grs^0,c
  5515  001C4E  EF2B  F00E         	goto	l4138
  5516  001C52                     l4136:
  5517  001C52  90D8               	bcf	status,0,c
  5518  001C54  321C               	rrcf	___fladd@grs^0,f,c
  5519  001C56                     l4138:
  5520  001C56  A00D               	btfss	___fladd@b^0,0,c
  5521  001C58  EF30  F00E         	goto	u5381
  5522  001C5C  EF32  F00E         	goto	u5380
  5523  001C60                     u5381:
  5524  001C60  EF33  F00E         	goto	l4142
  5525  001C64                     u5380:
  5526  001C64  8E1C               	bsf	___fladd@grs^0,7,c
  5527  001C66                     l4142:
  5528  001C66  3410               	rlcf	(___fladd@b+3)^0,w,c
  5529  001C68  3210               	rrcf	(___fladd@b+3)^0,f,c
  5530  001C6A  320F               	rrcf	(___fladd@b+2)^0,f,c
  5531  001C6C  320E               	rrcf	(___fladd@b+1)^0,f,c
  5532  001C6E  320D               	rrcf	___fladd@b^0,f,c
  5533  001C70  2A1B               	incf	___fladd@bexp^0,f,c
  5534  001C72  EFC8  F00E         	goto	l4182
  5535  001C76                     l4146:
  5536  001C76  5011               	movf	___fladd@a^0,w,c
  5537  001C78  5C0D               	subwf	___fladd@b^0,w,c
  5538  001C7A  5012               	movf	(___fladd@a+1)^0,w,c
  5539  001C7C  580E               	subwfb	(___fladd@b+1)^0,w,c
  5540  001C7E  5013               	movf	(___fladd@a+2)^0,w,c
  5541  001C80  580F               	subwfb	(___fladd@b+2)^0,w,c
  5542  001C82  5010               	movf	(___fladd@b+3)^0,w,c
  5543  001C84  0A80               	xorlw	128
  5544  001C86  6E15               	movwf	??___fladd^0,c
  5545  001C88  5014               	movf	(___fladd@a+3)^0,w,c
  5546  001C8A  0A80               	xorlw	128
  5547  001C8C  5815               	subwfb	??___fladd^0,w,c
  5548  001C8E  B0D8               	btfsc	status,0,c
  5549  001C90  EF4C  F00E         	goto	u5391
  5550  001C94  EF4E  F00E         	goto	u5390
  5551  001C98                     u5391:
  5552  001C98  EF79  F00E         	goto	l4156
  5553  001C9C                     u5390:
  5554  001C9C  500D               	movf	___fladd@b^0,w,c
  5555  001C9E  5C11               	subwf	___fladd@a^0,w,c
  5556  001CA0  6E15               	movwf	??___fladd^0,c
  5557  001CA2  500E               	movf	(___fladd@b+1)^0,w,c
  5558  001CA4  5812               	subwfb	(___fladd@a+1)^0,w,c
  5559  001CA6  6E16               	movwf	(??___fladd+1)^0,c
  5560  001CA8  500F               	movf	(___fladd@b+2)^0,w,c
  5561  001CAA  5813               	subwfb	(___fladd@a+2)^0,w,c
  5562  001CAC  6E17               	movwf	(??___fladd+2)^0,c
  5563  001CAE  5010               	movf	(___fladd@b+3)^0,w,c
  5564  001CB0  5814               	subwfb	(___fladd@a+3)^0,w,c
  5565  001CB2  6E18               	movwf	(??___fladd+3)^0,c
  5566  001CB4  0EFF               	movlw	255
  5567  001CB6  2415               	addwf	??___fladd^0,w,c
  5568  001CB8  6E0D               	movwf	___fladd@b^0,c
  5569  001CBA  0EFF               	movlw	255
  5570  001CBC  2016               	addwfc	(??___fladd+1)^0,w,c
  5571  001CBE  6E0E               	movwf	(___fladd@b+1)^0,c
  5572  001CC0  0EFF               	movlw	255
  5573  001CC2  2017               	addwfc	(??___fladd+2)^0,w,c
  5574  001CC4  6E0F               	movwf	(___fladd@b+2)^0,c
  5575  001CC6  0EFF               	movlw	255
  5576  001CC8  2018               	addwfc	(??___fladd+3)^0,w,c
  5577  001CCA  6E10               	movwf	(___fladd@b+3)^0,c
  5578  001CCC  0E80               	movlw	128
  5579  001CCE  1A19               	xorwf	___fladd@signs^0,f,c
  5580  001CD0  6C1C               	negf	___fladd@grs^0,c
  5581  001CD2  501C               	movf	___fladd@grs^0,w,c
  5582  001CD4  A4D8               	btfss	status,2,c
  5583  001CD6  EF6F  F00E         	goto	u5401
  5584  001CDA  EF71  F00E         	goto	u5400
  5585  001CDE                     u5401:
  5586  001CDE  EF81  F00E         	goto	l635
  5587  001CE2                     u5400:
  5588  001CE2  0E01               	movlw	1
  5589  001CE4  260D               	addwf	___fladd@b^0,f,c
  5590  001CE6  0E00               	movlw	0
  5591  001CE8  220E               	addwfc	(___fladd@b+1)^0,f,c
  5592  001CEA  220F               	addwfc	(___fladd@b+2)^0,f,c
  5593  001CEC  2210               	addwfc	(___fladd@b+3)^0,f,c
  5594  001CEE  EF81  F00E         	goto	l635
  5595  001CF2                     l4156:
  5596  001CF2  5011               	movf	___fladd@a^0,w,c
  5597  001CF4  5E0D               	subwf	___fladd@b^0,f,c
  5598  001CF6  5012               	movf	(___fladd@a+1)^0,w,c
  5599  001CF8  5A0E               	subwfb	(___fladd@b+1)^0,f,c
  5600  001CFA  5013               	movf	(___fladd@a+2)^0,w,c
  5601  001CFC  5A0F               	subwfb	(___fladd@b+2)^0,f,c
  5602  001CFE  5014               	movf	(___fladd@a+3)^0,w,c
  5603  001D00  5A10               	subwfb	(___fladd@b+3)^0,f,c
  5604  001D02                     l635:
  5605  001D02  500D               	movf	___fladd@b^0,w,c
  5606  001D04  100E               	iorwf	(___fladd@b+1)^0,w,c
  5607  001D06  100F               	iorwf	(___fladd@b+2)^0,w,c
  5608  001D08  1010               	iorwf	(___fladd@b+3)^0,w,c
  5609  001D0A  A4D8               	btfss	status,2,c
  5610  001D0C  EF8A  F00E         	goto	u5411
  5611  001D10  EF8C  F00E         	goto	u5410
  5612  001D14                     u5411:
  5613  001D14  EFC1  F00E         	goto	l4180
  5614  001D18                     u5410:
  5615  001D18  501C               	movf	___fladd@grs^0,w,c
  5616  001D1A  A4D8               	btfss	status,2,c
  5617  001D1C  EF92  F00E         	goto	u5421
  5618  001D20  EF94  F00E         	goto	u5420
  5619  001D24                     u5421:
  5620  001D24  EFC1  F00E         	goto	l4180
  5621  001D28                     u5420:
  5622  001D28  0E00               	movlw	0
  5623  001D2A  6E0D               	movwf	?___fladd^0,c
  5624  001D2C  0E00               	movlw	0
  5625  001D2E  6E0E               	movwf	(?___fladd+1)^0,c
  5626  001D30  0E00               	movlw	0
  5627  001D32  6E0F               	movwf	(?___fladd+2)^0,c
  5628  001D34  0E00               	movlw	0
  5629  001D36  6E10               	movwf	(?___fladd+3)^0,c
  5630  001D38  EF5C  F00F         	goto	l627
  5631  001D3C                     l4164:
  5632  001D3C  90D8               	bcf	status,0,c
  5633  001D3E  360D               	rlcf	___fladd@b^0,f,c
  5634  001D40  360E               	rlcf	(___fladd@b+1)^0,f,c
  5635  001D42  360F               	rlcf	(___fladd@b+2)^0,f,c
  5636  001D44  3610               	rlcf	(___fladd@b+3)^0,f,c
  5637  001D46  AE1C               	btfss	___fladd@grs^0,7,c
  5638  001D48  EFA8  F00E         	goto	u5431
  5639  001D4C  EFAA  F00E         	goto	u5430
  5640  001D50                     u5431:
  5641  001D50  EFAB  F00E         	goto	l4170
  5642  001D54                     u5430:
  5643  001D54  800D               	bsf	___fladd@b^0,0,c
  5644  001D56                     l4170:
  5645  001D56  A01C               	btfss	___fladd@grs^0,0,c
  5646  001D58  EFB0  F00E         	goto	u5441
  5647  001D5C  EFB2  F00E         	goto	u5440
  5648  001D60                     u5441:
  5649  001D60  EFB6  F00E         	goto	l4174
  5650  001D64                     u5440:
  5651  001D64  80D8               	bsf	status,0,c
  5652  001D66  361C               	rlcf	___fladd@grs^0,f,c
  5653  001D68  EFB8  F00E         	goto	l4176
  5654  001D6C                     l4174:
  5655  001D6C  90D8               	bcf	status,0,c
  5656  001D6E  361C               	rlcf	___fladd@grs^0,f,c
  5657  001D70                     l4176:
  5658  001D70  501B               	movf	___fladd@bexp^0,w,c
  5659  001D72  B4D8               	btfsc	status,2,c
  5660  001D74  EFBE  F00E         	goto	u5451
  5661  001D78  EFC0  F00E         	goto	u5450
  5662  001D7C                     u5451:
  5663  001D7C  EFC1  F00E         	goto	l4180
  5664  001D80                     u5450:
  5665  001D80  061B               	decf	___fladd@bexp^0,f,c
  5666  001D82                     l4180:
  5667  001D82  AE0F               	btfss	(___fladd@b+2)^0,7,c
  5668  001D84  EFC6  F00E         	goto	u5461
  5669  001D88  EFC8  F00E         	goto	u5460
  5670  001D8C                     u5461:
  5671  001D8C  EF9E  F00E         	goto	l4164
  5672  001D90                     u5460:
  5673  001D90                     l4182:
  5674  001D90  0E00               	movlw	0
  5675  001D92  6E1A               	movwf	___fladd@aexp^0,c
  5676  001D94  AE1C               	btfss	___fladd@grs^0,7,c
  5677  001D96  EFCF  F00E         	goto	u5471
  5678  001D9A  EFD1  F00E         	goto	u5470
  5679  001D9E                     u5471:
  5680  001D9E  EFE9  F00E         	goto	l644
  5681  001DA2                     u5470:
  5682  001DA2  C01C  F015         	movff	___fladd@grs,??___fladd
  5683  001DA6  0E7F               	movlw	127
  5684  001DA8  1615               	andwf	??___fladd^0,f,c
  5685  001DAA  B4D8               	btfsc	status,2,c
  5686  001DAC  EFDA  F00E         	goto	u5481
  5687  001DB0  EFDC  F00E         	goto	u5480
  5688  001DB4                     u5481:
  5689  001DB4  EFE0  F00E         	goto	l645
  5690  001DB8                     u5480:
  5691  001DB8                     l4188:
  5692  001DB8  0E01               	movlw	1
  5693  001DBA  6E1A               	movwf	___fladd@aexp^0,c
  5694  001DBC  EFE9  F00E         	goto	l644
  5695  001DC0                     l645:
  5696  001DC0  A00D               	btfss	___fladd@b^0,0,c
  5697  001DC2  EFE5  F00E         	goto	u5491
  5698  001DC6  EFE7  F00E         	goto	u5490
  5699  001DCA                     u5491:
  5700  001DCA  EFE9  F00E         	goto	l644
  5701  001DCE                     u5490:
  5702  001DCE  EFDC  F00E         	goto	l4188
  5703  001DD2                     l644:
  5704  001DD2  501A               	movf	___fladd@aexp^0,w,c
  5705  001DD4  B4D8               	btfsc	status,2,c
  5706  001DD6  EFEF  F00E         	goto	u5501
  5707  001DDA  EFF1  F00E         	goto	u5500
  5708  001DDE                     u5501:
  5709  001DDE  EF1C  F00F         	goto	l4200
  5710  001DE2                     u5500:
  5711  001DE2  0E01               	movlw	1
  5712  001DE4  260D               	addwf	___fladd@b^0,f,c
  5713  001DE6  0E00               	movlw	0
  5714  001DE8  220E               	addwfc	(___fladd@b+1)^0,f,c
  5715  001DEA  220F               	addwfc	(___fladd@b+2)^0,f,c
  5716  001DEC  2210               	addwfc	(___fladd@b+3)^0,f,c
  5717  001DEE  A010               	btfss	(___fladd@b+3)^0,0,c
  5718  001DF0  EFFC  F00E         	goto	u5511
  5719  001DF4  EFFE  F00E         	goto	u5510
  5720  001DF8                     u5511:
  5721  001DF8  EF1C  F00F         	goto	l4200
  5722  001DFC                     u5510:
  5723  001DFC  C00D  F015         	movff	___fladd@b,??___fladd
  5724  001E00  C00E  F016         	movff	___fladd@b+1,??___fladd+1
  5725  001E04  C00F  F017         	movff	___fladd@b+2,??___fladd+2
  5726  001E08  C010  F018         	movff	___fladd@b+3,??___fladd+3
  5727  001E0C  3418               	rlcf	(??___fladd+3)^0,w,c
  5728  001E0E  3218               	rrcf	(??___fladd+3)^0,f,c
  5729  001E10  3217               	rrcf	(??___fladd+2)^0,f,c
  5730  001E12  3216               	rrcf	(??___fladd+1)^0,f,c
  5731  001E14  3215               	rrcf	??___fladd^0,f,c
  5732  001E16  C015  F00D         	movff	??___fladd,___fladd@b
  5733  001E1A  C016  F00E         	movff	??___fladd+1,___fladd@b+1
  5734  001E1E  C017  F00F         	movff	??___fladd+2,___fladd@b+2
  5735  001E22  C018  F010         	movff	??___fladd+3,___fladd@b+3
  5736  001E26  281B               	incf	___fladd@bexp^0,w,c
  5737  001E28  B4D8               	btfsc	status,2,c
  5738  001E2A  EF19  F00F         	goto	u5521
  5739  001E2E  EF1B  F00F         	goto	u5520
  5740  001E32                     u5521:
  5741  001E32  EF1C  F00F         	goto	l4200
  5742  001E36                     u5520:
  5743  001E36  2A1B               	incf	___fladd@bexp^0,f,c
  5744  001E38                     l4200:
  5745  001E38  281B               	incf	___fladd@bexp^0,w,c
  5746  001E3A  B4D8               	btfsc	status,2,c
  5747  001E3C  EF22  F00F         	goto	u5531
  5748  001E40  EF24  F00F         	goto	u5530
  5749  001E44                     u5531:
  5750  001E44  EF2C  F00F         	goto	l4204
  5751  001E48                     u5530:
  5752  001E48  501B               	movf	___fladd@bexp^0,w,c
  5753  001E4A  A4D8               	btfss	status,2,c
  5754  001E4C  EF2A  F00F         	goto	u5541
  5755  001E50  EF2C  F00F         	goto	u5540
  5756  001E54                     u5541:
  5757  001E54  EF3E  F00F         	goto	l4208
  5758  001E58                     u5540:
  5759  001E58                     l4204:
  5760  001E58  0E00               	movlw	0
  5761  001E5A  6E0D               	movwf	___fladd@b^0,c
  5762  001E5C  0E00               	movlw	0
  5763  001E5E  6E0E               	movwf	(___fladd@b+1)^0,c
  5764  001E60  0E00               	movlw	0
  5765  001E62  6E0F               	movwf	(___fladd@b+2)^0,c
  5766  001E64  0E00               	movlw	0
  5767  001E66  6E10               	movwf	(___fladd@b+3)^0,c
  5768  001E68  501B               	movf	___fladd@bexp^0,w,c
  5769  001E6A  A4D8               	btfss	status,2,c
  5770  001E6C  EF3A  F00F         	goto	u5551
  5771  001E70  EF3C  F00F         	goto	u5550
  5772  001E74                     u5551:
  5773  001E74  EF3E  F00F         	goto	l4208
  5774  001E78                     u5550:
  5775  001E78  0E00               	movlw	0
  5776  001E7A  6E19               	movwf	___fladd@signs^0,c
  5777  001E7C                     l4208:
  5778  001E7C  A01B               	btfss	___fladd@bexp^0,0,c
  5779  001E7E  EF43  F00F         	goto	u5561
  5780  001E82  EF45  F00F         	goto	u5560
  5781  001E86                     u5561:
  5782  001E86  EF48  F00F         	goto	l4212
  5783  001E8A                     u5560:
  5784  001E8A  8E0F               	bsf	(___fladd@b+2)^0,7,c
  5785  001E8C  EF49  F00F         	goto	l4214
  5786  001E90                     l4212:
  5787  001E90  9E0F               	bcf	(___fladd@b+2)^0,7,c
  5788  001E92                     l4214:
  5789  001E92  90D8               	bcf	status,0,c
  5790  001E94  301B               	rrcf	___fladd@bexp^0,w,c
  5791  001E96  6E10               	movwf	(___fladd@b+3)^0,c
  5792  001E98  AE19               	btfss	___fladd@signs^0,7,c
  5793  001E9A  EF51  F00F         	goto	u5571
  5794  001E9E  EF53  F00F         	goto	u5570
  5795  001EA2                     u5571:
  5796  001EA2  EF54  F00F         	goto	l4220
  5797  001EA6                     u5570:
  5798  001EA6  8E10               	bsf	(___fladd@b+3)^0,7,c
  5799  001EA8                     l4220:
  5800  001EA8  C00D  F00D         	movff	___fladd@b,?___fladd
  5801  001EAC  C00E  F00E         	movff	___fladd@b+1,?___fladd+1
  5802  001EB0  C00F  F00F         	movff	___fladd@b+2,?___fladd+2
  5803  001EB4  C010  F010         	movff	___fladd@b+3,?___fladd+3
  5804  001EB8                     l627:
  5805  001EB8  0012               	return		;funcret
  5806  001EBA                     __end_of___fladd:
  5807                           	callstack 0
  5808                           
  5809 ;; *************** function ___flneg *****************
  5810 ;; Defined at:
  5811 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  f1              4   12[COMRAM] unsigned char 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  4   12[COMRAM] unsigned char 
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5825 ;;      Params:         4       0       0       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5828 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5829 ;;Total ram usage:        4 bytes
  5830 ;; Hardware stack levels used: 1
  5831 ;; Hardware stack levels required when called: 2
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_efgtoa
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text18
  5840  0039E2                     __ptext18:
  5841                           	callstack 0
  5842  0039E2                     ___flneg:
  5843                           	callstack 24
  5844  0039E2  500D               	movf	___flneg@f1^0,w,c
  5845  0039E4  100E               	iorwf	(___flneg@f1+1)^0,w,c
  5846  0039E6  100F               	iorwf	(___flneg@f1+2)^0,w,c
  5847  0039E8  1010               	iorwf	(___flneg@f1+3)^0,w,c
  5848  0039EA  B4D8               	btfsc	status,2,c
  5849  0039EC  EFFA  F01C         	goto	u6231
  5850  0039F0  EFFC  F01C         	goto	u6230
  5851  0039F4                     u6231:
  5852  0039F4  EF04  F01D         	goto	l4638
  5853  0039F8                     u6230:
  5854  0039F8  0E00               	movlw	0
  5855  0039FA  1A0D               	xorwf	___flneg@f1^0,f,c
  5856  0039FC  0E00               	movlw	0
  5857  0039FE  1A0E               	xorwf	(___flneg@f1+1)^0,f,c
  5858  003A00  0E00               	movlw	0
  5859  003A02  1A0F               	xorwf	(___flneg@f1+2)^0,f,c
  5860  003A04  0E80               	movlw	128
  5861  003A06  1A10               	xorwf	(___flneg@f1+3)^0,f,c
  5862  003A08                     l4638:
  5863  003A08  C00D  F00D         	movff	___flneg@f1,?___flneg
  5864  003A0C  C00E  F00E         	movff	___flneg@f1+1,?___flneg+1
  5865  003A10  C00F  F00F         	movff	___flneg@f1+2,?___flneg+2
  5866  003A14  C010  F010         	movff	___flneg@f1+3,?___flneg+3
  5867  003A18  0012               	return		;funcret
  5868  003A1A                     __end_of___flneg:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function ___flmul *****************
  5872 ;; Defined at:
  5873 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  b               4   32[COMRAM] unsigned char 
  5876 ;;  a               4   36[COMRAM] unsigned char 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  prod            4   51[COMRAM] struct .
  5879 ;;  grs             4   46[COMRAM] unsigned long 
  5880 ;;  temp            2   55[COMRAM] struct .
  5881 ;;  bexp            1   50[COMRAM] unsigned char 
  5882 ;;  aexp            1   45[COMRAM] unsigned char 
  5883 ;;  sign            1   44[COMRAM] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  4   32[COMRAM] unsigned char 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, prodl, prodh
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5893 ;;      Params:         8       0       0       0       0       0       0       0       0
  5894 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5895 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5896 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5897 ;;Total ram usage:       25 bytes
  5898 ;; Hardware stack levels used: 1
  5899 ;; Hardware stack levels required when called: 2
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_main
  5904 ;;		_efgtoa
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text19
  5909  001EBA                     __ptext19:
  5910                           	callstack 0
  5911  001EBA                     ___flmul:
  5912                           	callstack 24
  5913  001EBA  5024               	movf	(___flmul@b+3)^0,w,c
  5914  001EBC  0B80               	andlw	128
  5915  001EBE  6E2D               	movwf	___flmul@sign^0,c
  5916  001EC0  5024               	movf	(___flmul@b+3)^0,w,c
  5917  001EC2  2424               	addwf	(___flmul@b+3)^0,w,c
  5918  001EC4  6E33               	movwf	___flmul@bexp^0,c
  5919  001EC6  AE23               	btfss	(___flmul@b+2)^0,7,c
  5920  001EC8  EF68  F00F         	goto	u5841
  5921  001ECC  EF6A  F00F         	goto	u5840
  5922  001ED0                     u5841:
  5923  001ED0  EF6B  F00F         	goto	l4386
  5924  001ED4                     u5840:
  5925  001ED4  8033               	bsf	___flmul@bexp^0,0,c
  5926  001ED6                     l4386:
  5927  001ED6  5033               	movf	___flmul@bexp^0,w,c
  5928  001ED8  B4D8               	btfsc	status,2,c
  5929  001EDA  EF71  F00F         	goto	u5851
  5930  001EDE  EF73  F00F         	goto	u5850
  5931  001EE2                     u5851:
  5932  001EE2  EF86  F00F         	goto	l4394
  5933  001EE6                     u5850:
  5934  001EE6  2833               	incf	___flmul@bexp^0,w,c
  5935  001EE8  A4D8               	btfss	status,2,c
  5936  001EEA  EF79  F00F         	goto	u5861
  5937  001EEE  EF7B  F00F         	goto	u5860
  5938  001EF2                     u5861:
  5939  001EF2  EF83  F00F         	goto	l4392
  5940  001EF6                     u5860:
  5941  001EF6  0E00               	movlw	0
  5942  001EF8  6E21               	movwf	___flmul@b^0,c
  5943  001EFA  0E00               	movlw	0
  5944  001EFC  6E22               	movwf	(___flmul@b+1)^0,c
  5945  001EFE  0E00               	movlw	0
  5946  001F00  6E23               	movwf	(___flmul@b+2)^0,c
  5947  001F02  0E00               	movlw	0
  5948  001F04  6E24               	movwf	(___flmul@b+3)^0,c
  5949  001F06                     l4392:
  5950  001F06  8E23               	bsf	(___flmul@b+2)^0,7,c
  5951  001F08  EF8E  F00F         	goto	l4396
  5952  001F0C                     l4394:
  5953  001F0C  0E00               	movlw	0
  5954  001F0E  6E21               	movwf	___flmul@b^0,c
  5955  001F10  0E00               	movlw	0
  5956  001F12  6E22               	movwf	(___flmul@b+1)^0,c
  5957  001F14  0E00               	movlw	0
  5958  001F16  6E23               	movwf	(___flmul@b+2)^0,c
  5959  001F18  0E00               	movlw	0
  5960  001F1A  6E24               	movwf	(___flmul@b+3)^0,c
  5961  001F1C                     l4396:
  5962  001F1C  5028               	movf	(___flmul@a+3)^0,w,c
  5963  001F1E  0B80               	andlw	128
  5964  001F20  1A2D               	xorwf	___flmul@sign^0,f,c
  5965  001F22  5028               	movf	(___flmul@a+3)^0,w,c
  5966  001F24  2428               	addwf	(___flmul@a+3)^0,w,c
  5967  001F26  6E2E               	movwf	___flmul@aexp^0,c
  5968  001F28  AE27               	btfss	(___flmul@a+2)^0,7,c
  5969  001F2A  EF99  F00F         	goto	u5871
  5970  001F2E  EF9B  F00F         	goto	u5870
  5971  001F32                     u5871:
  5972  001F32  EF9C  F00F         	goto	l4404
  5973  001F36                     u5870:
  5974  001F36  802E               	bsf	___flmul@aexp^0,0,c
  5975  001F38                     l4404:
  5976  001F38  502E               	movf	___flmul@aexp^0,w,c
  5977  001F3A  B4D8               	btfsc	status,2,c
  5978  001F3C  EFA2  F00F         	goto	u5881
  5979  001F40  EFA4  F00F         	goto	u5880
  5980  001F44                     u5881:
  5981  001F44  EFB7  F00F         	goto	l4412
  5982  001F48                     u5880:
  5983  001F48  282E               	incf	___flmul@aexp^0,w,c
  5984  001F4A  A4D8               	btfss	status,2,c
  5985  001F4C  EFAA  F00F         	goto	u5891
  5986  001F50  EFAC  F00F         	goto	u5890
  5987  001F54                     u5891:
  5988  001F54  EFB4  F00F         	goto	l4410
  5989  001F58                     u5890:
  5990  001F58  0E00               	movlw	0
  5991  001F5A  6E25               	movwf	___flmul@a^0,c
  5992  001F5C  0E00               	movlw	0
  5993  001F5E  6E26               	movwf	(___flmul@a+1)^0,c
  5994  001F60  0E00               	movlw	0
  5995  001F62  6E27               	movwf	(___flmul@a+2)^0,c
  5996  001F64  0E00               	movlw	0
  5997  001F66  6E28               	movwf	(___flmul@a+3)^0,c
  5998  001F68                     l4410:
  5999  001F68  8E27               	bsf	(___flmul@a+2)^0,7,c
  6000  001F6A  EFBF  F00F         	goto	l704
  6001  001F6E                     l4412:
  6002  001F6E  0E00               	movlw	0
  6003  001F70  6E25               	movwf	___flmul@a^0,c
  6004  001F72  0E00               	movlw	0
  6005  001F74  6E26               	movwf	(___flmul@a+1)^0,c
  6006  001F76  0E00               	movlw	0
  6007  001F78  6E27               	movwf	(___flmul@a+2)^0,c
  6008  001F7A  0E00               	movlw	0
  6009  001F7C  6E28               	movwf	(___flmul@a+3)^0,c
  6010  001F7E                     l704:
  6011  001F7E  502E               	movf	___flmul@aexp^0,w,c
  6012  001F80  B4D8               	btfsc	status,2,c
  6013  001F82  EFC5  F00F         	goto	u5901
  6014  001F86  EFC7  F00F         	goto	u5900
  6015  001F8A                     u5901:
  6016  001F8A  EFCF  F00F         	goto	l4416
  6017  001F8E                     u5900:
  6018  001F8E  5033               	movf	___flmul@bexp^0,w,c
  6019  001F90  A4D8               	btfss	status,2,c
  6020  001F92  EFCD  F00F         	goto	u5911
  6021  001F96  EFCF  F00F         	goto	u5910
  6022  001F9A                     u5911:
  6023  001F9A  EFD9  F00F         	goto	l4420
  6024  001F9E                     u5910:
  6025  001F9E                     l4416:
  6026  001F9E  0E00               	movlw	0
  6027  001FA0  6E21               	movwf	?___flmul^0,c
  6028  001FA2  0E00               	movlw	0
  6029  001FA4  6E22               	movwf	(?___flmul+1)^0,c
  6030  001FA6  0E00               	movlw	0
  6031  001FA8  6E23               	movwf	(?___flmul+2)^0,c
  6032  001FAA  0E00               	movlw	0
  6033  001FAC  6E24               	movwf	(?___flmul+3)^0,c
  6034  001FAE  EF71  F011         	goto	l708
  6035  001FB2                     l4420:
  6036  001FB2  5027               	movf	(___flmul@a+2)^0,w,c
  6037  001FB4  0221               	mulwf	___flmul@b^0,c
  6038  001FB6  CFF3 F038          	movff	prodl,___flmul@temp
  6039  001FBA  CFF4 F039          	movff	prodh,___flmul@temp+1
  6040  001FBE  5038               	movf	___flmul@temp^0,w,c
  6041  001FC0  6E2F               	movwf	___flmul@grs^0,c
  6042  001FC2  6A30               	clrf	(___flmul@grs+1)^0,c
  6043  001FC4  6A31               	clrf	(___flmul@grs+2)^0,c
  6044  001FC6  6A32               	clrf	(___flmul@grs+3)^0,c
  6045  001FC8  5039               	movf	(___flmul@temp+1)^0,w,c
  6046  001FCA  6E34               	movwf	___flmul@prod^0,c
  6047  001FCC  6A35               	clrf	(___flmul@prod+1)^0,c
  6048  001FCE  6A36               	clrf	(___flmul@prod+2)^0,c
  6049  001FD0  6A37               	clrf	(___flmul@prod+3)^0,c
  6050  001FD2  5026               	movf	(___flmul@a+1)^0,w,c
  6051  001FD4  0222               	mulwf	(___flmul@b+1)^0,c
  6052  001FD6  CFF3 F038          	movff	prodl,___flmul@temp
  6053  001FDA  CFF4 F039          	movff	prodh,___flmul@temp+1
  6054  001FDE  5038               	movf	___flmul@temp^0,w,c
  6055  001FE0  262F               	addwf	___flmul@grs^0,f,c
  6056  001FE2  0E00               	movlw	0
  6057  001FE4  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6058  001FE6  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6059  001FE8  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6060  001FEA  5039               	movf	(___flmul@temp+1)^0,w,c
  6061  001FEC  2634               	addwf	___flmul@prod^0,f,c
  6062  001FEE  0E00               	movlw	0
  6063  001FF0  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6064  001FF2  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6065  001FF4  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6066  001FF6  5025               	movf	___flmul@a^0,w,c
  6067  001FF8  0223               	mulwf	(___flmul@b+2)^0,c
  6068  001FFA  CFF3 F038          	movff	prodl,___flmul@temp
  6069  001FFE  CFF4 F039          	movff	prodh,___flmul@temp+1
  6070  002002  5038               	movf	___flmul@temp^0,w,c
  6071  002004  262F               	addwf	___flmul@grs^0,f,c
  6072  002006  0E00               	movlw	0
  6073  002008  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6074  00200A  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6075  00200C  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6076  00200E  5039               	movf	(___flmul@temp+1)^0,w,c
  6077  002010  2634               	addwf	___flmul@prod^0,f,c
  6078  002012  0E00               	movlw	0
  6079  002014  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6080  002016  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6081  002018  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6082  00201A  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6083  00201E  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6084  002022  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6085  002026  6A2F               	clrf	___flmul@grs^0,c
  6086  002028  5025               	movf	___flmul@a^0,w,c
  6087  00202A  0222               	mulwf	(___flmul@b+1)^0,c
  6088  00202C  CFF3 F038          	movff	prodl,___flmul@temp
  6089  002030  CFF4 F039          	movff	prodh,___flmul@temp+1
  6090  002034  5038               	movf	___flmul@temp^0,w,c
  6091  002036  262F               	addwf	___flmul@grs^0,f,c
  6092  002038  5039               	movf	(___flmul@temp+1)^0,w,c
  6093  00203A  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6094  00203C  0E00               	movlw	0
  6095  00203E  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6096  002040  0E00               	movlw	0
  6097  002042  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6098  002044  5026               	movf	(___flmul@a+1)^0,w,c
  6099  002046  0221               	mulwf	___flmul@b^0,c
  6100  002048  CFF3 F038          	movff	prodl,___flmul@temp
  6101  00204C  CFF4 F039          	movff	prodh,___flmul@temp+1
  6102  002050  5038               	movf	___flmul@temp^0,w,c
  6103  002052  262F               	addwf	___flmul@grs^0,f,c
  6104  002054  5039               	movf	(___flmul@temp+1)^0,w,c
  6105  002056  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6106  002058  0E00               	movlw	0
  6107  00205A  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6108  00205C  0E00               	movlw	0
  6109  00205E  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6110  002060  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6111  002064  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6112  002068  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6113  00206C  6A2F               	clrf	___flmul@grs^0,c
  6114  00206E  5025               	movf	___flmul@a^0,w,c
  6115  002070  0221               	mulwf	___flmul@b^0,c
  6116  002072  CFF3 F038          	movff	prodl,___flmul@temp
  6117  002076  CFF4 F039          	movff	prodh,___flmul@temp+1
  6118  00207A  5038               	movf	___flmul@temp^0,w,c
  6119  00207C  262F               	addwf	___flmul@grs^0,f,c
  6120  00207E  5039               	movf	(___flmul@temp+1)^0,w,c
  6121  002080  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6122  002082  0E00               	movlw	0
  6123  002084  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6124  002086  0E00               	movlw	0
  6125  002088  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6126  00208A  5027               	movf	(___flmul@a+2)^0,w,c
  6127  00208C  0222               	mulwf	(___flmul@b+1)^0,c
  6128  00208E  CFF3 F038          	movff	prodl,___flmul@temp
  6129  002092  CFF4 F039          	movff	prodh,___flmul@temp+1
  6130  002096  5038               	movf	___flmul@temp^0,w,c
  6131  002098  2634               	addwf	___flmul@prod^0,f,c
  6132  00209A  5039               	movf	(___flmul@temp+1)^0,w,c
  6133  00209C  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6134  00209E  0E00               	movlw	0
  6135  0020A0  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6136  0020A2  0E00               	movlw	0
  6137  0020A4  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6138  0020A6  5026               	movf	(___flmul@a+1)^0,w,c
  6139  0020A8  0223               	mulwf	(___flmul@b+2)^0,c
  6140  0020AA  CFF3 F038          	movff	prodl,___flmul@temp
  6141  0020AE  CFF4 F039          	movff	prodh,___flmul@temp+1
  6142  0020B2  5038               	movf	___flmul@temp^0,w,c
  6143  0020B4  2634               	addwf	___flmul@prod^0,f,c
  6144  0020B6  5039               	movf	(___flmul@temp+1)^0,w,c
  6145  0020B8  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6146  0020BA  0E00               	movlw	0
  6147  0020BC  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6148  0020BE  0E00               	movlw	0
  6149  0020C0  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6150  0020C2  5027               	movf	(___flmul@a+2)^0,w,c
  6151  0020C4  0223               	mulwf	(___flmul@b+2)^0,c
  6152  0020C6  CFF3 F038          	movff	prodl,___flmul@temp
  6153  0020CA  CFF4 F039          	movff	prodh,___flmul@temp+1
  6154  0020CE  5038               	movf	___flmul@temp^0,w,c
  6155  0020D0  6E29               	movwf	??___flmul^0,c
  6156  0020D2  5039               	movf	(___flmul@temp+1)^0,w,c
  6157  0020D4  6E2A               	movwf	(??___flmul+1)^0,c
  6158  0020D6  6A2B               	clrf	(??___flmul+2)^0,c
  6159  0020D8  6A2C               	clrf	(??___flmul+3)^0,c
  6160  0020DA  C02B  F02C         	movff	??___flmul+2,??___flmul+3
  6161  0020DE  C02A  F02B         	movff	??___flmul+1,??___flmul+2
  6162  0020E2  C029  F02A         	movff	??___flmul,??___flmul+1
  6163  0020E6  6A29               	clrf	??___flmul^0,c
  6164  0020E8  5029               	movf	??___flmul^0,w,c
  6165  0020EA  2634               	addwf	___flmul@prod^0,f,c
  6166  0020EC  502A               	movf	(??___flmul+1)^0,w,c
  6167  0020EE  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6168  0020F0  502B               	movf	(??___flmul+2)^0,w,c
  6169  0020F2  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6170  0020F4  502C               	movf	(??___flmul+3)^0,w,c
  6171  0020F6  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6172  0020F8  C02F  F029         	movff	___flmul@grs,??___flmul
  6173  0020FC  C030  F02A         	movff	___flmul@grs+1,??___flmul+1
  6174  002100  C031  F02B         	movff	___flmul@grs+2,??___flmul+2
  6175  002104  C032  F02C         	movff	___flmul@grs+3,??___flmul+3
  6176  002108  0E19               	movlw	25
  6177  00210A  EF8C  F010         	goto	u5920
  6178  00210E                     u5925:
  6179  00210E  90D8               	bcf	status,0,c
  6180  002110  322C               	rrcf	(??___flmul+3)^0,f,c
  6181  002112  322B               	rrcf	(??___flmul+2)^0,f,c
  6182  002114  322A               	rrcf	(??___flmul+1)^0,f,c
  6183  002116  3229               	rrcf	??___flmul^0,f,c
  6184  002118                     u5920:
  6185  002118  2EE8               	decfsz	wreg,f,c
  6186  00211A  EF87  F010         	goto	u5925
  6187  00211E  5029               	movf	??___flmul^0,w,c
  6188  002120  2634               	addwf	___flmul@prod^0,f,c
  6189  002122  502A               	movf	(??___flmul+1)^0,w,c
  6190  002124  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6191  002126  502B               	movf	(??___flmul+2)^0,w,c
  6192  002128  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6193  00212A  502C               	movf	(??___flmul+3)^0,w,c
  6194  00212C  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6195  00212E  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6196  002132  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6197  002136  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6198  00213A  6A2F               	clrf	___flmul@grs^0,c
  6199  00213C  502E               	movf	___flmul@aexp^0,w,c
  6200  00213E  C033  F029         	movff	___flmul@bexp,??___flmul
  6201  002142  6A2A               	clrf	(??___flmul+1)^0,c
  6202  002144  2629               	addwf	??___flmul^0,f,c
  6203  002146  0E00               	movlw	0
  6204  002148  222A               	addwfc	(??___flmul+1)^0,f,c
  6205  00214A  0E82               	movlw	130
  6206  00214C  2429               	addwf	??___flmul^0,w,c
  6207  00214E  6E38               	movwf	___flmul@temp^0,c
  6208  002150  0EFF               	movlw	255
  6209  002152  202A               	addwfc	(??___flmul+1)^0,w,c
  6210  002154  6E39               	movwf	(___flmul@temp+1)^0,c
  6211  002156  EFC2  F010         	goto	l4468
  6212  00215A                     l4462:
  6213  00215A  90D8               	bcf	status,0,c
  6214  00215C  3634               	rlcf	___flmul@prod^0,f,c
  6215  00215E  3635               	rlcf	(___flmul@prod+1)^0,f,c
  6216  002160  3636               	rlcf	(___flmul@prod+2)^0,f,c
  6217  002162  3637               	rlcf	(___flmul@prod+3)^0,f,c
  6218  002164  AE32               	btfss	(___flmul@grs+3)^0,7,c
  6219  002166  EFB7  F010         	goto	u5931
  6220  00216A  EFB9  F010         	goto	u5930
  6221  00216E                     u5931:
  6222  00216E  EFBA  F010         	goto	l711
  6223  002172                     u5930:
  6224  002172  8034               	bsf	___flmul@prod^0,0,c
  6225  002174                     l711:
  6226  002174  90D8               	bcf	status,0,c
  6227  002176  362F               	rlcf	___flmul@grs^0,f,c
  6228  002178  3630               	rlcf	(___flmul@grs+1)^0,f,c
  6229  00217A  3631               	rlcf	(___flmul@grs+2)^0,f,c
  6230  00217C  3632               	rlcf	(___flmul@grs+3)^0,f,c
  6231  00217E  0638               	decf	___flmul@temp^0,f,c
  6232  002180  A0D8               	btfss	status,0,c
  6233  002182  0639               	decf	(___flmul@temp+1)^0,f,c
  6234  002184                     l4468:
  6235  002184  AE36               	btfss	(___flmul@prod+2)^0,7,c
  6236  002186  EFC7  F010         	goto	u5941
  6237  00218A  EFC9  F010         	goto	u5940
  6238  00218E                     u5941:
  6239  00218E  EFAD  F010         	goto	l4462
  6240  002192                     u5940:
  6241  002192  0E00               	movlw	0
  6242  002194  6E2E               	movwf	___flmul@aexp^0,c
  6243  002196  AE32               	btfss	(___flmul@grs+3)^0,7,c
  6244  002198  EFD0  F010         	goto	u5951
  6245  00219C  EFD2  F010         	goto	u5950
  6246  0021A0                     u5951:
  6247  0021A0  EFF6  F010         	goto	l713
  6248  0021A4                     u5950:
  6249  0021A4  0EFF               	movlw	255
  6250  0021A6  142F               	andwf	___flmul@grs^0,w,c
  6251  0021A8  6E29               	movwf	??___flmul^0,c
  6252  0021AA  0EFF               	movlw	255
  6253  0021AC  1430               	andwf	(___flmul@grs+1)^0,w,c
  6254  0021AE  6E2A               	movwf	(??___flmul+1)^0,c
  6255  0021B0  0EFF               	movlw	255
  6256  0021B2  1431               	andwf	(___flmul@grs+2)^0,w,c
  6257  0021B4  6E2B               	movwf	(??___flmul+2)^0,c
  6258  0021B6  0E7F               	movlw	127
  6259  0021B8  1432               	andwf	(___flmul@grs+3)^0,w,c
  6260  0021BA  6E2C               	movwf	(??___flmul+3)^0,c
  6261  0021BC  5029               	movf	??___flmul^0,w,c
  6262  0021BE  102A               	iorwf	(??___flmul+1)^0,w,c
  6263  0021C0  102B               	iorwf	(??___flmul+2)^0,w,c
  6264  0021C2  102C               	iorwf	(??___flmul+3)^0,w,c
  6265  0021C4  B4D8               	btfsc	status,2,c
  6266  0021C6  EFE7  F010         	goto	u5961
  6267  0021CA  EFE9  F010         	goto	u5960
  6268  0021CE                     u5961:
  6269  0021CE  EFED  F010         	goto	l714
  6270  0021D2                     u5960:
  6271  0021D2                     l4476:
  6272  0021D2  0E01               	movlw	1
  6273  0021D4  6E2E               	movwf	___flmul@aexp^0,c
  6274  0021D6  EFF6  F010         	goto	l713
  6275  0021DA                     l714:
  6276  0021DA  A034               	btfss	___flmul@prod^0,0,c
  6277  0021DC  EFF2  F010         	goto	u5971
  6278  0021E0  EFF4  F010         	goto	u5970
  6279  0021E4                     u5971:
  6280  0021E4  EFF6  F010         	goto	l713
  6281  0021E8                     u5970:
  6282  0021E8  EFE9  F010         	goto	l4476
  6283  0021EC                     l713:
  6284  0021EC  502E               	movf	___flmul@aexp^0,w,c
  6285  0021EE  B4D8               	btfsc	status,2,c
  6286  0021F0  EFFC  F010         	goto	u5981
  6287  0021F4  EFFE  F010         	goto	u5980
  6288  0021F8                     u5981:
  6289  0021F8  EF22  F011         	goto	l4488
  6290  0021FC                     u5980:
  6291  0021FC  0E01               	movlw	1
  6292  0021FE  2634               	addwf	___flmul@prod^0,f,c
  6293  002200  0E00               	movlw	0
  6294  002202  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6295  002204  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6296  002206  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6297  002208  A037               	btfss	(___flmul@prod+3)^0,0,c
  6298  00220A  EF09  F011         	goto	u5991
  6299  00220E  EF0B  F011         	goto	u5990
  6300  002212                     u5991:
  6301  002212  EF22  F011         	goto	l4488
  6302  002216                     u5990:
  6303  002216  C034  F029         	movff	___flmul@prod,??___flmul
  6304  00221A  C035  F02A         	movff	___flmul@prod+1,??___flmul+1
  6305  00221E  C036  F02B         	movff	___flmul@prod+2,??___flmul+2
  6306  002222  C037  F02C         	movff	___flmul@prod+3,??___flmul+3
  6307  002226  342C               	rlcf	(??___flmul+3)^0,w,c
  6308  002228  322C               	rrcf	(??___flmul+3)^0,f,c
  6309  00222A  322B               	rrcf	(??___flmul+2)^0,f,c
  6310  00222C  322A               	rrcf	(??___flmul+1)^0,f,c
  6311  00222E  3229               	rrcf	??___flmul^0,f,c
  6312  002230  C029  F034         	movff	??___flmul,___flmul@prod
  6313  002234  C02A  F035         	movff	??___flmul+1,___flmul@prod+1
  6314  002238  C02B  F036         	movff	??___flmul+2,___flmul@prod+2
  6315  00223C  C02C  F037         	movff	??___flmul+3,___flmul@prod+3
  6316  002240  4A38               	infsnz	___flmul@temp^0,f,c
  6317  002242  2A39               	incf	(___flmul@temp+1)^0,f,c
  6318  002244                     l4488:
  6319  002244  BE39               	btfsc	(___flmul@temp+1)^0,7,c
  6320  002246  EF2D  F011         	goto	u6001
  6321  00224A  5039               	movf	(___flmul@temp+1)^0,w,c
  6322  00224C  E108               	bnz	u6000
  6323  00224E  2838               	incf	___flmul@temp^0,w,c
  6324  002250  A0D8               	btfss	status,0,c
  6325  002252  EF2D  F011         	goto	u6001
  6326  002256  EF2F  F011         	goto	u6000
  6327  00225A                     u6001:
  6328  00225A  EF39  F011         	goto	l4492
  6329  00225E                     u6000:
  6330  00225E  0E00               	movlw	0
  6331  002260  6E34               	movwf	___flmul@prod^0,c
  6332  002262  0E00               	movlw	0
  6333  002264  6E35               	movwf	(___flmul@prod+1)^0,c
  6334  002266  0E80               	movlw	128
  6335  002268  6E36               	movwf	(___flmul@prod+2)^0,c
  6336  00226A  0E7F               	movlw	127
  6337  00226C  6E37               	movwf	(___flmul@prod+3)^0,c
  6338  00226E  EF67  F011         	goto	l4504
  6339  002272                     l4492:
  6340  002272  BE39               	btfsc	(___flmul@temp+1)^0,7,c
  6341  002274  EF46  F011         	goto	u6010
  6342  002278  5039               	movf	(___flmul@temp+1)^0,w,c
  6343  00227A  E106               	bnz	u6011
  6344  00227C  0438               	decf	___flmul@temp^0,w,c
  6345  00227E  B0D8               	btfsc	status,0,c
  6346  002280  EF44  F011         	goto	u6011
  6347  002284  EF46  F011         	goto	u6010
  6348  002288                     u6011:
  6349  002288  EF52  F011         	goto	l721
  6350  00228C                     u6010:
  6351  00228C  0E00               	movlw	0
  6352  00228E  6E34               	movwf	___flmul@prod^0,c
  6353  002290  0E00               	movlw	0
  6354  002292  6E35               	movwf	(___flmul@prod+1)^0,c
  6355  002294  0E00               	movlw	0
  6356  002296  6E36               	movwf	(___flmul@prod+2)^0,c
  6357  002298  0E00               	movlw	0
  6358  00229A  6E37               	movwf	(___flmul@prod+3)^0,c
  6359  00229C  0E00               	movlw	0
  6360  00229E  6E2D               	movwf	___flmul@sign^0,c
  6361  0022A0  EF67  F011         	goto	l4504
  6362  0022A4                     l721:
  6363  0022A4  C038  F033         	movff	___flmul@temp,___flmul@bexp
  6364  0022A8  0EFF               	movlw	255
  6365  0022AA  1634               	andwf	___flmul@prod^0,f,c
  6366  0022AC  0EFF               	movlw	255
  6367  0022AE  1635               	andwf	(___flmul@prod+1)^0,f,c
  6368  0022B0  0E7F               	movlw	127
  6369  0022B2  1636               	andwf	(___flmul@prod+2)^0,f,c
  6370  0022B4  0E00               	movlw	0
  6371  0022B6  1637               	andwf	(___flmul@prod+3)^0,f,c
  6372  0022B8  A033               	btfss	___flmul@bexp^0,0,c
  6373  0022BA  EF61  F011         	goto	u6021
  6374  0022BE  EF63  F011         	goto	u6020
  6375  0022C2                     u6021:
  6376  0022C2  EF64  F011         	goto	l4502
  6377  0022C6                     u6020:
  6378  0022C6  8E36               	bsf	(___flmul@prod+2)^0,7,c
  6379  0022C8                     l4502:
  6380  0022C8  90D8               	bcf	status,0,c
  6381  0022CA  3033               	rrcf	___flmul@bexp^0,w,c
  6382  0022CC  6E37               	movwf	(___flmul@prod+3)^0,c
  6383  0022CE                     l4504:
  6384  0022CE  502D               	movf	___flmul@sign^0,w,c
  6385  0022D0  1237               	iorwf	(___flmul@prod+3)^0,f,c
  6386  0022D2  C034  F021         	movff	___flmul@prod,?___flmul
  6387  0022D6  C035  F022         	movff	___flmul@prod+1,?___flmul+1
  6388  0022DA  C036  F023         	movff	___flmul@prod+2,?___flmul+2
  6389  0022DE  C037  F024         	movff	___flmul@prod+3,?___flmul+3
  6390  0022E2                     l708:
  6391  0022E2  0012               	return		;funcret
  6392  0022E4                     __end_of___flmul:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function ___flge *****************
  6396 ;; Defined at:
  6397 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  ff1             4   57[COMRAM] unsigned char 
  6400 ;;  ff2             4   61[COMRAM] unsigned char 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;		None               void
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6412 ;;      Params:         8       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6415 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:       12 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 2
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_efgtoa
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text20
  6427  002E6E                     __ptext20:
  6428                           	callstack 0
  6429  002E6E                     ___flge:
  6430                           	callstack 24
  6431  002E6E  0E00               	movlw	0
  6432  002E70  143A               	andwf	___flge@ff1^0,w,c
  6433  002E72  6E42               	movwf	??___flge^0,c
  6434  002E74  0E00               	movlw	0
  6435  002E76  143B               	andwf	(___flge@ff1+1)^0,w,c
  6436  002E78  6E43               	movwf	(??___flge+1)^0,c
  6437  002E7A  0E80               	movlw	128
  6438  002E7C  143C               	andwf	(___flge@ff1+2)^0,w,c
  6439  002E7E  6E44               	movwf	(??___flge+2)^0,c
  6440  002E80  0E7F               	movlw	127
  6441  002E82  143D               	andwf	(___flge@ff1+3)^0,w,c
  6442  002E84  6E45               	movwf	(??___flge+3)^0,c
  6443  002E86  5042               	movf	??___flge^0,w,c
  6444  002E88  1043               	iorwf	(??___flge+1)^0,w,c
  6445  002E8A  1044               	iorwf	(??___flge+2)^0,w,c
  6446  002E8C  1045               	iorwf	(??___flge+3)^0,w,c
  6447  002E8E  A4D8               	btfss	status,2,c
  6448  002E90  EF4C  F017         	goto	u6181
  6449  002E94  EF4E  F017         	goto	u6180
  6450  002E98                     u6181:
  6451  002E98  EF56  F017         	goto	l4616
  6452  002E9C                     u6180:
  6453  002E9C  0E00               	movlw	0
  6454  002E9E  6E3A               	movwf	___flge@ff1^0,c
  6455  002EA0  0E00               	movlw	0
  6456  002EA2  6E3B               	movwf	(___flge@ff1+1)^0,c
  6457  002EA4  0E00               	movlw	0
  6458  002EA6  6E3C               	movwf	(___flge@ff1+2)^0,c
  6459  002EA8  0E00               	movlw	0
  6460  002EAA  6E3D               	movwf	(___flge@ff1+3)^0,c
  6461  002EAC                     l4616:
  6462  002EAC  0E00               	movlw	0
  6463  002EAE  143E               	andwf	___flge@ff2^0,w,c
  6464  002EB0  6E42               	movwf	??___flge^0,c
  6465  002EB2  0E00               	movlw	0
  6466  002EB4  143F               	andwf	(___flge@ff2+1)^0,w,c
  6467  002EB6  6E43               	movwf	(??___flge+1)^0,c
  6468  002EB8  0E80               	movlw	128
  6469  002EBA  1440               	andwf	(___flge@ff2+2)^0,w,c
  6470  002EBC  6E44               	movwf	(??___flge+2)^0,c
  6471  002EBE  0E7F               	movlw	127
  6472  002EC0  1441               	andwf	(___flge@ff2+3)^0,w,c
  6473  002EC2  6E45               	movwf	(??___flge+3)^0,c
  6474  002EC4  5042               	movf	??___flge^0,w,c
  6475  002EC6  1043               	iorwf	(??___flge+1)^0,w,c
  6476  002EC8  1044               	iorwf	(??___flge+2)^0,w,c
  6477  002ECA  1045               	iorwf	(??___flge+3)^0,w,c
  6478  002ECC  A4D8               	btfss	status,2,c
  6479  002ECE  EF6B  F017         	goto	u6191
  6480  002ED2  EF6D  F017         	goto	u6190
  6481  002ED6                     u6191:
  6482  002ED6  EF75  F017         	goto	l4620
  6483  002EDA                     u6190:
  6484  002EDA  0E00               	movlw	0
  6485  002EDC  6E3E               	movwf	___flge@ff2^0,c
  6486  002EDE  0E00               	movlw	0
  6487  002EE0  6E3F               	movwf	(___flge@ff2+1)^0,c
  6488  002EE2  0E00               	movlw	0
  6489  002EE4  6E40               	movwf	(___flge@ff2+2)^0,c
  6490  002EE6  0E00               	movlw	0
  6491  002EE8  6E41               	movwf	(___flge@ff2+3)^0,c
  6492  002EEA                     l4620:
  6493  002EEA  AE3D               	btfss	(___flge@ff1+3)^0,7,c
  6494  002EEC  EF7A  F017         	goto	u6201
  6495  002EF0  EF7C  F017         	goto	u6200
  6496  002EF4                     u6201:
  6497  002EF4  EF85  F017         	goto	l4624
  6498  002EF8                     u6200:
  6499  002EF8  6C3A               	negf	___flge@ff1^0,c
  6500  002EFA  1E3B               	comf	(___flge@ff1+1)^0,f,c
  6501  002EFC  B0D8               	btfsc	status,0,c
  6502  002EFE  2A3B               	incf	(___flge@ff1+1)^0,f,c
  6503  002F00  1E3C               	comf	(___flge@ff1+2)^0,f,c
  6504  002F02  B0D8               	btfsc	status,0,c
  6505  002F04  2A3C               	incf	(___flge@ff1+2)^0,f,c
  6506  002F06  0E80               	movlw	128
  6507  002F08  563D               	subfwb	(___flge@ff1+3)^0,f,c
  6508  002F0A                     l4624:
  6509  002F0A  AE41               	btfss	(___flge@ff2+3)^0,7,c
  6510  002F0C  EF8A  F017         	goto	u6211
  6511  002F10  EF8C  F017         	goto	u6210
  6512  002F14                     u6211:
  6513  002F14  EF95  F017         	goto	l355
  6514  002F18                     u6210:
  6515  002F18  6C3E               	negf	___flge@ff2^0,c
  6516  002F1A  1E3F               	comf	(___flge@ff2+1)^0,f,c
  6517  002F1C  B0D8               	btfsc	status,0,c
  6518  002F1E  2A3F               	incf	(___flge@ff2+1)^0,f,c
  6519  002F20  1E40               	comf	(___flge@ff2+2)^0,f,c
  6520  002F22  B0D8               	btfsc	status,0,c
  6521  002F24  2A40               	incf	(___flge@ff2+2)^0,f,c
  6522  002F26  0E80               	movlw	128
  6523  002F28  5641               	subfwb	(___flge@ff2+3)^0,f,c
  6524  002F2A                     l355:
  6525  002F2A  0E00               	movlw	0
  6526  002F2C  1A3A               	xorwf	___flge@ff1^0,f,c
  6527  002F2E  0E00               	movlw	0
  6528  002F30  1A3B               	xorwf	(___flge@ff1+1)^0,f,c
  6529  002F32  0E00               	movlw	0
  6530  002F34  1A3C               	xorwf	(___flge@ff1+2)^0,f,c
  6531  002F36  0E80               	movlw	128
  6532  002F38  1A3D               	xorwf	(___flge@ff1+3)^0,f,c
  6533  002F3A  0E00               	movlw	0
  6534  002F3C  1A3E               	xorwf	___flge@ff2^0,f,c
  6535  002F3E  0E00               	movlw	0
  6536  002F40  1A3F               	xorwf	(___flge@ff2+1)^0,f,c
  6537  002F42  0E00               	movlw	0
  6538  002F44  1A40               	xorwf	(___flge@ff2+2)^0,f,c
  6539  002F46  0E80               	movlw	128
  6540  002F48  1A41               	xorwf	(___flge@ff2+3)^0,f,c
  6541  002F4A  503E               	movf	___flge@ff2^0,w,c
  6542  002F4C  5C3A               	subwf	___flge@ff1^0,w,c
  6543  002F4E  503F               	movf	(___flge@ff2+1)^0,w,c
  6544  002F50  583B               	subwfb	(___flge@ff1+1)^0,w,c
  6545  002F52  5040               	movf	(___flge@ff2+2)^0,w,c
  6546  002F54  583C               	subwfb	(___flge@ff1+2)^0,w,c
  6547  002F56  5041               	movf	(___flge@ff2+3)^0,w,c
  6548  002F58  583D               	subwfb	(___flge@ff1+3)^0,w,c
  6549  002F5A  B0D8               	btfsc	status,0,c
  6550  002F5C  EFB2  F017         	goto	u6221
  6551  002F60  EFB4  F017         	goto	u6220
  6552  002F64                     u6221:
  6553  002F64  EFB7  F017         	goto	l4630
  6554  002F68                     u6220:
  6555  002F68  90D8               	bcf	status,0,c
  6556  002F6A  EFB8  F017         	goto	l360
  6557  002F6E                     l4630:
  6558  002F6E  80D8               	bsf	status,0,c
  6559  002F70                     l360:
  6560  002F70  0012               	return		;funcret
  6561  002F72                     __end_of___flge:
  6562                           	callstack 0
  6563                           
  6564 ;; *************** function ___fleq *****************
  6565 ;; Defined at:
  6566 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  ff1             4   12[COMRAM] unsigned char 
  6569 ;;  ff2             4   16[COMRAM] unsigned char 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6581 ;;      Params:         8       0       0       0       0       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6583 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6584 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6585 ;;Total ram usage:       12 bytes
  6586 ;; Hardware stack levels used: 1
  6587 ;; Hardware stack levels required when called: 2
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_efgtoa
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text21
  6596  00354A                     __ptext21:
  6597                           	callstack 0
  6598  00354A                     ___fleq:
  6599                           	callstack 24
  6600  00354A  0E00               	movlw	0
  6601  00354C  140D               	andwf	___fleq@ff1^0,w,c
  6602  00354E  6E15               	movwf	??___fleq^0,c
  6603  003550  0E00               	movlw	0
  6604  003552  140E               	andwf	(___fleq@ff1+1)^0,w,c
  6605  003554  6E16               	movwf	(??___fleq+1)^0,c
  6606  003556  0E80               	movlw	128
  6607  003558  140F               	andwf	(___fleq@ff1+2)^0,w,c
  6608  00355A  6E17               	movwf	(??___fleq+2)^0,c
  6609  00355C  0E7F               	movlw	127
  6610  00355E  1410               	andwf	(___fleq@ff1+3)^0,w,c
  6611  003560  6E18               	movwf	(??___fleq+3)^0,c
  6612  003562  5015               	movf	??___fleq^0,w,c
  6613  003564  1016               	iorwf	(??___fleq+1)^0,w,c
  6614  003566  1017               	iorwf	(??___fleq+2)^0,w,c
  6615  003568  1018               	iorwf	(??___fleq+3)^0,w,c
  6616  00356A  A4D8               	btfss	status,2,c
  6617  00356C  EFBA  F01A         	goto	u6151
  6618  003570  EFBC  F01A         	goto	u6150
  6619  003574                     u6151:
  6620  003574  EFC4  F01A         	goto	l4600
  6621  003578                     u6150:
  6622  003578  0E00               	movlw	0
  6623  00357A  6E0D               	movwf	___fleq@ff1^0,c
  6624  00357C  0E00               	movlw	0
  6625  00357E  6E0E               	movwf	(___fleq@ff1+1)^0,c
  6626  003580  0E00               	movlw	0
  6627  003582  6E0F               	movwf	(___fleq@ff1+2)^0,c
  6628  003584  0E00               	movlw	0
  6629  003586  6E10               	movwf	(___fleq@ff1+3)^0,c
  6630  003588                     l4600:
  6631  003588  0E00               	movlw	0
  6632  00358A  1411               	andwf	___fleq@ff2^0,w,c
  6633  00358C  6E15               	movwf	??___fleq^0,c
  6634  00358E  0E00               	movlw	0
  6635  003590  1412               	andwf	(___fleq@ff2+1)^0,w,c
  6636  003592  6E16               	movwf	(??___fleq+1)^0,c
  6637  003594  0E80               	movlw	128
  6638  003596  1413               	andwf	(___fleq@ff2+2)^0,w,c
  6639  003598  6E17               	movwf	(??___fleq+2)^0,c
  6640  00359A  0E7F               	movlw	127
  6641  00359C  1414               	andwf	(___fleq@ff2+3)^0,w,c
  6642  00359E  6E18               	movwf	(??___fleq+3)^0,c
  6643  0035A0  5015               	movf	??___fleq^0,w,c
  6644  0035A2  1016               	iorwf	(??___fleq+1)^0,w,c
  6645  0035A4  1017               	iorwf	(??___fleq+2)^0,w,c
  6646  0035A6  1018               	iorwf	(??___fleq+3)^0,w,c
  6647  0035A8  A4D8               	btfss	status,2,c
  6648  0035AA  EFD9  F01A         	goto	u6161
  6649  0035AE  EFDB  F01A         	goto	u6160
  6650  0035B2                     u6161:
  6651  0035B2  EFE3  F01A         	goto	l4604
  6652  0035B6                     u6160:
  6653  0035B6  0E00               	movlw	0
  6654  0035B8  6E11               	movwf	___fleq@ff2^0,c
  6655  0035BA  0E00               	movlw	0
  6656  0035BC  6E12               	movwf	(___fleq@ff2+1)^0,c
  6657  0035BE  0E00               	movlw	0
  6658  0035C0  6E13               	movwf	(___fleq@ff2+2)^0,c
  6659  0035C2  0E00               	movlw	0
  6660  0035C4  6E14               	movwf	(___fleq@ff2+3)^0,c
  6661  0035C6                     l4604:
  6662  0035C6  5011               	movf	___fleq@ff2^0,w,c
  6663  0035C8  180D               	xorwf	___fleq@ff1^0,w,c
  6664  0035CA  E10F               	bnz	u6170
  6665  0035CC  5012               	movf	(___fleq@ff2+1)^0,w,c
  6666  0035CE  180E               	xorwf	(___fleq@ff1+1)^0,w,c
  6667  0035D0  E10C               	bnz	u6170
  6668  0035D2  5013               	movf	(___fleq@ff2+2)^0,w,c
  6669  0035D4  180F               	xorwf	(___fleq@ff1+2)^0,w,c
  6670  0035D6  E109               	bnz	u6170
  6671  0035D8  5014               	movf	(___fleq@ff2+3)^0,w,c
  6672  0035DA  1810               	xorwf	(___fleq@ff1+3)^0,w,c
  6673  0035DC  B4D8               	btfsc	status,2,c
  6674  0035DE  EFF3  F01A         	goto	u6171
  6675  0035E2  EFF5  F01A         	goto	u6170
  6676  0035E6                     u6171:
  6677  0035E6  EFF8  F01A         	goto	l4608
  6678  0035EA                     u6170:
  6679  0035EA  90D8               	bcf	status,0,c
  6680  0035EC  EFF9  F01A         	goto	l349
  6681  0035F0                     l4608:
  6682  0035F0  80D8               	bsf	status,0,c
  6683  0035F2                     l349:
  6684  0035F2  0012               	return		;funcret
  6685  0035F4                     __end_of___fleq:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function ___fldiv *****************
  6689 ;; Defined at:
  6690 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  b               4   12[COMRAM] unsigned char 
  6693 ;;  a               4   16[COMRAM] unsigned char 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  grs             4   31[COMRAM] unsigned long 
  6696 ;;  rem             4   24[COMRAM] unsigned long 
  6697 ;;  new_exp         2   29[COMRAM] short 
  6698 ;;  aexp            1   36[COMRAM] unsigned char 
  6699 ;;  bexp            1   35[COMRAM] unsigned char 
  6700 ;;  sign            1   28[COMRAM] unsigned char 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  4   12[COMRAM] unsigned char 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6710 ;;      Params:         8       0       0       0       0       0       0       0       0
  6711 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6712 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6713 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6714 ;;Total ram usage:       25 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_efgtoa
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text22
  6725  0022E4                     __ptext22:
  6726                           	callstack 0
  6727  0022E4                     ___fldiv:
  6728                           	callstack 24
  6729  0022E4  5010               	movf	(___fldiv@b+3)^0,w,c
  6730  0022E6  0B80               	andlw	128
  6731  0022E8  6E1D               	movwf	___fldiv@sign^0,c
  6732  0022EA  5010               	movf	(___fldiv@b+3)^0,w,c
  6733  0022EC  2410               	addwf	(___fldiv@b+3)^0,w,c
  6734  0022EE  6E24               	movwf	___fldiv@bexp^0,c
  6735  0022F0  AE0F               	btfss	(___fldiv@b+2)^0,7,c
  6736  0022F2  EF7D  F011         	goto	u5611
  6737  0022F6  EF7F  F011         	goto	u5610
  6738  0022FA                     u5611:
  6739  0022FA  EF80  F011         	goto	l4248
  6740  0022FE                     u5610:
  6741  0022FE  8024               	bsf	___fldiv@bexp^0,0,c
  6742  002300                     l4248:
  6743  002300  5024               	movf	___fldiv@bexp^0,w,c
  6744  002302  B4D8               	btfsc	status,2,c
  6745  002304  EF86  F011         	goto	u5621
  6746  002308  EF88  F011         	goto	u5620
  6747  00230C                     u5621:
  6748  00230C  EF9D  F011         	goto	l4258
  6749  002310                     u5620:
  6750  002310  2824               	incf	___fldiv@bexp^0,w,c
  6751  002312  A4D8               	btfss	status,2,c
  6752  002314  EF8E  F011         	goto	u5631
  6753  002318  EF90  F011         	goto	u5630
  6754  00231C                     u5631:
  6755  00231C  EF98  F011         	goto	l4254
  6756  002320                     u5630:
  6757  002320  0E00               	movlw	0
  6758  002322  6E0D               	movwf	___fldiv@b^0,c
  6759  002324  0E00               	movlw	0
  6760  002326  6E0E               	movwf	(___fldiv@b+1)^0,c
  6761  002328  0E00               	movlw	0
  6762  00232A  6E0F               	movwf	(___fldiv@b+2)^0,c
  6763  00232C  0E00               	movlw	0
  6764  00232E  6E10               	movwf	(___fldiv@b+3)^0,c
  6765  002330                     l4254:
  6766  002330  8E0F               	bsf	(___fldiv@b+2)^0,7,c
  6767  002332  0E00               	movlw	0
  6768  002334  6E10               	movwf	(___fldiv@b+3)^0,c
  6769  002336  EFA5  F011         	goto	l4260
  6770  00233A                     l4258:
  6771  00233A  0E00               	movlw	0
  6772  00233C  6E0D               	movwf	___fldiv@b^0,c
  6773  00233E  0E00               	movlw	0
  6774  002340  6E0E               	movwf	(___fldiv@b+1)^0,c
  6775  002342  0E00               	movlw	0
  6776  002344  6E0F               	movwf	(___fldiv@b+2)^0,c
  6777  002346  0E00               	movlw	0
  6778  002348  6E10               	movwf	(___fldiv@b+3)^0,c
  6779  00234A                     l4260:
  6780  00234A  5014               	movf	(___fldiv@a+3)^0,w,c
  6781  00234C  0B80               	andlw	128
  6782  00234E  1A1D               	xorwf	___fldiv@sign^0,f,c
  6783  002350  5014               	movf	(___fldiv@a+3)^0,w,c
  6784  002352  2414               	addwf	(___fldiv@a+3)^0,w,c
  6785  002354  6E25               	movwf	___fldiv@aexp^0,c
  6786  002356  AE13               	btfss	(___fldiv@a+2)^0,7,c
  6787  002358  EFB0  F011         	goto	u5641
  6788  00235C  EFB2  F011         	goto	u5640
  6789  002360                     u5641:
  6790  002360  EFB3  F011         	goto	l4268
  6791  002364                     u5640:
  6792  002364  8025               	bsf	___fldiv@aexp^0,0,c
  6793  002366                     l4268:
  6794  002366  5025               	movf	___fldiv@aexp^0,w,c
  6795  002368  B4D8               	btfsc	status,2,c
  6796  00236A  EFB9  F011         	goto	u5651
  6797  00236E  EFBB  F011         	goto	u5650
  6798  002372                     u5651:
  6799  002372  EFD0  F011         	goto	l4278
  6800  002376                     u5650:
  6801  002376  2825               	incf	___fldiv@aexp^0,w,c
  6802  002378  A4D8               	btfss	status,2,c
  6803  00237A  EFC1  F011         	goto	u5661
  6804  00237E  EFC3  F011         	goto	u5660
  6805  002382                     u5661:
  6806  002382  EFCB  F011         	goto	l4274
  6807  002386                     u5660:
  6808  002386  0E00               	movlw	0
  6809  002388  6E11               	movwf	___fldiv@a^0,c
  6810  00238A  0E00               	movlw	0
  6811  00238C  6E12               	movwf	(___fldiv@a+1)^0,c
  6812  00238E  0E00               	movlw	0
  6813  002390  6E13               	movwf	(___fldiv@a+2)^0,c
  6814  002392  0E00               	movlw	0
  6815  002394  6E14               	movwf	(___fldiv@a+3)^0,c
  6816  002396                     l4274:
  6817  002396  8E13               	bsf	(___fldiv@a+2)^0,7,c
  6818  002398  0E00               	movlw	0
  6819  00239A  6E14               	movwf	(___fldiv@a+3)^0,c
  6820  00239C  EFD8  F011         	goto	l4280
  6821  0023A0                     l4278:
  6822  0023A0  0E00               	movlw	0
  6823  0023A2  6E11               	movwf	___fldiv@a^0,c
  6824  0023A4  0E00               	movlw	0
  6825  0023A6  6E12               	movwf	(___fldiv@a+1)^0,c
  6826  0023A8  0E00               	movlw	0
  6827  0023AA  6E13               	movwf	(___fldiv@a+2)^0,c
  6828  0023AC  0E00               	movlw	0
  6829  0023AE  6E14               	movwf	(___fldiv@a+3)^0,c
  6830  0023B0                     l4280:
  6831  0023B0  5011               	movf	___fldiv@a^0,w,c
  6832  0023B2  1012               	iorwf	(___fldiv@a+1)^0,w,c
  6833  0023B4  1013               	iorwf	(___fldiv@a+2)^0,w,c
  6834  0023B6  1014               	iorwf	(___fldiv@a+3)^0,w,c
  6835  0023B8  A4D8               	btfss	status,2,c
  6836  0023BA  EFE1  F011         	goto	u5671
  6837  0023BE  EFE3  F011         	goto	u5670
  6838  0023C2                     u5671:
  6839  0023C2  EFFB  F011         	goto	l4292
  6840  0023C6                     u5670:
  6841  0023C6  0E00               	movlw	0
  6842  0023C8  6E0D               	movwf	___fldiv@b^0,c
  6843  0023CA  0E00               	movlw	0
  6844  0023CC  6E0E               	movwf	(___fldiv@b+1)^0,c
  6845  0023CE  0E00               	movlw	0
  6846  0023D0  6E0F               	movwf	(___fldiv@b+2)^0,c
  6847  0023D2  0E00               	movlw	0
  6848  0023D4  6E10               	movwf	(___fldiv@b+3)^0,c
  6849  0023D6  0E80               	movlw	128
  6850  0023D8  120F               	iorwf	(___fldiv@b+2)^0,f,c
  6851  0023DA  0E7F               	movlw	127
  6852  0023DC  1210               	iorwf	(___fldiv@b+3)^0,f,c
  6853  0023DE                     l4286:
  6854  0023DE  501D               	movf	___fldiv@sign^0,w,c
  6855  0023E0  1210               	iorwf	(___fldiv@b+3)^0,f,c
  6856  0023E2  C00D  F00D         	movff	___fldiv@b,?___fldiv
  6857  0023E6  C00E  F00E         	movff	___fldiv@b+1,?___fldiv+1
  6858  0023EA  C00F  F00F         	movff	___fldiv@b+2,?___fldiv+2
  6859  0023EE  C010  F010         	movff	___fldiv@b+3,?___fldiv+3
  6860  0023F2  EF3E  F013         	goto	l672
  6861  0023F6                     l4292:
  6862  0023F6  5024               	movf	___fldiv@bexp^0,w,c
  6863  0023F8  A4D8               	btfss	status,2,c
  6864  0023FA  EF01  F012         	goto	u5681
  6865  0023FE  EF03  F012         	goto	u5680
  6866  002402                     u5681:
  6867  002402  EF0D  F012         	goto	l4300
  6868  002406                     u5680:
  6869  002406  0E00               	movlw	0
  6870  002408  6E0D               	movwf	?___fldiv^0,c
  6871  00240A  0E00               	movlw	0
  6872  00240C  6E0E               	movwf	(?___fldiv+1)^0,c
  6873  00240E  0E00               	movlw	0
  6874  002410  6E0F               	movwf	(?___fldiv+2)^0,c
  6875  002412  0E00               	movlw	0
  6876  002414  6E10               	movwf	(?___fldiv+3)^0,c
  6877  002416  EF3E  F013         	goto	l672
  6878  00241A                     l4300:
  6879  00241A  5025               	movf	___fldiv@aexp^0,w,c
  6880  00241C  C024  F015         	movff	___fldiv@bexp,??___fldiv
  6881  002420  6A16               	clrf	(??___fldiv+1)^0,c
  6882  002422  5E15               	subwf	??___fldiv^0,f,c
  6883  002424  0E00               	movlw	0
  6884  002426  5A16               	subwfb	(??___fldiv+1)^0,f,c
  6885  002428  0E7F               	movlw	127
  6886  00242A  2415               	addwf	??___fldiv^0,w,c
  6887  00242C  6E1E               	movwf	___fldiv@new_exp^0,c
  6888  00242E  0E00               	movlw	0
  6889  002430  2016               	addwfc	(??___fldiv+1)^0,w,c
  6890  002432  6E1F               	movwf	(___fldiv@new_exp+1)^0,c
  6891  002434  C00D  F019         	movff	___fldiv@b,___fldiv@rem
  6892  002438  C00E  F01A         	movff	___fldiv@b+1,___fldiv@rem+1
  6893  00243C  C00F  F01B         	movff	___fldiv@b+2,___fldiv@rem+2
  6894  002440  C010  F01C         	movff	___fldiv@b+3,___fldiv@rem+3
  6895  002444  0E00               	movlw	0
  6896  002446  6E0D               	movwf	___fldiv@b^0,c
  6897  002448  0E00               	movlw	0
  6898  00244A  6E0E               	movwf	(___fldiv@b+1)^0,c
  6899  00244C  0E00               	movlw	0
  6900  00244E  6E0F               	movwf	(___fldiv@b+2)^0,c
  6901  002450  0E00               	movlw	0
  6902  002452  6E10               	movwf	(___fldiv@b+3)^0,c
  6903  002454  0E00               	movlw	0
  6904  002456  6E20               	movwf	___fldiv@grs^0,c
  6905  002458  0E00               	movlw	0
  6906  00245A  6E21               	movwf	(___fldiv@grs+1)^0,c
  6907  00245C  0E00               	movlw	0
  6908  00245E  6E22               	movwf	(___fldiv@grs+2)^0,c
  6909  002460  0E00               	movlw	0
  6910  002462  6E23               	movwf	(___fldiv@grs+3)^0,c
  6911  002464  0E00               	movlw	0
  6912  002466  6E25               	movwf	___fldiv@aexp^0,c
  6913  002468  EF6E  F012         	goto	l674
  6914  00246C                     l4310:
  6915  00246C  5025               	movf	___fldiv@aexp^0,w,c
  6916  00246E  B4D8               	btfsc	status,2,c
  6917  002470  EF3C  F012         	goto	u5691
  6918  002474  EF3E  F012         	goto	u5690
  6919  002478                     u5691:
  6920  002478  EF55  F012         	goto	l4318
  6921  00247C                     u5690:
  6922  00247C  90D8               	bcf	status,0,c
  6923  00247E  3619               	rlcf	___fldiv@rem^0,f,c
  6924  002480  361A               	rlcf	(___fldiv@rem+1)^0,f,c
  6925  002482  361B               	rlcf	(___fldiv@rem+2)^0,f,c
  6926  002484  361C               	rlcf	(___fldiv@rem+3)^0,f,c
  6927  002486  90D8               	bcf	status,0,c
  6928  002488  360D               	rlcf	___fldiv@b^0,f,c
  6929  00248A  360E               	rlcf	(___fldiv@b+1)^0,f,c
  6930  00248C  360F               	rlcf	(___fldiv@b+2)^0,f,c
  6931  00248E  3610               	rlcf	(___fldiv@b+3)^0,f,c
  6932  002490  AE23               	btfss	(___fldiv@grs+3)^0,7,c
  6933  002492  EF4D  F012         	goto	u5701
  6934  002496  EF4F  F012         	goto	u5700
  6935  00249A                     u5701:
  6936  00249A  EF50  F012         	goto	l677
  6937  00249E                     u5700:
  6938  00249E  800D               	bsf	___fldiv@b^0,0,c
  6939  0024A0                     l677:
  6940  0024A0  90D8               	bcf	status,0,c
  6941  0024A2  3620               	rlcf	___fldiv@grs^0,f,c
  6942  0024A4  3621               	rlcf	(___fldiv@grs+1)^0,f,c
  6943  0024A6  3622               	rlcf	(___fldiv@grs+2)^0,f,c
  6944  0024A8  3623               	rlcf	(___fldiv@grs+3)^0,f,c
  6945  0024AA                     l4318:
  6946  0024AA  5011               	movf	___fldiv@a^0,w,c
  6947  0024AC  5C19               	subwf	___fldiv@rem^0,w,c
  6948  0024AE  5012               	movf	(___fldiv@a+1)^0,w,c
  6949  0024B0  581A               	subwfb	(___fldiv@rem+1)^0,w,c
  6950  0024B2  5013               	movf	(___fldiv@a+2)^0,w,c
  6951  0024B4  581B               	subwfb	(___fldiv@rem+2)^0,w,c
  6952  0024B6  5014               	movf	(___fldiv@a+3)^0,w,c
  6953  0024B8  581C               	subwfb	(___fldiv@rem+3)^0,w,c
  6954  0024BA  A0D8               	btfss	status,0,c
  6955  0024BC  EF62  F012         	goto	u5711
  6956  0024C0  EF64  F012         	goto	u5710
  6957  0024C4                     u5711:
  6958  0024C4  EF6D  F012         	goto	l4324
  6959  0024C8                     u5710:
  6960  0024C8  8C23               	bsf	(___fldiv@grs+3)^0,6,c
  6961  0024CA  5011               	movf	___fldiv@a^0,w,c
  6962  0024CC  5E19               	subwf	___fldiv@rem^0,f,c
  6963  0024CE  5012               	movf	(___fldiv@a+1)^0,w,c
  6964  0024D0  5A1A               	subwfb	(___fldiv@rem+1)^0,f,c
  6965  0024D2  5013               	movf	(___fldiv@a+2)^0,w,c
  6966  0024D4  5A1B               	subwfb	(___fldiv@rem+2)^0,f,c
  6967  0024D6  5014               	movf	(___fldiv@a+3)^0,w,c
  6968  0024D8  5A1C               	subwfb	(___fldiv@rem+3)^0,f,c
  6969  0024DA                     l4324:
  6970  0024DA  2A25               	incf	___fldiv@aexp^0,f,c
  6971  0024DC                     l674:
  6972  0024DC  0E19               	movlw	25
  6973  0024DE  6425               	cpfsgt	___fldiv@aexp^0,c
  6974  0024E0  EF74  F012         	goto	u5721
  6975  0024E4  EF76  F012         	goto	u5720
  6976  0024E8                     u5721:
  6977  0024E8  EF36  F012         	goto	l4310
  6978  0024EC                     u5720:
  6979  0024EC  5019               	movf	___fldiv@rem^0,w,c
  6980  0024EE  101A               	iorwf	(___fldiv@rem+1)^0,w,c
  6981  0024F0  101B               	iorwf	(___fldiv@rem+2)^0,w,c
  6982  0024F2  101C               	iorwf	(___fldiv@rem+3)^0,w,c
  6983  0024F4  B4D8               	btfsc	status,2,c
  6984  0024F6  EF7F  F012         	goto	u5731
  6985  0024FA  EF81  F012         	goto	u5730
  6986  0024FE                     u5731:
  6987  0024FE  EF99  F012         	goto	l4336
  6988  002502                     u5730:
  6989  002502  8020               	bsf	___fldiv@grs^0,0,c
  6990  002504  EF99  F012         	goto	l4336
  6991  002508                     l4330:
  6992  002508  90D8               	bcf	status,0,c
  6993  00250A  360D               	rlcf	___fldiv@b^0,f,c
  6994  00250C  360E               	rlcf	(___fldiv@b+1)^0,f,c
  6995  00250E  360F               	rlcf	(___fldiv@b+2)^0,f,c
  6996  002510  3610               	rlcf	(___fldiv@b+3)^0,f,c
  6997  002512  AE23               	btfss	(___fldiv@grs+3)^0,7,c
  6998  002514  EF8E  F012         	goto	u5741
  6999  002518  EF90  F012         	goto	u5740
  7000  00251C                     u5741:
  7001  00251C  EF91  F012         	goto	l683
  7002  002520                     u5740:
  7003  002520  800D               	bsf	___fldiv@b^0,0,c
  7004  002522                     l683:
  7005  002522  90D8               	bcf	status,0,c
  7006  002524  3620               	rlcf	___fldiv@grs^0,f,c
  7007  002526  3621               	rlcf	(___fldiv@grs+1)^0,f,c
  7008  002528  3622               	rlcf	(___fldiv@grs+2)^0,f,c
  7009  00252A  3623               	rlcf	(___fldiv@grs+3)^0,f,c
  7010  00252C  061E               	decf	___fldiv@new_exp^0,f,c
  7011  00252E  A0D8               	btfss	status,0,c
  7012  002530  061F               	decf	(___fldiv@new_exp+1)^0,f,c
  7013  002532                     l4336:
  7014  002532  AE0F               	btfss	(___fldiv@b+2)^0,7,c
  7015  002534  EF9E  F012         	goto	u5751
  7016  002538  EFA0  F012         	goto	u5750
  7017  00253C                     u5751:
  7018  00253C  EF84  F012         	goto	l4330
  7019  002540                     u5750:
  7020  002540  0E00               	movlw	0
  7021  002542  6E25               	movwf	___fldiv@aexp^0,c
  7022  002544  AE23               	btfss	(___fldiv@grs+3)^0,7,c
  7023  002546  EFA7  F012         	goto	u5761
  7024  00254A  EFA9  F012         	goto	u5760
  7025  00254E                     u5761:
  7026  00254E  EFCD  F012         	goto	l685
  7027  002552                     u5760:
  7028  002552  0EFF               	movlw	255
  7029  002554  1420               	andwf	___fldiv@grs^0,w,c
  7030  002556  6E15               	movwf	??___fldiv^0,c
  7031  002558  0EFF               	movlw	255
  7032  00255A  1421               	andwf	(___fldiv@grs+1)^0,w,c
  7033  00255C  6E16               	movwf	(??___fldiv+1)^0,c
  7034  00255E  0EFF               	movlw	255
  7035  002560  1422               	andwf	(___fldiv@grs+2)^0,w,c
  7036  002562  6E17               	movwf	(??___fldiv+2)^0,c
  7037  002564  0E7F               	movlw	127
  7038  002566  1423               	andwf	(___fldiv@grs+3)^0,w,c
  7039  002568  6E18               	movwf	(??___fldiv+3)^0,c
  7040  00256A  5015               	movf	??___fldiv^0,w,c
  7041  00256C  1016               	iorwf	(??___fldiv+1)^0,w,c
  7042  00256E  1017               	iorwf	(??___fldiv+2)^0,w,c
  7043  002570  1018               	iorwf	(??___fldiv+3)^0,w,c
  7044  002572  B4D8               	btfsc	status,2,c
  7045  002574  EFBE  F012         	goto	u5771
  7046  002578  EFC0  F012         	goto	u5770
  7047  00257C                     u5771:
  7048  00257C  EFC4  F012         	goto	l686
  7049  002580                     u5770:
  7050  002580                     l4344:
  7051  002580  0E01               	movlw	1
  7052  002582  6E25               	movwf	___fldiv@aexp^0,c
  7053  002584  EFCD  F012         	goto	l685
  7054  002588                     l686:
  7055  002588  A00D               	btfss	___fldiv@b^0,0,c
  7056  00258A  EFC9  F012         	goto	u5781
  7057  00258E  EFCB  F012         	goto	u5780
  7058  002592                     u5781:
  7059  002592  EFCD  F012         	goto	l685
  7060  002596                     u5780:
  7061  002596  EFC0  F012         	goto	l4344
  7062  00259A                     l685:
  7063  00259A  5025               	movf	___fldiv@aexp^0,w,c
  7064  00259C  B4D8               	btfsc	status,2,c
  7065  00259E  EFD3  F012         	goto	u5791
  7066  0025A2  EFD5  F012         	goto	u5790
  7067  0025A6                     u5791:
  7068  0025A6  EFF9  F012         	goto	l4356
  7069  0025AA                     u5790:
  7070  0025AA  0E01               	movlw	1
  7071  0025AC  260D               	addwf	___fldiv@b^0,f,c
  7072  0025AE  0E00               	movlw	0
  7073  0025B0  220E               	addwfc	(___fldiv@b+1)^0,f,c
  7074  0025B2  220F               	addwfc	(___fldiv@b+2)^0,f,c
  7075  0025B4  2210               	addwfc	(___fldiv@b+3)^0,f,c
  7076  0025B6  A010               	btfss	(___fldiv@b+3)^0,0,c
  7077  0025B8  EFE0  F012         	goto	u5801
  7078  0025BC  EFE2  F012         	goto	u5800
  7079  0025C0                     u5801:
  7080  0025C0  EFF9  F012         	goto	l4356
  7081  0025C4                     u5800:
  7082  0025C4  C00D  F015         	movff	___fldiv@b,??___fldiv
  7083  0025C8  C00E  F016         	movff	___fldiv@b+1,??___fldiv+1
  7084  0025CC  C00F  F017         	movff	___fldiv@b+2,??___fldiv+2
  7085  0025D0  C010  F018         	movff	___fldiv@b+3,??___fldiv+3
  7086  0025D4  3418               	rlcf	(??___fldiv+3)^0,w,c
  7087  0025D6  3218               	rrcf	(??___fldiv+3)^0,f,c
  7088  0025D8  3217               	rrcf	(??___fldiv+2)^0,f,c
  7089  0025DA  3216               	rrcf	(??___fldiv+1)^0,f,c
  7090  0025DC  3215               	rrcf	??___fldiv^0,f,c
  7091  0025DE  C015  F00D         	movff	??___fldiv,___fldiv@b
  7092  0025E2  C016  F00E         	movff	??___fldiv+1,___fldiv@b+1
  7093  0025E6  C017  F00F         	movff	??___fldiv+2,___fldiv@b+2
  7094  0025EA  C018  F010         	movff	??___fldiv+3,___fldiv@b+3
  7095  0025EE  4A1E               	infsnz	___fldiv@new_exp^0,f,c
  7096  0025F0  2A1F               	incf	(___fldiv@new_exp+1)^0,f,c
  7097  0025F2                     l4356:
  7098  0025F2  BE1F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7099  0025F4  EF04  F013         	goto	u5811
  7100  0025F8  501F               	movf	(___fldiv@new_exp+1)^0,w,c
  7101  0025FA  E108               	bnz	u5810
  7102  0025FC  281E               	incf	___fldiv@new_exp^0,w,c
  7103  0025FE  A0D8               	btfss	status,0,c
  7104  002600  EF04  F013         	goto	u5811
  7105  002604  EF06  F013         	goto	u5810
  7106  002608                     u5811:
  7107  002608  EF11  F013         	goto	l4360
  7108  00260C                     u5810:
  7109  00260C  0E00               	movlw	0
  7110  00260E  6E1F               	movwf	(___fldiv@new_exp+1)^0,c
  7111  002610  681E               	setf	___fldiv@new_exp^0,c
  7112  002612  0E00               	movlw	0
  7113  002614  6E0D               	movwf	___fldiv@b^0,c
  7114  002616  0E00               	movlw	0
  7115  002618  6E0E               	movwf	(___fldiv@b+1)^0,c
  7116  00261A  0E00               	movlw	0
  7117  00261C  6E0F               	movwf	(___fldiv@b+2)^0,c
  7118  00261E  0E00               	movlw	0
  7119  002620  6E10               	movwf	(___fldiv@b+3)^0,c
  7120  002622                     l4360:
  7121  002622  BE1F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7122  002624  EF1E  F013         	goto	u5820
  7123  002628  501F               	movf	(___fldiv@new_exp+1)^0,w,c
  7124  00262A  E106               	bnz	u5821
  7125  00262C  041E               	decf	___fldiv@new_exp^0,w,c
  7126  00262E  B0D8               	btfsc	status,0,c
  7127  002630  EF1C  F013         	goto	u5821
  7128  002634  EF1E  F013         	goto	u5820
  7129  002638                     u5821:
  7130  002638  EF2C  F013         	goto	l4364
  7131  00263C                     u5820:
  7132  00263C  0E00               	movlw	0
  7133  00263E  6E1F               	movwf	(___fldiv@new_exp+1)^0,c
  7134  002640  0E00               	movlw	0
  7135  002642  6E1E               	movwf	___fldiv@new_exp^0,c
  7136  002644  0E00               	movlw	0
  7137  002646  6E0D               	movwf	___fldiv@b^0,c
  7138  002648  0E00               	movlw	0
  7139  00264A  6E0E               	movwf	(___fldiv@b+1)^0,c
  7140  00264C  0E00               	movlw	0
  7141  00264E  6E0F               	movwf	(___fldiv@b+2)^0,c
  7142  002650  0E00               	movlw	0
  7143  002652  6E10               	movwf	(___fldiv@b+3)^0,c
  7144  002654  0E00               	movlw	0
  7145  002656  6E1D               	movwf	___fldiv@sign^0,c
  7146  002658                     l4364:
  7147  002658  C01E  F024         	movff	___fldiv@new_exp,___fldiv@bexp
  7148  00265C  A024               	btfss	___fldiv@bexp^0,0,c
  7149  00265E  EF33  F013         	goto	u5831
  7150  002662  EF35  F013         	goto	u5830
  7151  002666                     u5831:
  7152  002666  EF38  F013         	goto	l4370
  7153  00266A                     u5830:
  7154  00266A  8E0F               	bsf	(___fldiv@b+2)^0,7,c
  7155  00266C  EF39  F013         	goto	l4372
  7156  002670                     l4370:
  7157  002670  9E0F               	bcf	(___fldiv@b+2)^0,7,c
  7158  002672                     l4372:
  7159  002672  90D8               	bcf	status,0,c
  7160  002674  3024               	rrcf	___fldiv@bexp^0,w,c
  7161  002676  6E10               	movwf	(___fldiv@b+3)^0,c
  7162  002678  EFEF  F011         	goto	l4286
  7163  00267C                     l672:
  7164  00267C  0012               	return		;funcret
  7165  00267E                     __end_of___fldiv:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function ___awmod *****************
  7169 ;; Defined at:
  7170 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  dividend        2   12[COMRAM] int 
  7173 ;;  divisor         2   14[COMRAM] int 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  sign            1   17[COMRAM] unsigned char 
  7176 ;;  counter         1   16[COMRAM] unsigned char 
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  2   12[COMRAM] int 
  7179 ;; Registers used:
  7180 ;;		wreg, status,2, status,0
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7186 ;;      Params:         4       0       0       0       0       0       0       0       0
  7187 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7189 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7190 ;;Total ram usage:        6 bytes
  7191 ;; Hardware stack levels used: 1
  7192 ;; Hardware stack levels required when called: 2
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_efgtoa
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text23
  7201  00349A                     __ptext23:
  7202                           	callstack 0
  7203  00349A                     ___awmod:
  7204                           	callstack 24
  7205  00349A  0E00               	movlw	0
  7206  00349C  6E12               	movwf	___awmod@sign^0,c
  7207  00349E  BE0E               	btfsc	(___awmod@dividend+1)^0,7,c
  7208  0034A0  EF56  F01A         	goto	u6090
  7209  0034A4  EF54  F01A         	goto	u6091
  7210  0034A8                     u6091:
  7211  0034A8  EF5C  F01A         	goto	l4568
  7212  0034AC                     u6090:
  7213  0034AC  6C0D               	negf	___awmod@dividend^0,c
  7214  0034AE  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  7215  0034B0  B0D8               	btfsc	status,0,c
  7216  0034B2  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  7217  0034B4  0E01               	movlw	1
  7218  0034B6  6E12               	movwf	___awmod@sign^0,c
  7219  0034B8                     l4568:
  7220  0034B8  BE10               	btfsc	(___awmod@divisor+1)^0,7,c
  7221  0034BA  EF63  F01A         	goto	u6100
  7222  0034BE  EF61  F01A         	goto	u6101
  7223  0034C2                     u6101:
  7224  0034C2  EF67  F01A         	goto	l4572
  7225  0034C6                     u6100:
  7226  0034C6  6C0F               	negf	___awmod@divisor^0,c
  7227  0034C8  1E10               	comf	(___awmod@divisor+1)^0,f,c
  7228  0034CA  B0D8               	btfsc	status,0,c
  7229  0034CC  2A10               	incf	(___awmod@divisor+1)^0,f,c
  7230  0034CE                     l4572:
  7231  0034CE  500F               	movf	___awmod@divisor^0,w,c
  7232  0034D0  1010               	iorwf	(___awmod@divisor+1)^0,w,c
  7233  0034D2  B4D8               	btfsc	status,2,c
  7234  0034D4  EF6E  F01A         	goto	u6111
  7235  0034D8  EF70  F01A         	goto	u6110
  7236  0034DC                     u6111:
  7237  0034DC  EF94  F01A         	goto	l4588
  7238  0034E0                     u6110:
  7239  0034E0  0E01               	movlw	1
  7240  0034E2  6E11               	movwf	___awmod@counter^0,c
  7241  0034E4  EF78  F01A         	goto	l4578
  7242  0034E8                     l4576:
  7243  0034E8  90D8               	bcf	status,0,c
  7244  0034EA  360F               	rlcf	___awmod@divisor^0,f,c
  7245  0034EC  3610               	rlcf	(___awmod@divisor+1)^0,f,c
  7246  0034EE  2A11               	incf	___awmod@counter^0,f,c
  7247  0034F0                     l4578:
  7248  0034F0  AE10               	btfss	(___awmod@divisor+1)^0,7,c
  7249  0034F2  EF7D  F01A         	goto	u6121
  7250  0034F6  EF7F  F01A         	goto	u6120
  7251  0034FA                     u6121:
  7252  0034FA  EF74  F01A         	goto	l4576
  7253  0034FE                     u6120:
  7254  0034FE                     l4580:
  7255  0034FE  500F               	movf	___awmod@divisor^0,w,c
  7256  003500  5C0D               	subwf	___awmod@dividend^0,w,c
  7257  003502  5010               	movf	(___awmod@divisor+1)^0,w,c
  7258  003504  580E               	subwfb	(___awmod@dividend+1)^0,w,c
  7259  003506  A0D8               	btfss	status,0,c
  7260  003508  EF88  F01A         	goto	u6131
  7261  00350C  EF8A  F01A         	goto	u6130
  7262  003510                     u6131:
  7263  003510  EF8E  F01A         	goto	l4584
  7264  003514                     u6130:
  7265  003514  500F               	movf	___awmod@divisor^0,w,c
  7266  003516  5E0D               	subwf	___awmod@dividend^0,f,c
  7267  003518  5010               	movf	(___awmod@divisor+1)^0,w,c
  7268  00351A  5A0E               	subwfb	(___awmod@dividend+1)^0,f,c
  7269  00351C                     l4584:
  7270  00351C  90D8               	bcf	status,0,c
  7271  00351E  3210               	rrcf	(___awmod@divisor+1)^0,f,c
  7272  003520  320F               	rrcf	___awmod@divisor^0,f,c
  7273  003522  2E11               	decfsz	___awmod@counter^0,f,c
  7274  003524  EF7F  F01A         	goto	l4580
  7275  003528                     l4588:
  7276  003528  5012               	movf	___awmod@sign^0,w,c
  7277  00352A  B4D8               	btfsc	status,2,c
  7278  00352C  EF9A  F01A         	goto	u6141
  7279  003530  EF9C  F01A         	goto	u6140
  7280  003534                     u6141:
  7281  003534  EFA0  F01A         	goto	l4592
  7282  003538                     u6140:
  7283  003538  6C0D               	negf	___awmod@dividend^0,c
  7284  00353A  1E0E               	comf	(___awmod@dividend+1)^0,f,c
  7285  00353C  B0D8               	btfsc	status,0,c
  7286  00353E  2A0E               	incf	(___awmod@dividend+1)^0,f,c
  7287  003540                     l4592:
  7288  003540  C00D  F00D         	movff	___awmod@dividend,?___awmod
  7289  003544  C00E  F00E         	movff	___awmod@dividend+1,?___awmod+1
  7290  003548  0012               	return		;funcret
  7291  00354A                     __end_of___awmod:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function ___awdiv *****************
  7295 ;; Defined at:
  7296 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  dividend        2   12[COMRAM] int 
  7299 ;;  divisor         2   14[COMRAM] int 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  quotient        2   18[COMRAM] int 
  7302 ;;  sign            1   17[COMRAM] unsigned char 
  7303 ;;  counter         1   16[COMRAM] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  2   12[COMRAM] int 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7313 ;;      Params:         4       0       0       0       0       0       0       0       0
  7314 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7316 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7317 ;;Total ram usage:        8 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 2
  7320 ;; This function calls:
  7321 ;;		Nothing
  7322 ;; This function is called by:
  7323 ;;		_efgtoa
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text24
  7328  003314                     __ptext24:
  7329                           	callstack 0
  7330  003314                     ___awdiv:
  7331                           	callstack 24
  7332  003314  0E00               	movlw	0
  7333  003316  6E12               	movwf	___awdiv@sign^0,c
  7334  003318  BE10               	btfsc	(___awdiv@divisor+1)^0,7,c
  7335  00331A  EF93  F019         	goto	u6030
  7336  00331E  EF91  F019         	goto	u6031
  7337  003322                     u6031:
  7338  003322  EF99  F019         	goto	l4524
  7339  003326                     u6030:
  7340  003326  6C0F               	negf	___awdiv@divisor^0,c
  7341  003328  1E10               	comf	(___awdiv@divisor+1)^0,f,c
  7342  00332A  B0D8               	btfsc	status,0,c
  7343  00332C  2A10               	incf	(___awdiv@divisor+1)^0,f,c
  7344  00332E  0E01               	movlw	1
  7345  003330  6E12               	movwf	___awdiv@sign^0,c
  7346  003332                     l4524:
  7347  003332  BE0E               	btfsc	(___awdiv@dividend+1)^0,7,c
  7348  003334  EFA0  F019         	goto	u6040
  7349  003338  EF9E  F019         	goto	u6041
  7350  00333C                     u6041:
  7351  00333C  EFA6  F019         	goto	l4530
  7352  003340                     u6040:
  7353  003340  6C0D               	negf	___awdiv@dividend^0,c
  7354  003342  1E0E               	comf	(___awdiv@dividend+1)^0,f,c
  7355  003344  B0D8               	btfsc	status,0,c
  7356  003346  2A0E               	incf	(___awdiv@dividend+1)^0,f,c
  7357  003348  0E01               	movlw	1
  7358  00334A  1A12               	xorwf	___awdiv@sign^0,f,c
  7359  00334C                     l4530:
  7360  00334C  0E00               	movlw	0
  7361  00334E  6E14               	movwf	(___awdiv@quotient+1)^0,c
  7362  003350  0E00               	movlw	0
  7363  003352  6E13               	movwf	___awdiv@quotient^0,c
  7364  003354  500F               	movf	___awdiv@divisor^0,w,c
  7365  003356  1010               	iorwf	(___awdiv@divisor+1)^0,w,c
  7366  003358  B4D8               	btfsc	status,2,c
  7367  00335A  EFB1  F019         	goto	u6051
  7368  00335E  EFB3  F019         	goto	u6050
  7369  003362                     u6051:
  7370  003362  EFDB  F019         	goto	l4552
  7371  003366                     u6050:
  7372  003366  0E01               	movlw	1
  7373  003368  6E11               	movwf	___awdiv@counter^0,c
  7374  00336A  EFBB  F019         	goto	l4538
  7375  00336E                     l4536:
  7376  00336E  90D8               	bcf	status,0,c
  7377  003370  360F               	rlcf	___awdiv@divisor^0,f,c
  7378  003372  3610               	rlcf	(___awdiv@divisor+1)^0,f,c
  7379  003374  2A11               	incf	___awdiv@counter^0,f,c
  7380  003376                     l4538:
  7381  003376  AE10               	btfss	(___awdiv@divisor+1)^0,7,c
  7382  003378  EFC0  F019         	goto	u6061
  7383  00337C  EFC2  F019         	goto	u6060
  7384  003380                     u6061:
  7385  003380  EFB7  F019         	goto	l4536
  7386  003384                     u6060:
  7387  003384                     l4540:
  7388  003384  90D8               	bcf	status,0,c
  7389  003386  3613               	rlcf	___awdiv@quotient^0,f,c
  7390  003388  3614               	rlcf	(___awdiv@quotient+1)^0,f,c
  7391  00338A  500F               	movf	___awdiv@divisor^0,w,c
  7392  00338C  5C0D               	subwf	___awdiv@dividend^0,w,c
  7393  00338E  5010               	movf	(___awdiv@divisor+1)^0,w,c
  7394  003390  580E               	subwfb	(___awdiv@dividend+1)^0,w,c
  7395  003392  A0D8               	btfss	status,0,c
  7396  003394  EFCE  F019         	goto	u6071
  7397  003398  EFD0  F019         	goto	u6070
  7398  00339C                     u6071:
  7399  00339C  EFD5  F019         	goto	l4548
  7400  0033A0                     u6070:
  7401  0033A0  500F               	movf	___awdiv@divisor^0,w,c
  7402  0033A2  5E0D               	subwf	___awdiv@dividend^0,f,c
  7403  0033A4  5010               	movf	(___awdiv@divisor+1)^0,w,c
  7404  0033A6  5A0E               	subwfb	(___awdiv@dividend+1)^0,f,c
  7405  0033A8  8013               	bsf	___awdiv@quotient^0,0,c
  7406  0033AA                     l4548:
  7407  0033AA  90D8               	bcf	status,0,c
  7408  0033AC  3210               	rrcf	(___awdiv@divisor+1)^0,f,c
  7409  0033AE  320F               	rrcf	___awdiv@divisor^0,f,c
  7410  0033B0  2E11               	decfsz	___awdiv@counter^0,f,c
  7411  0033B2  EFC2  F019         	goto	l4540
  7412  0033B6                     l4552:
  7413  0033B6  5012               	movf	___awdiv@sign^0,w,c
  7414  0033B8  B4D8               	btfsc	status,2,c
  7415  0033BA  EFE1  F019         	goto	u6081
  7416  0033BE  EFE3  F019         	goto	u6080
  7417  0033C2                     u6081:
  7418  0033C2  EFE7  F019         	goto	l4556
  7419  0033C6                     u6080:
  7420  0033C6  6C13               	negf	___awdiv@quotient^0,c
  7421  0033C8  1E14               	comf	(___awdiv@quotient+1)^0,f,c
  7422  0033CA  B0D8               	btfsc	status,0,c
  7423  0033CC  2A14               	incf	(___awdiv@quotient+1)^0,f,c
  7424  0033CE                     l4556:
  7425  0033CE  C013  F00D         	movff	___awdiv@quotient,?___awdiv
  7426  0033D2  C014  F00E         	movff	___awdiv@quotient+1,?___awdiv+1
  7427  0033D6  0012               	return		;funcret
  7428  0033D8                     __end_of___awdiv:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function _atoi *****************
  7432 ;; Defined at:
  7433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  s               2   19[COMRAM] PTR const unsigned char 
  7436 ;;		 -> STR_2(6), 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  n               2   32[COMRAM] int 
  7439 ;;  neg             2   25[COMRAM] int 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2   19[COMRAM] int 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7449 ;;      Params:         2       0       0       0       0       0       0       0       0
  7450 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7451 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7452 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7453 ;;Total ram usage:       15 bytes
  7454 ;; Hardware stack levels used: 1
  7455 ;; Hardware stack levels required when called: 3
  7456 ;; This function calls:
  7457 ;;		___wmul
  7458 ;;		_isdigit
  7459 ;;		_isspace
  7460 ;; This function is called by:
  7461 ;;		_vfpfcnvrt
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text25
  7466  002BD8                     __ptext25:
  7467                           	callstack 0
  7468  002BD8                     _atoi:
  7469                           	callstack 24
  7470  002BD8  0E00               	movlw	0
  7471  002BDA  6E22               	movwf	(atoi@n+1)^0,c
  7472  002BDC  0E00               	movlw	0
  7473  002BDE  6E21               	movwf	atoi@n^0,c
  7474  002BE0  0E00               	movlw	0
  7475  002BE2  6E1B               	movwf	(atoi@neg+1)^0,c
  7476  002BE4  0E00               	movlw	0
  7477  002BE6  6E1A               	movwf	atoi@neg^0,c
  7478  002BE8  EFF8  F015         	goto	l5100
  7479  002BEC                     l5098:
  7480  002BEC  4A14               	infsnz	atoi@s^0,f,c
  7481  002BEE  2A15               	incf	(atoi@s+1)^0,f,c
  7482  002BF0                     l5100:
  7483  002BF0  0E01               	movlw	1
  7484  002BF2  6E20               	movwf	_atoi$992^0,c
  7485  002BF4  C014  FFF6         	movff	atoi@s,tblptrl
  7486  002BF8  C015  FFF7         	movff	atoi@s+1,tblptrh
  7487  002BFC                     	if	0	;tblptru may be non-zero
  7488  002BFC                     	endif
  7489  002BFC                     	if	0	;tblptru may be non-zero
  7490  002BFC                     	endif
  7491  002BFC  0008               	tblrd		*
  7492  002BFE  50F5               	movf	tablat,w,c
  7493  002C00  0A20               	xorlw	32
  7494  002C02  B4D8               	btfsc	status,2,c
  7495  002C04  EF06  F016         	goto	u7151
  7496  002C08  EF08  F016         	goto	u7150
  7497  002C0C                     u7151:
  7498  002C0C  EF25  F016         	goto	l5108
  7499  002C10                     u7150:
  7500  002C10  0EF7               	movlw	247
  7501  002C12  6E16               	movwf	??_atoi^0,c
  7502  002C14  0EFF               	movlw	255
  7503  002C16  6E17               	movwf	(??_atoi+1)^0,c
  7504  002C18  C014  FFF6         	movff	atoi@s,tblptrl
  7505  002C1C  C015  FFF7         	movff	atoi@s+1,tblptrh
  7506  002C20                     	if	0	;tblptru may be non-zero
  7507  002C20                     	endif
  7508  002C20                     	if	0	;tblptru may be non-zero
  7509  002C20                     	endif
  7510  002C20  0008               	tblrd		*
  7511  002C22  50F5               	movf	tablat,w,c
  7512  002C24  6E18               	movwf	(??_atoi+2)^0,c
  7513  002C26  6A19               	clrf	(??_atoi+3)^0,c
  7514  002C28  5016               	movf	??_atoi^0,w,c
  7515  002C2A  2618               	addwf	(??_atoi+2)^0,f,c
  7516  002C2C  5017               	movf	(??_atoi+1)^0,w,c
  7517  002C2E  2219               	addwfc	(??_atoi+3)^0,f,c
  7518  002C30  5019               	movf	(??_atoi+3)^0,w,c
  7519  002C32  E109               	bnz	u7160
  7520  002C34  0E05               	movlw	5
  7521  002C36  5C18               	subwf	(??_atoi+2)^0,w,c
  7522  002C38  A0D8               	btfss	status,0,c
  7523  002C3A  EF21  F016         	goto	u7161
  7524  002C3E  EF23  F016         	goto	u7160
  7525  002C42                     u7161:
  7526  002C42  EF25  F016         	goto	l5108
  7527  002C46                     u7160:
  7528  002C46  0E00               	movlw	0
  7529  002C48  6E20               	movwf	_atoi$992^0,c
  7530  002C4A                     l5108:
  7531  002C4A  C020  F01C         	movff	_atoi$992,_atoi$991
  7532  002C4E  6A1D               	clrf	(_atoi$991+1)^0,c
  7533  002C50  501C               	movf	_atoi$991^0,w,c
  7534  002C52  101D               	iorwf	(_atoi$991+1)^0,w,c
  7535  002C54  A4D8               	btfss	status,2,c
  7536  002C56  EF2F  F016         	goto	u7171
  7537  002C5A  EF31  F016         	goto	u7170
  7538  002C5E                     u7171:
  7539  002C5E  EFF6  F015         	goto	l5098
  7540  002C62                     u7170:
  7541  002C62  EF3B  F016         	goto	l5118
  7542  002C66                     l5114:
  7543  002C66  0E00               	movlw	0
  7544  002C68  6E1B               	movwf	(atoi@neg+1)^0,c
  7545  002C6A  0E01               	movlw	1
  7546  002C6C  6E1A               	movwf	atoi@neg^0,c
  7547  002C6E                     l5116:
  7548  002C6E  4A14               	infsnz	atoi@s^0,f,c
  7549  002C70  2A15               	incf	(atoi@s+1)^0,f,c
  7550  002C72  EF70  F016         	goto	l5124
  7551  002C76                     l5118:
  7552  002C76  C014  FFF6         	movff	atoi@s,tblptrl
  7553  002C7A  C015  FFF7         	movff	atoi@s+1,tblptrh
  7554  002C7E                     	if	0	;tblptru may be non-zero
  7555  002C7E                     	endif
  7556  002C7E                     	if	0	;tblptru may be non-zero
  7557  002C7E                     	endif
  7558  002C7E  0008               	tblrd		*
  7559  002C80  50F5               	movf	tablat,w,c
  7560  002C82  6E16               	movwf	??_atoi^0,c
  7561  002C84  6A17               	clrf	(??_atoi+1)^0,c
  7562                           
  7563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7564                           ; Switch size 1, requested type "simple"
  7565                           ; Number of cases is 1, Range of values is 0 to 0
  7566                           ; switch strategies available:
  7567                           ; Name         Instructions Cycles
  7568                           ; simple_byte            4     3 (average)
  7569                           ;	Chosen strategy is simple_byte
  7570  002C86  5017               	movf	(??_atoi+1)^0,w,c
  7571  002C88  0A00               	xorlw	0	; case 0
  7572  002C8A  B4D8               	btfsc	status,2,c
  7573  002C8C  EF4A  F016         	goto	l5350
  7574  002C90  EF70  F016         	goto	l5124
  7575  002C94                     l5350:
  7576                           
  7577                           ; Switch size 1, requested type "simple"
  7578                           ; Number of cases is 2, Range of values is 43 to 45
  7579                           ; switch strategies available:
  7580                           ; Name         Instructions Cycles
  7581                           ; simple_byte            7     4 (average)
  7582                           ;	Chosen strategy is simple_byte
  7583  002C94  5016               	movf	??_atoi^0,w,c
  7584  002C96  0A2B               	xorlw	43	; case 43
  7585  002C98  B4D8               	btfsc	status,2,c
  7586  002C9A  EF37  F016         	goto	l5116
  7587  002C9E  0A06               	xorlw	6	; case 45
  7588  002CA0  B4D8               	btfsc	status,2,c
  7589  002CA2  EF33  F016         	goto	l5114
  7590  002CA6  EF70  F016         	goto	l5124
  7591  002CAA                     l5120:
  7592  002CAA  C021  F00D         	movff	atoi@n,___wmul@multiplier
  7593  002CAE  C022  F00E         	movff	atoi@n+1,___wmul@multiplier+1
  7594  002CB2  0E00               	movlw	0
  7595  002CB4  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  7596  002CB6  0E0A               	movlw	10
  7597  002CB8  6E0F               	movwf	___wmul@multiplicand^0,c
  7598  002CBA  EC57  F01D         	call	___wmul	;wreg free
  7599  002CBE  C014  FFF6         	movff	atoi@s,tblptrl
  7600  002CC2  C015  FFF7         	movff	atoi@s+1,tblptrh
  7601  002CC6                     	if	0	;tblptru may be non-zero
  7602  002CC6                     	endif
  7603  002CC6                     	if	0	;tblptru may be non-zero
  7604  002CC6                     	endif
  7605  002CC6  0008               	tblrd		*
  7606  002CC8  50F5               	movf	tablat,w,c
  7607  002CCA  5E0D               	subwf	?___wmul^0,f,c
  7608  002CCC  0E00               	movlw	0
  7609  002CCE  5A0E               	subwfb	(?___wmul+1)^0,f,c
  7610  002CD0  0E30               	movlw	48
  7611  002CD2  240D               	addwf	?___wmul^0,w,c
  7612  002CD4  6E21               	movwf	atoi@n^0,c
  7613  002CD6  0E00               	movlw	0
  7614  002CD8  200E               	addwfc	(?___wmul+1)^0,w,c
  7615  002CDA  6E22               	movwf	(atoi@n+1)^0,c
  7616  002CDC  EF37  F016         	goto	l5116
  7617  002CE0                     l5124:
  7618  002CE0  0ED0               	movlw	208
  7619  002CE2  6E16               	movwf	??_atoi^0,c
  7620  002CE4  0EFF               	movlw	255
  7621  002CE6  6E17               	movwf	(??_atoi+1)^0,c
  7622  002CE8  C014  FFF6         	movff	atoi@s,tblptrl
  7623  002CEC  C015  FFF7         	movff	atoi@s+1,tblptrh
  7624  002CF0                     	if	0	;tblptru may be non-zero
  7625  002CF0                     	endif
  7626  002CF0                     	if	0	;tblptru may be non-zero
  7627  002CF0                     	endif
  7628  002CF0  0008               	tblrd		*
  7629  002CF2  50F5               	movf	tablat,w,c
  7630  002CF4  6E18               	movwf	(??_atoi+2)^0,c
  7631  002CF6  6A19               	clrf	(??_atoi+3)^0,c
  7632  002CF8  5016               	movf	??_atoi^0,w,c
  7633  002CFA  2618               	addwf	(??_atoi+2)^0,f,c
  7634  002CFC  5017               	movf	(??_atoi+1)^0,w,c
  7635  002CFE  2219               	addwfc	(??_atoi+3)^0,f,c
  7636  002D00  5019               	movf	(??_atoi+3)^0,w,c
  7637  002D02  E10A               	bnz	u7180
  7638  002D04  0E0A               	movlw	10
  7639  002D06  5C18               	subwf	(??_atoi+2)^0,w,c
  7640  002D08  A0D8               	btfss	status,0,c
  7641  002D0A  EF89  F016         	goto	u7181
  7642  002D0E  EF8C  F016         	goto	u7180
  7643  002D12                     u7181:
  7644  002D12  0E01               	movlw	1
  7645  002D14  EF8D  F016         	goto	u7190
  7646  002D18                     u7180:
  7647  002D18  0E00               	movlw	0
  7648  002D1A                     u7190:
  7649  002D1A  6E1E               	movwf	_atoi$993^0,c
  7650  002D1C  6A1F               	clrf	(_atoi$993+1)^0,c
  7651  002D1E  501E               	movf	_atoi$993^0,w,c
  7652  002D20  101F               	iorwf	(_atoi$993+1)^0,w,c
  7653  002D22  A4D8               	btfss	status,2,c
  7654  002D24  EF96  F016         	goto	u7201
  7655  002D28  EF98  F016         	goto	u7200
  7656  002D2C                     u7201:
  7657  002D2C  EF55  F016         	goto	l5120
  7658  002D30                     u7200:
  7659  002D30  501A               	movf	atoi@neg^0,w,c
  7660  002D32  101B               	iorwf	(atoi@neg+1)^0,w,c
  7661  002D34  A4D8               	btfss	status,2,c
  7662  002D36  EF9F  F016         	goto	u7211
  7663  002D3A  EFA1  F016         	goto	u7210
  7664  002D3E                     u7211:
  7665  002D3E  EFAF  F016         	goto	l987
  7666  002D42                     u7210:
  7667  002D42  C021  F016         	movff	atoi@n,??_atoi
  7668  002D46  C022  F017         	movff	atoi@n+1,??_atoi+1
  7669  002D4A  1E16               	comf	??_atoi^0,f,c
  7670  002D4C  1E17               	comf	(??_atoi+1)^0,f,c
  7671  002D4E  4A16               	infsnz	??_atoi^0,f,c
  7672  002D50  2A17               	incf	(??_atoi+1)^0,f,c
  7673  002D52  C016  F014         	movff	??_atoi,?_atoi
  7674  002D56  C017  F015         	movff	??_atoi+1,?_atoi+1
  7675  002D5A  EFB3  F016         	goto	l990
  7676  002D5E                     l987:
  7677  002D5E  C021  F014         	movff	atoi@n,?_atoi
  7678  002D62  C022  F015         	movff	atoi@n+1,?_atoi+1
  7679  002D66                     l990:
  7680  002D66  0012               	return		;funcret
  7681  002D68                     __end_of_atoi:
  7682                           	callstack 0
  7683                           
  7684 ;; *************** function _isspace *****************
  7685 ;; Defined at:
  7686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  c               2   12[COMRAM] int 
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;		None
  7691 ;; Return value:  Size  Location     Type
  7692 ;;                  2   12[COMRAM] int 
  7693 ;; Registers used:
  7694 ;;		wreg, status,2, status,0
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7700 ;;      Params:         2       0       0       0       0       0       0       0       0
  7701 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7702 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7703 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7704 ;;Total ram usage:        7 bytes
  7705 ;; Hardware stack levels used: 1
  7706 ;; Hardware stack levels required when called: 2
  7707 ;; This function calls:
  7708 ;;		Nothing
  7709 ;; This function is called by:
  7710 ;;		_atoi
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text26
  7715  003880                     __ptext26:
  7716                           	callstack 0
  7717  003880                     _isspace:
  7718                           	callstack 24
  7719  003880  0E01               	movlw	1
  7720  003882  6E13               	movwf	_isspace$1022^0,c
  7721  003884  0E20               	movlw	32
  7722  003886  180D               	xorwf	isspace@c^0,w,c
  7723  003888  100E               	iorwf	(isspace@c+1)^0,w,c
  7724  00388A  B4D8               	btfsc	status,2,c
  7725  00388C  EF4A  F01C         	goto	u6591
  7726  003890  EF4C  F01C         	goto	u6590
  7727  003894                     u6591:
  7728  003894  EF65  F01C         	goto	l4784
  7729  003898                     u6590:
  7730  003898  0EF7               	movlw	247
  7731  00389A  6E0F               	movwf	??_isspace^0,c
  7732  00389C  0EFF               	movlw	255
  7733  00389E  6E10               	movwf	(??_isspace+1)^0,c
  7734  0038A0  C00D  F011         	movff	isspace@c,??_isspace+2
  7735  0038A4  C00E  F012         	movff	isspace@c+1,??_isspace+3
  7736  0038A8  500F               	movf	??_isspace^0,w,c
  7737  0038AA  2611               	addwf	(??_isspace+2)^0,f,c
  7738  0038AC  5010               	movf	(??_isspace+1)^0,w,c
  7739  0038AE  2212               	addwfc	(??_isspace+3)^0,f,c
  7740  0038B0  5012               	movf	(??_isspace+3)^0,w,c
  7741  0038B2  E109               	bnz	u6600
  7742  0038B4  0E05               	movlw	5
  7743  0038B6  5C11               	subwf	(??_isspace+2)^0,w,c
  7744  0038B8  A0D8               	btfss	status,0,c
  7745  0038BA  EF61  F01C         	goto	u6601
  7746  0038BE  EF63  F01C         	goto	u6600
  7747  0038C2                     u6601:
  7748  0038C2  EF65  F01C         	goto	l4784
  7749  0038C6                     u6600:
  7750  0038C6  0E00               	movlw	0
  7751  0038C8  6E13               	movwf	_isspace$1022^0,c
  7752  0038CA                     l4784:
  7753  0038CA  C013  F00D         	movff	_isspace$1022,?_isspace
  7754  0038CE  6A0E               	clrf	(?_isspace+1)^0,c
  7755  0038D0  0012               	return		;funcret
  7756  0038D2                     __end_of_isspace:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function _isdigit *****************
  7760 ;; Defined at:
  7761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  c               2   12[COMRAM] int 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  2   12[COMRAM] int 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7775 ;;      Params:         2       0       0       0       0       0       0       0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7777 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7778 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7779 ;;Total ram usage:        6 bytes
  7780 ;; Hardware stack levels used: 1
  7781 ;; Hardware stack levels required when called: 2
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_vfpfcnvrt
  7786 ;;		_atoi
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text27
  7791  003A1A                     __ptext27:
  7792                           	callstack 0
  7793  003A1A                     _isdigit:
  7794                           	callstack 25
  7795  003A1A  0ED0               	movlw	208
  7796  003A1C  6E0F               	movwf	??_isdigit^0,c
  7797  003A1E  0EFF               	movlw	255
  7798  003A20  6E10               	movwf	(??_isdigit+1)^0,c
  7799  003A22  C00D  F011         	movff	isdigit@c,??_isdigit+2
  7800  003A26  C00E  F012         	movff	isdigit@c+1,??_isdigit+3
  7801  003A2A  500F               	movf	??_isdigit^0,w,c
  7802  003A2C  2611               	addwf	(??_isdigit+2)^0,f,c
  7803  003A2E  5010               	movf	(??_isdigit+1)^0,w,c
  7804  003A30  2212               	addwfc	(??_isdigit+3)^0,f,c
  7805  003A32  5012               	movf	(??_isdigit+3)^0,w,c
  7806  003A34  E10A               	bnz	u6570
  7807  003A36  0E0A               	movlw	10
  7808  003A38  5C11               	subwf	(??_isdigit+2)^0,w,c
  7809  003A3A  A0D8               	btfss	status,0,c
  7810  003A3C  EF22  F01D         	goto	u6571
  7811  003A40  EF25  F01D         	goto	u6570
  7812  003A44                     u6571:
  7813  003A44  0E01               	movlw	1
  7814  003A46  EF26  F01D         	goto	u6580
  7815  003A4A                     u6570:
  7816  003A4A  0E00               	movlw	0
  7817  003A4C                     u6580:
  7818  003A4C  6E0D               	movwf	?_isdigit^0,c
  7819  003A4E  6A0E               	clrf	(?_isdigit+1)^0,c
  7820  003A50  0012               	return		;funcret
  7821  003A52                     __end_of_isdigit:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function ___wmul *****************
  7825 ;; Defined at:
  7826 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  multiplier      2   12[COMRAM] unsigned int 
  7829 ;;  multiplicand    2   14[COMRAM] unsigned int 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  product         2   16[COMRAM] unsigned int 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  2   12[COMRAM] unsigned int 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0, prodl, prodh
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7841 ;;      Params:         4       0       0       0       0       0       0       0       0
  7842 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7844 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7845 ;;Total ram usage:        6 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_main
  7852 ;;		_atoi
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text28
  7857  003AAE                     __ptext28:
  7858                           	callstack 0
  7859  003AAE                     ___wmul:
  7860                           	callstack 24
  7861  003AAE  500D               	movf	___wmul@multiplier^0,w,c
  7862  003AB0  020F               	mulwf	___wmul@multiplicand^0,c
  7863  003AB2  CFF3 F011          	movff	prodl,___wmul@product
  7864  003AB6  CFF4 F012          	movff	prodh,___wmul@product+1
  7865  003ABA  500D               	movf	___wmul@multiplier^0,w,c
  7866  003ABC  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  7867  003ABE  50F3               	movf	243,w,c
  7868  003AC0  2612               	addwf	(___wmul@product+1)^0,f,c
  7869  003AC2  500E               	movf	(___wmul@multiplier+1)^0,w,c
  7870  003AC4  020F               	mulwf	___wmul@multiplicand^0,c
  7871  003AC6  50F3               	movf	243,w,c
  7872  003AC8  2612               	addwf	(___wmul@product+1)^0,f,c
  7873  003ACA  C011  F00D         	movff	___wmul@product,?___wmul
  7874  003ACE  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  7875  003AD2  0012               	return		;funcret
  7876  003AD4                     __end_of___wmul:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _setupADC *****************
  7880 ;; Defined at:
  7881 ;;		line 22 in file "ADC_LM35_lcd.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 2
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text29
  7910  003A84                     __ptext29:
  7911                           	callstack 0
  7912  003A84                     _setupADC:
  7913                           	callstack 28
  7914  003A84                     
  7915                           ;ADC_LM35_lcd.c: 24: 
  7916  003A84  0E07               	movlw	7
  7917  003A86  6E92               	movwf	146,c	;volatile
  7918                           
  7919                           ;ADC_LM35_lcd.c: 26: 
  7920  003A88  0E0C               	movlw	12
  7921  003A8A  6EC1               	movwf	193,c	;volatile
  7922                           
  7923                           ;ADC_LM35_lcd.c: 28:     }
  7924  003A8C  50C0               	movf	192,w,c	;volatile
  7925  003A8E  0BF8               	andlw	-8
  7926  003A90  0906               	iorlw	6
  7927  003A92  6EC0               	movwf	192,c	;volatile
  7928                           
  7929                           ;ADC_LM35_lcd.c: 29: 
  7930  003A94  50C0               	movf	192,w,c	;volatile
  7931  003A96  0BC7               	andlw	-57
  7932  003A98  0920               	iorlw	32
  7933  003A9A  6EC0               	movwf	192,c	;volatile
  7934  003A9C                     
  7935                           ;ADC_LM35_lcd.c: 30:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  7936  003A9C  8EC0               	bsf	192,7,c	;volatile
  7937                           
  7938                           ;ADC_LM35_lcd.c: 32: 
  7939  003A9E  0E00               	movlw	0
  7940  003AA0  6EC2               	movwf	194,c	;volatile
  7941                           
  7942                           ;ADC_LM35_lcd.c: 33: 
  7943  003AA2  50C2               	movf	194,w,c	;volatile
  7944  003AA4  0BC3               	andlw	-61
  7945  003AA6  0908               	iorlw	8
  7946  003AA8  6EC2               	movwf	194,c	;volatile
  7947  003AAA                     
  7948                           ;ADC_LM35_lcd.c: 34: 
  7949  003AAA  80C2               	bsf	194,0,c	;volatile
  7950  003AAC  0012               	return		;funcret
  7951  003AAE                     __end_of_setupADC:
  7952                           	callstack 0
  7953                           
  7954 ;; *************** function _limpa_lcd *****************
  7955 ;; Defined at:
  7956 ;;		line 26 in file "./lcd.intermed.h"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;		None
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7974 ;;Total ram usage:        0 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; Hardware stack levels required when called: 3
  7977 ;; This function calls:
  7978 ;;		_comando_lcd
  7979 ;; This function is called by:
  7980 ;;		_main
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text30
  7985  003B08                     __ptext30:
  7986                           	callstack 0
  7987  003B08                     _limpa_lcd:
  7988                           	callstack 27
  7989  003B08                     
  7990                           ;./lcd.intermed.h: 28:     comando_lcd(1);
  7991  003B08  0E00               	movlw	0
  7992  003B0A  6E0E               	movwf	(comando_lcd@comando+1)^0,c
  7993  003B0C  0E01               	movlw	1
  7994  003B0E  6E0D               	movwf	comando_lcd@comando^0,c
  7995  003B10  EC6A  F01D         	call	_comando_lcd	;wreg free
  7996  003B14  0012               	return		;funcret
  7997  003B16                     __end_of_limpa_lcd:
  7998                           	callstack 0
  7999                           
  8000 ;; *************** function _comando_lcd *****************
  8001 ;; Defined at:
  8002 ;;		line 7 in file "./lcd.intermed.h"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;  comando         2   12[COMRAM] unsigned int 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8016 ;;      Params:         2       0       0       0       0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8018 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8019 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8020 ;;Total ram usage:        3 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 2
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_limpa_lcd
  8027 ;;		_main
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text31
  8032  003AD4                     __ptext31:
  8033                           	callstack 0
  8034  003AD4                     _comando_lcd:
  8035                           	callstack 27
  8036  003AD4                     
  8037                           ;./lcd.intermed.h: 7: void comando_lcd(unsigned int comando);./lcd.intermed.h: 8: {;./lc
      +                          d.intermed.h: 9:     PORTEbits.RE2 = 0;
  8038  003AD4  9484               	bcf	132,2,c	;volatile
  8039                           
  8040                           ;./lcd.intermed.h: 10:     PORTEbits.RE1 = 1;
  8041  003AD6  8284               	bsf	132,1,c	;volatile
  8042                           
  8043                           ;./lcd.intermed.h: 11:     PORTD = comando;
  8044  003AD8  C00D  FF83         	movff	comando_lcd@comando,3971	;volatile
  8045  003ADC                     
  8046                           ;./lcd.intermed.h: 12:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8047  003ADC  0E03               	movlw	3
  8048  003ADE  6E0F               	movwf	??_comando_lcd^0,c
  8049  003AE0  0E98               	movlw	152
  8050  003AE2                     u7517:
  8051  003AE2  2EE8               	decfsz	wreg,f,c
  8052  003AE4  D7FE               	bra	u7517
  8053  003AE6  2E0F               	decfsz	??_comando_lcd^0,f,c
  8054  003AE8  D7FC               	bra	u7517
  8055  003AEA                     
  8056                           ;./lcd.intermed.h: 13:     PORTEbits.RE1 = 0;
  8057  003AEA  9284               	bcf	132,1,c	;volatile
  8058  003AEC  0012               	return		;funcret
  8059  003AEE                     __end_of_comando_lcd:
  8060                           	callstack 0
  8061                           
  8062 ;; *************** function _imprime_lcd *****************
  8063 ;; Defined at:
  8064 ;;		line 31 in file "./lcd.intermed.h"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  frase           2   16[COMRAM] PTR unsigned char 
  8067 ;;		 -> STR_3(15), temperature(8), STR_1(12), 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  indice          2   23[COMRAM] int 
  8070 ;;  tamanho         2   21[COMRAM] int 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8080 ;;      Params:         2       0       0       0       0       0       0       0       0
  8081 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8082 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8083 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8084 ;;Total ram usage:        9 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 3
  8087 ;; This function calls:
  8088 ;;		_dado_lcd
  8089 ;;		_strlen
  8090 ;; This function is called by:
  8091 ;;		_main
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text32
  8096  003694                     __ptext32:
  8097                           	callstack 0
  8098  003694                     _imprime_lcd:
  8099                           	callstack 27
  8100  003694                     
  8101                           ;./lcd.intermed.h: 31: void imprime_lcd(char frase[]);./lcd.intermed.h: 32: {;./lcd.inte
      +                          rmed.h: 33: int indice = 0;
  8102  003694  0E00               	movlw	0
  8103  003696  6E19               	movwf	(imprime_lcd@indice+1)^0,c
  8104  003698  0E00               	movlw	0
  8105  00369A  6E18               	movwf	imprime_lcd@indice^0,c
  8106  00369C                     
  8107                           ;./lcd.intermed.h: 34: int tamanho = strlen(frase);
  8108  00369C  C011  F00D         	movff	imprime_lcd@frase,strlen@s
  8109  0036A0  C012  F00E         	movff	imprime_lcd@frase+1,strlen@s+1
  8110  0036A4  EC69  F01C         	call	_strlen	;wreg free
  8111  0036A8  C00D  F016         	movff	?_strlen,imprime_lcd@tamanho
  8112  0036AC  C00E  F017         	movff	?_strlen+1,imprime_lcd@tamanho+1
  8113                           
  8114                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8115  0036B0  EF78  F01B         	goto	l5282
  8116  0036B4                     l5278:
  8117                           
  8118                           ;./lcd.intermed.h: 36:     {;./lcd.intermed.h: 37: dado_lcd(frase[indice]);
  8119  0036B4  5018               	movf	imprime_lcd@indice^0,w,c
  8120  0036B6  2411               	addwf	imprime_lcd@frase^0,w,c
  8121  0036B8  6E13               	movwf	??_imprime_lcd^0,c
  8122  0036BA  5019               	movf	(imprime_lcd@indice+1)^0,w,c
  8123  0036BC  2012               	addwfc	(imprime_lcd@frase+1)^0,w,c
  8124  0036BE  6E14               	movwf	(??_imprime_lcd+1)^0,c
  8125  0036C0  C013  FFF6         	movff	??_imprime_lcd,tblptrl
  8126  0036C4  C014  FFF7         	movff	??_imprime_lcd+1,tblptrh
  8127  0036C8  6AF8               	clrf	tblptru,c
  8128  0036CA  0E07               	movlw	(high __ramtop+-1)
  8129  0036CC  64F7               	cpfsgt	tblptrh,c
  8130  0036CE  D003               	bra	u7477
  8131  0036D0  0008               	tblrd		*
  8132  0036D2  50F5               	movf	tablat,w,c
  8133  0036D4  D005               	bra	u7470
  8134  0036D6                     u7477:
  8135  0036D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8136  0036DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8137  0036DE  50E7               	movf	indf1,w,c
  8138  0036E0                     u7470:
  8139  0036E0  6E15               	movwf	(??_imprime_lcd+2)^0,c
  8140  0036E2  5015               	movf	(??_imprime_lcd+2)^0,w,c
  8141  0036E4  6E0D               	movwf	dado_lcd@dado^0,c
  8142  0036E6  6A0E               	clrf	(dado_lcd@dado+1)^0,c
  8143  0036E8  EC77  F01D         	call	_dado_lcd	;wreg free
  8144  0036EC                     
  8145                           ;./lcd.intermed.h: 38: indice++;
  8146  0036EC  4A18               	infsnz	imprime_lcd@indice^0,f,c
  8147  0036EE  2A19               	incf	(imprime_lcd@indice+1)^0,f,c
  8148  0036F0                     l5282:
  8149                           
  8150                           ;./lcd.intermed.h: 35: while(indice<tamanho)
  8151  0036F0  5016               	movf	imprime_lcd@tamanho^0,w,c
  8152  0036F2  5C18               	subwf	imprime_lcd@indice^0,w,c
  8153  0036F4  5019               	movf	(imprime_lcd@indice+1)^0,w,c
  8154  0036F6  0A80               	xorlw	128
  8155  0036F8  6E13               	movwf	??_imprime_lcd^0,c
  8156  0036FA  5017               	movf	(imprime_lcd@tamanho+1)^0,w,c
  8157  0036FC  0A80               	xorlw	128
  8158  0036FE  5813               	subwfb	??_imprime_lcd^0,w,c
  8159  003700  A0D8               	btfss	status,0,c
  8160  003702  EF85  F01B         	goto	u7481
  8161  003706  EF87  F01B         	goto	u7480
  8162  00370A                     u7481:
  8163  00370A  EF5A  F01B         	goto	l5278
  8164  00370E                     u7480:
  8165  00370E  0012               	return		;funcret
  8166  003710                     __end_of_imprime_lcd:
  8167                           	callstack 0
  8168                           
  8169 ;; *************** function _strlen *****************
  8170 ;; Defined at:
  8171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8174 ;;		 -> dbuf(80), STR_3(15), temperature(8), STR_1(12), 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  a               2   14[COMRAM] PTR const unsigned char 
  8177 ;;		 -> dbuf(80), STR_3(15), temperature(8), STR_1(12), 
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  2   12[COMRAM] unsigned int 
  8180 ;; Registers used:
  8181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8187 ;;      Params:         2       0       0       0       0       0       0       0       0
  8188 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8190 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8191 ;;Total ram usage:        4 bytes
  8192 ;; Hardware stack levels used: 1
  8193 ;; Hardware stack levels required when called: 2
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_imprime_lcd
  8198 ;;		_pad
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text33
  8203  0038D2                     __ptext33:
  8204                           	callstack 0
  8205  0038D2                     _strlen:
  8206                           	callstack 23
  8207  0038D2  C00D  F00F         	movff	strlen@s,strlen@a
  8208  0038D6  C00E  F010         	movff	strlen@s+1,strlen@a+1
  8209  0038DA  EF71  F01C         	goto	l4016
  8210  0038DE                     l4014:
  8211  0038DE  4A0D               	infsnz	strlen@s^0,f,c
  8212  0038E0  2A0E               	incf	(strlen@s+1)^0,f,c
  8213  0038E2                     l4016:
  8214  0038E2  C00D  FFF6         	movff	strlen@s,tblptrl
  8215  0038E6  C00E  FFF7         	movff	strlen@s+1,tblptrh
  8216  0038EA  6AF8               	clrf	tblptru,c
  8217  0038EC  0E07               	movlw	(high __ramtop+-1)
  8218  0038EE  64F7               	cpfsgt	tblptrh,c
  8219  0038F0  D003               	bra	u5177
  8220  0038F2  0008               	tblrd		*
  8221  0038F4  50F5               	movf	tablat,w,c
  8222  0038F6  D005               	bra	u5170
  8223  0038F8                     u5177:
  8224  0038F8  CFF6 FFE1          	movff	tblptrl,fsr1l
  8225  0038FC  CFF7 FFE2          	movff	tblptrh,fsr1h
  8226  003900  50E7               	movf	indf1,w,c
  8227  003902                     u5170:
  8228  003902  0900               	iorlw	0
  8229  003904  A4D8               	btfss	status,2,c
  8230  003906  EF87  F01C         	goto	u5181
  8231  00390A  EF89  F01C         	goto	u5180
  8232  00390E                     u5181:
  8233  00390E  EF6F  F01C         	goto	l4014
  8234  003912                     u5180:
  8235  003912  500F               	movf	strlen@a^0,w,c
  8236  003914  5C0D               	subwf	strlen@s^0,w,c
  8237  003916  6E0D               	movwf	?_strlen^0,c
  8238  003918  5010               	movf	(strlen@a+1)^0,w,c
  8239  00391A  580E               	subwfb	(strlen@s+1)^0,w,c
  8240  00391C  6E0E               	movwf	(?_strlen+1)^0,c
  8241  00391E  0012               	return		;funcret
  8242  003920                     __end_of_strlen:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _dado_lcd *****************
  8246 ;; Defined at:
  8247 ;;		line 16 in file "./lcd.intermed.h"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  dado            2   12[COMRAM] unsigned int 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;		None
  8252 ;; Return value:  Size  Location     Type
  8253 ;;                  1    wreg      void 
  8254 ;; Registers used:
  8255 ;;		wreg
  8256 ;; Tracked objects:
  8257 ;;		On entry : 0/0
  8258 ;;		On exit  : 0/0
  8259 ;;		Unchanged: 0/0
  8260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8261 ;;      Params:         2       0       0       0       0       0       0       0       0
  8262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8263 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8264 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8265 ;;Total ram usage:        3 bytes
  8266 ;; Hardware stack levels used: 1
  8267 ;; Hardware stack levels required when called: 2
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_imprime_lcd
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text34
  8276  003AEE                     __ptext34:
  8277                           	callstack 0
  8278  003AEE                     _dado_lcd:
  8279                           	callstack 27
  8280  003AEE                     
  8281                           ;./lcd.intermed.h: 16: void dado_lcd(unsigned int dado);./lcd.intermed.h: 17: {;./lcd.in
      +                          termed.h: 18:     PORTEbits.RE2 = 1;
  8282  003AEE  8484               	bsf	132,2,c	;volatile
  8283                           
  8284                           ;./lcd.intermed.h: 19:     PORTEbits.RE1 = 1;
  8285  003AF0  8284               	bsf	132,1,c	;volatile
  8286                           
  8287                           ;./lcd.intermed.h: 20:     PORTD = dado;
  8288  003AF2  C00D  FF83         	movff	dado_lcd@dado,3971	;volatile
  8289  003AF6                     
  8290                           ;./lcd.intermed.h: 21:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8291  003AF6  0E03               	movlw	3
  8292  003AF8  6E0F               	movwf	??_dado_lcd^0,c
  8293  003AFA  0E98               	movlw	152
  8294  003AFC                     u7527:
  8295  003AFC  2EE8               	decfsz	wreg,f,c
  8296  003AFE  D7FE               	bra	u7527
  8297  003B00  2E0F               	decfsz	??_dado_lcd^0,f,c
  8298  003B02  D7FC               	bra	u7527
  8299  003B04                     
  8300                           ;./lcd.intermed.h: 22:     PORTEbits.RE1 = 0;
  8301  003B04  9284               	bcf	132,1,c	;volatile
  8302  003B06  0012               	return		;funcret
  8303  003B08                     __end_of_dado_lcd:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function ___xxtofl *****************
  8307 ;; Defined at:
  8308 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  sign            1    wreg     unsigned char 
  8311 ;;  val             4   18[COMRAM] long 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  sign            1   26[COMRAM] unsigned char 
  8314 ;;  arg             4   28[COMRAM] unsigned long 
  8315 ;;  exp             1   27[COMRAM] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4   18[COMRAM] unsigned char 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8325 ;;      Params:         4       0       0       0       0       0       0       0       0
  8326 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8327 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8328 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8329 ;;Total ram usage:       14 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 2
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_main
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text35
  8340  002890                     __ptext35:
  8341                           	callstack 0
  8342  002890                     ___xxtofl:
  8343                           	callstack 28
  8344                           
  8345                           ;incstack = 0
  8346                           ;___xxtofl@sign stored from wreg
  8347  002890  6E1B               	movwf	___xxtofl@sign^0,c
  8348  002892  501B               	movf	___xxtofl@sign^0,w,c
  8349  002894  B4D8               	btfsc	status,2,c
  8350  002896  EF4F  F014         	goto	u4931
  8351  00289A  EF51  F014         	goto	u4930
  8352  00289E                     u4931:
  8353  00289E  EF73  F014         	goto	l745
  8354  0028A2                     u4930:
  8355  0028A2  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  8356  0028A4  EF58  F014         	goto	u4940
  8357  0028A8  EF56  F014         	goto	u4941
  8358  0028AC                     u4941:
  8359  0028AC  EF73  F014         	goto	l745
  8360  0028B0                     u4940:
  8361  0028B0  C013  F017         	movff	___xxtofl@val,??___xxtofl
  8362  0028B4  C014  F018         	movff	___xxtofl@val+1,??___xxtofl+1
  8363  0028B8  C015  F019         	movff	___xxtofl@val+2,??___xxtofl+2
  8364  0028BC  C016  F01A         	movff	___xxtofl@val+3,??___xxtofl+3
  8365  0028C0  1E17               	comf	??___xxtofl^0,f,c
  8366  0028C2  1E18               	comf	(??___xxtofl+1)^0,f,c
  8367  0028C4  1E19               	comf	(??___xxtofl+2)^0,f,c
  8368  0028C6  1E1A               	comf	(??___xxtofl+3)^0,f,c
  8369  0028C8  2A17               	incf	??___xxtofl^0,f,c
  8370  0028CA  0E00               	movlw	0
  8371  0028CC  2218               	addwfc	(??___xxtofl+1)^0,f,c
  8372  0028CE  2219               	addwfc	(??___xxtofl+2)^0,f,c
  8373  0028D0  221A               	addwfc	(??___xxtofl+3)^0,f,c
  8374  0028D2  C017  F01D         	movff	??___xxtofl,___xxtofl@arg
  8375  0028D6  C018  F01E         	movff	??___xxtofl+1,___xxtofl@arg+1
  8376  0028DA  C019  F01F         	movff	??___xxtofl+2,___xxtofl@arg+2
  8377  0028DE  C01A  F020         	movff	??___xxtofl+3,___xxtofl@arg+3
  8378  0028E2  EF7B  F014         	goto	l3864
  8379  0028E6                     l745:
  8380  0028E6  C013  F01D         	movff	___xxtofl@val,___xxtofl@arg
  8381  0028EA  C014  F01E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8382  0028EE  C015  F01F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8383  0028F2  C016  F020         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8384  0028F6                     l3864:
  8385  0028F6  5013               	movf	___xxtofl@val^0,w,c
  8386  0028F8  1014               	iorwf	(___xxtofl@val+1)^0,w,c
  8387  0028FA  1015               	iorwf	(___xxtofl@val+2)^0,w,c
  8388  0028FC  1016               	iorwf	(___xxtofl@val+3)^0,w,c
  8389  0028FE  A4D8               	btfss	status,2,c
  8390  002900  EF84  F014         	goto	u4951
  8391  002904  EF86  F014         	goto	u4950
  8392  002908                     u4951:
  8393  002908  EF90  F014         	goto	l3870
  8394  00290C                     u4950:
  8395  00290C  0E00               	movlw	0
  8396  00290E  6E13               	movwf	?___xxtofl^0,c
  8397  002910  0E00               	movlw	0
  8398  002912  6E14               	movwf	(?___xxtofl+1)^0,c
  8399  002914  0E00               	movlw	0
  8400  002916  6E15               	movwf	(?___xxtofl+2)^0,c
  8401  002918  0E00               	movlw	0
  8402  00291A  6E16               	movwf	(?___xxtofl+3)^0,c
  8403  00291C  EF21  F015         	goto	l748
  8404  002920                     l3870:
  8405  002920  0E96               	movlw	150
  8406  002922  6E1C               	movwf	___xxtofl@exp^0,c
  8407  002924  EF9A  F014         	goto	l3874
  8408  002928                     l3872:
  8409  002928  2A1C               	incf	___xxtofl@exp^0,f,c
  8410  00292A  90D8               	bcf	status,0,c
  8411  00292C  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  8412  00292E  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  8413  002930  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  8414  002932  321D               	rrcf	___xxtofl@arg^0,f,c
  8415  002934                     l3874:
  8416  002934  0E00               	movlw	0
  8417  002936  141D               	andwf	___xxtofl@arg^0,w,c
  8418  002938  6E17               	movwf	??___xxtofl^0,c
  8419  00293A  0E00               	movlw	0
  8420  00293C  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  8421  00293E  6E18               	movwf	(??___xxtofl+1)^0,c
  8422  002940  0E00               	movlw	0
  8423  002942  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  8424  002944  6E19               	movwf	(??___xxtofl+2)^0,c
  8425  002946  0EFE               	movlw	254
  8426  002948  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  8427  00294A  6E1A               	movwf	(??___xxtofl+3)^0,c
  8428  00294C  5017               	movf	??___xxtofl^0,w,c
  8429  00294E  1018               	iorwf	(??___xxtofl+1)^0,w,c
  8430  002950  1019               	iorwf	(??___xxtofl+2)^0,w,c
  8431  002952  101A               	iorwf	(??___xxtofl+3)^0,w,c
  8432  002954  A4D8               	btfss	status,2,c
  8433  002956  EFAF  F014         	goto	u4961
  8434  00295A  EFB1  F014         	goto	u4960
  8435  00295E                     u4961:
  8436  00295E  EF94  F014         	goto	l3872
  8437  002962                     u4960:
  8438  002962  EFBF  F014         	goto	l752
  8439  002966                     l3876:
  8440  002966  2A1C               	incf	___xxtofl@exp^0,f,c
  8441  002968  0E01               	movlw	1
  8442  00296A  261D               	addwf	___xxtofl@arg^0,f,c
  8443  00296C  0E00               	movlw	0
  8444  00296E  221E               	addwfc	(___xxtofl@arg+1)^0,f,c
  8445  002970  221F               	addwfc	(___xxtofl@arg+2)^0,f,c
  8446  002972  2220               	addwfc	(___xxtofl@arg+3)^0,f,c
  8447  002974  90D8               	bcf	status,0,c
  8448  002976  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  8449  002978  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  8450  00297A  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  8451  00297C  321D               	rrcf	___xxtofl@arg^0,f,c
  8452  00297E                     l752:
  8453  00297E  0E00               	movlw	0
  8454  002980  141D               	andwf	___xxtofl@arg^0,w,c
  8455  002982  6E17               	movwf	??___xxtofl^0,c
  8456  002984  0E00               	movlw	0
  8457  002986  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  8458  002988  6E18               	movwf	(??___xxtofl+1)^0,c
  8459  00298A  0E00               	movlw	0
  8460  00298C  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  8461  00298E  6E19               	movwf	(??___xxtofl+2)^0,c
  8462  002990  0EFF               	movlw	255
  8463  002992  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  8464  002994  6E1A               	movwf	(??___xxtofl+3)^0,c
  8465  002996  5017               	movf	??___xxtofl^0,w,c
  8466  002998  1018               	iorwf	(??___xxtofl+1)^0,w,c
  8467  00299A  1019               	iorwf	(??___xxtofl+2)^0,w,c
  8468  00299C  101A               	iorwf	(??___xxtofl+3)^0,w,c
  8469  00299E  A4D8               	btfss	status,2,c
  8470  0029A0  EFD4  F014         	goto	u4971
  8471  0029A4  EFD6  F014         	goto	u4970
  8472  0029A8                     u4971:
  8473  0029A8  EFB3  F014         	goto	l3876
  8474  0029AC                     u4970:
  8475  0029AC  EFDE  F014         	goto	l3884
  8476  0029B0                     l3882:
  8477  0029B0  061C               	decf	___xxtofl@exp^0,f,c
  8478  0029B2  90D8               	bcf	status,0,c
  8479  0029B4  361D               	rlcf	___xxtofl@arg^0,f,c
  8480  0029B6  361E               	rlcf	(___xxtofl@arg+1)^0,f,c
  8481  0029B8  361F               	rlcf	(___xxtofl@arg+2)^0,f,c
  8482  0029BA  3620               	rlcf	(___xxtofl@arg+3)^0,f,c
  8483  0029BC                     l3884:
  8484  0029BC  BE1F               	btfsc	(___xxtofl@arg+2)^0,7,c
  8485  0029BE  EFE3  F014         	goto	u4981
  8486  0029C2  EFE5  F014         	goto	u4980
  8487  0029C6                     u4981:
  8488  0029C6  EFED  F014         	goto	l759
  8489  0029CA                     u4980:
  8490  0029CA  0E02               	movlw	2
  8491  0029CC  601C               	cpfslt	___xxtofl@exp^0,c
  8492  0029CE  EFEB  F014         	goto	u4991
  8493  0029D2  EFED  F014         	goto	u4990
  8494  0029D6                     u4991:
  8495  0029D6  EFD8  F014         	goto	l3882
  8496  0029DA                     u4990:
  8497  0029DA                     l759:
  8498  0029DA  B01C               	btfsc	___xxtofl@exp^0,0,c
  8499  0029DC  EFF2  F014         	goto	u5001
  8500  0029E0  EFF4  F014         	goto	u5000
  8501  0029E4                     u5001:
  8502  0029E4  EFF5  F014         	goto	l3890
  8503  0029E8                     u5000:
  8504  0029E8  9E1F               	bcf	(___xxtofl@arg+2)^0,7,c
  8505  0029EA                     l3890:
  8506  0029EA  90D8               	bcf	status,0,c
  8507  0029EC  321C               	rrcf	___xxtofl@exp^0,f,c
  8508  0029EE  C01C  F017         	movff	___xxtofl@exp,??___xxtofl
  8509  0029F2  6A18               	clrf	(??___xxtofl+1)^0,c
  8510  0029F4  6A19               	clrf	(??___xxtofl+2)^0,c
  8511  0029F6  6A1A               	clrf	(??___xxtofl+3)^0,c
  8512  0029F8  C017  F01A         	movff	??___xxtofl,??___xxtofl+3
  8513  0029FC  6A19               	clrf	(??___xxtofl+2)^0,c
  8514  0029FE  6A18               	clrf	(??___xxtofl+1)^0,c
  8515  002A00  6A17               	clrf	??___xxtofl^0,c
  8516  002A02  5017               	movf	??___xxtofl^0,w,c
  8517  002A04  121D               	iorwf	___xxtofl@arg^0,f,c
  8518  002A06  5018               	movf	(??___xxtofl+1)^0,w,c
  8519  002A08  121E               	iorwf	(___xxtofl@arg+1)^0,f,c
  8520  002A0A  5019               	movf	(??___xxtofl+2)^0,w,c
  8521  002A0C  121F               	iorwf	(___xxtofl@arg+2)^0,f,c
  8522  002A0E  501A               	movf	(??___xxtofl+3)^0,w,c
  8523  002A10  1220               	iorwf	(___xxtofl@arg+3)^0,f,c
  8524  002A12  501B               	movf	___xxtofl@sign^0,w,c
  8525  002A14  B4D8               	btfsc	status,2,c
  8526  002A16  EF0F  F015         	goto	u5011
  8527  002A1A  EF11  F015         	goto	u5010
  8528  002A1E                     u5011:
  8529  002A1E  EF19  F015         	goto	l3900
  8530  002A22                     u5010:
  8531  002A22  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  8532  002A24  EF18  F015         	goto	u5020
  8533  002A28  EF16  F015         	goto	u5021
  8534  002A2C                     u5021:
  8535  002A2C  EF19  F015         	goto	l3900
  8536  002A30                     u5020:
  8537  002A30  8E20               	bsf	(___xxtofl@arg+3)^0,7,c
  8538  002A32                     l3900:
  8539  002A32  C01D  F013         	movff	___xxtofl@arg,?___xxtofl
  8540  002A36  C01E  F014         	movff	___xxtofl@arg+1,?___xxtofl+1
  8541  002A3A  C01F  F015         	movff	___xxtofl@arg+2,?___xxtofl+2
  8542  002A3E  C020  F016         	movff	___xxtofl@arg+3,?___xxtofl+3
  8543  002A42                     l748:
  8544  002A42  0012               	return		;funcret
  8545  002A44                     __end_of___xxtofl:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function _isr *****************
  8549 ;; Defined at:
  8550 ;;		line 37 in file "ADC_LM35_lcd.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8564 ;;      Params:         0       0       0       0       0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8567 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8568 ;;Total ram usage:        0 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 1
  8571 ;; This function calls:
  8572 ;;		i2___flge
  8573 ;; This function is called by:
  8574 ;;		Interrupt level 2
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	intcode
  8579  000008                     __pintcode:
  8580                           	callstack 0
  8581  000008                     _isr:
  8582                           	callstack 21
  8583                           
  8584                           ;incstack = 0
  8585  000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8586  00000A  EDFA  F01A         	call	int_func,f	;refresh shadow registers
  8587                           
  8588                           	psect	intcode_body
  8589  0035F4                     __pintcode_body:
  8590                           	callstack 21
  8591  0035F4                     int_func:
  8592                           	callstack 21
  8593  0035F4  0006               	pop		; remove dummy address from shadow register refresh
  8594  0035F6                     
  8595                           ;ADC_LM35_lcd.c: 39:   TMR0L = 5;
  8596  0035F6  A0F0               	btfss	240,0,c	;volatile
  8597  0035F8  EF00  F01B         	goto	i2u508_41
  8598  0035FC  EF02  F01B         	goto	i2u508_40
  8599  003600                     i2u508_41:
  8600  003600  EF0C  F01B         	goto	i2l3932
  8601  003604                     i2u508_40:
  8602  003604                     
  8603                           ;ADC_LM35_lcd.c: 41:     }
  8604  003604  90F0               	bcf	240,0,c	;volatile
  8605  003606                     
  8606                           ;ADC_LM35_lcd.c: 43: }
  8607  003606  0E00               	movlw	0
  8608  003608  0100               	movlb	0	; () banked
  8609  00360A  6FE8               	movwf	_tensao& (0+255),b
  8610  00360C  0E00               	movlw	0
  8611  00360E  6FE9               	movwf	(_tensao+1)& (0+255),b
  8612  003610  0E80               	movlw	128
  8613  003612  6FEA               	movwf	(_tensao+2)& (0+255),b
  8614  003614  0E3F               	movlw	63
  8615  003616  6FEB               	movwf	(_tensao+3)& (0+255),b
  8616  003618                     i2l3932:
  8617                           
  8618                           ;ADC_LM35_lcd.c: 46: 
  8619  003618  AAF2               	btfss	242,5,c	;volatile
  8620  00361A  EF11  F01B         	goto	i2u509_41
  8621  00361E  EF13  F01B         	goto	i2u509_40
  8622  003622                     i2u509_41:
  8623  003622  EF48  F01B         	goto	i2l76
  8624  003626                     i2u509_40:
  8625  003626  A4F2               	btfss	242,2,c	;volatile
  8626  003628  EF18  F01B         	goto	i2u510_41
  8627  00362C  EF1A  F01B         	goto	i2u510_40
  8628  003630                     i2u510_41:
  8629  003630  EF48  F01B         	goto	i2l76
  8630  003634                     i2u510_40:
  8631  003634                     
  8632                           ;ADC_LM35_lcd.c: 51: 
  8633  003634  C048  F001         	movff	_temperatura,i2___flge@ff1
  8634  003638  C049  F002         	movff	_temperatura+1,i2___flge@ff1+1
  8635  00363C  C04A  F003         	movff	_temperatura+2,i2___flge@ff1+2
  8636  003640  C04B  F004         	movff	_temperatura+3,i2___flge@ff1+3
  8637  003644  0E00               	movlw	0
  8638  003646  6E05               	movwf	i2___flge@ff2^0,c
  8639  003648  0E00               	movlw	0
  8640  00364A  6E06               	movwf	(i2___flge@ff2+1)^0,c
  8641  00364C  0E48               	movlw	72
  8642  00364E  6E07               	movwf	(i2___flge@ff2+2)^0,c
  8643  003650  0E42               	movlw	66
  8644  003652  6E08               	movwf	(i2___flge@ff2+3)^0,c
  8645  003654  ECB9  F017         	call	i2___flge	;wreg free
  8646  003658  B0D8               	btfsc	status,0,c
  8647  00365A  EF31  F01B         	goto	i2u511_41
  8648  00365E  EF33  F01B         	goto	i2u511_40
  8649  003662                     i2u511_41:
  8650  003662  EF45  F01B         	goto	i2l3940
  8651  003666                     i2u511_40:
  8652  003666  0E00               	movlw	0
  8653  003668  6E01               	movwf	i2___flge@ff1^0,c
  8654  00366A  0E00               	movlw	0
  8655  00366C  6E02               	movwf	(i2___flge@ff1+1)^0,c
  8656  00366E  0EF0               	movlw	240
  8657  003670  6E03               	movwf	(i2___flge@ff1+2)^0,c
  8658  003672  0E41               	movlw	65
  8659  003674  6E04               	movwf	(i2___flge@ff1+3)^0,c
  8660  003676  C048  F005         	movff	_temperatura,i2___flge@ff2
  8661  00367A  C049  F006         	movff	_temperatura+1,i2___flge@ff2+1
  8662  00367E  C04A  F007         	movff	_temperatura+2,i2___flge@ff2+2
  8663  003682  C04B  F008         	movff	_temperatura+3,i2___flge@ff2+3
  8664  003686  ECB9  F017         	call	i2___flge	;wreg free
  8665  00368A                     i2l3940:
  8666                           
  8667                           ;ADC_LM35_lcd.c: 55:      ADCON1 = 15;
  8668  00368A  0E05               	movlw	5
  8669  00368C  6ED6               	movwf	214,c	;volatile
  8670  00368E                     
  8671                           ;ADC_LM35_lcd.c: 56: 
  8672  00368E  94F2               	bcf	242,2,c	;volatile
  8673  003690                     i2l76:
  8674  003690  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8675  003692  0011               	retfie		f
  8676  003694                     __end_of_isr:
  8677                           	callstack 0
  8678                           
  8679 ;; *************** function i2___flge *****************
  8680 ;; Defined at:
  8681 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  ff1             4    0[COMRAM] void 
  8684 ;;  ff2             4    4[COMRAM] void 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;		None               void
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8696 ;;      Params:         8       0       0       0       0       0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8698 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8699 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8700 ;;Total ram usage:       12 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_isr
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text37
  8710  002F72                     __ptext37:
  8711                           	callstack 0
  8712  002F72                     i2___flge:
  8713                           	callstack 21
  8714  002F72  0E00               	movlw	0
  8715  002F74  1401               	andwf	i2___flge@ff1^0,w,c
  8716  002F76  6E09               	movwf	??i2___flge^0,c
  8717  002F78  0E00               	movlw	0
  8718  002F7A  1402               	andwf	(i2___flge@ff1+1)^0,w,c
  8719  002F7C  6E0A               	movwf	(??i2___flge+1)^0,c
  8720  002F7E  0E80               	movlw	128
  8721  002F80  1403               	andwf	(i2___flge@ff1+2)^0,w,c
  8722  002F82  6E0B               	movwf	(??i2___flge+2)^0,c
  8723  002F84  0E7F               	movlw	127
  8724  002F86  1404               	andwf	(i2___flge@ff1+3)^0,w,c
  8725  002F88  6E0C               	movwf	(??i2___flge+3)^0,c
  8726  002F8A  5009               	movf	??i2___flge^0,w,c
  8727  002F8C  100A               	iorwf	(??i2___flge+1)^0,w,c
  8728  002F8E  100B               	iorwf	(??i2___flge+2)^0,w,c
  8729  002F90  100C               	iorwf	(??i2___flge+3)^0,w,c
  8730  002F92  A4D8               	btfss	status,2,c
  8731  002F94  EFCE  F017         	goto	i2u503_41
  8732  002F98  EFD0  F017         	goto	i2u503_40
  8733  002F9C                     i2u503_41:
  8734  002F9C  EFD8  F017         	goto	i2l3908
  8735  002FA0                     i2u503_40:
  8736  002FA0  0E00               	movlw	0
  8737  002FA2  6E01               	movwf	i2___flge@ff1^0,c
  8738  002FA4  0E00               	movlw	0
  8739  002FA6  6E02               	movwf	(i2___flge@ff1+1)^0,c
  8740  002FA8  0E00               	movlw	0
  8741  002FAA  6E03               	movwf	(i2___flge@ff1+2)^0,c
  8742  002FAC  0E00               	movlw	0
  8743  002FAE  6E04               	movwf	(i2___flge@ff1+3)^0,c
  8744  002FB0                     i2l3908:
  8745  002FB0  0E00               	movlw	0
  8746  002FB2  1405               	andwf	i2___flge@ff2^0,w,c
  8747  002FB4  6E09               	movwf	??i2___flge^0,c
  8748  002FB6  0E00               	movlw	0
  8749  002FB8  1406               	andwf	(i2___flge@ff2+1)^0,w,c
  8750  002FBA  6E0A               	movwf	(??i2___flge+1)^0,c
  8751  002FBC  0E80               	movlw	128
  8752  002FBE  1407               	andwf	(i2___flge@ff2+2)^0,w,c
  8753  002FC0  6E0B               	movwf	(??i2___flge+2)^0,c
  8754  002FC2  0E7F               	movlw	127
  8755  002FC4  1408               	andwf	(i2___flge@ff2+3)^0,w,c
  8756  002FC6  6E0C               	movwf	(??i2___flge+3)^0,c
  8757  002FC8  5009               	movf	??i2___flge^0,w,c
  8758  002FCA  100A               	iorwf	(??i2___flge+1)^0,w,c
  8759  002FCC  100B               	iorwf	(??i2___flge+2)^0,w,c
  8760  002FCE  100C               	iorwf	(??i2___flge+3)^0,w,c
  8761  002FD0  A4D8               	btfss	status,2,c
  8762  002FD2  EFED  F017         	goto	i2u504_41
  8763  002FD6  EFEF  F017         	goto	i2u504_40
  8764  002FDA                     i2u504_41:
  8765  002FDA  EFF7  F017         	goto	i2l3912
  8766  002FDE                     i2u504_40:
  8767  002FDE  0E00               	movlw	0
  8768  002FE0  6E05               	movwf	i2___flge@ff2^0,c
  8769  002FE2  0E00               	movlw	0
  8770  002FE4  6E06               	movwf	(i2___flge@ff2+1)^0,c
  8771  002FE6  0E00               	movlw	0
  8772  002FE8  6E07               	movwf	(i2___flge@ff2+2)^0,c
  8773  002FEA  0E00               	movlw	0
  8774  002FEC  6E08               	movwf	(i2___flge@ff2+3)^0,c
  8775  002FEE                     i2l3912:
  8776  002FEE  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
  8777  002FF0  EFFC  F017         	goto	i2u505_41
  8778  002FF4  EFFE  F017         	goto	i2u505_40
  8779  002FF8                     i2u505_41:
  8780  002FF8  EF07  F018         	goto	i2l3916
  8781  002FFC                     i2u505_40:
  8782  002FFC  6C01               	negf	i2___flge@ff1^0,c
  8783  002FFE  1E02               	comf	(i2___flge@ff1+1)^0,f,c
  8784  003000  B0D8               	btfsc	status,0,c
  8785  003002  2A02               	incf	(i2___flge@ff1+1)^0,f,c
  8786  003004  1E03               	comf	(i2___flge@ff1+2)^0,f,c
  8787  003006  B0D8               	btfsc	status,0,c
  8788  003008  2A03               	incf	(i2___flge@ff1+2)^0,f,c
  8789  00300A  0E80               	movlw	128
  8790  00300C  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
  8791  00300E                     i2l3916:
  8792  00300E  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
  8793  003010  EF0C  F018         	goto	i2u506_41
  8794  003014  EF0E  F018         	goto	i2u506_40
  8795  003018                     i2u506_41:
  8796  003018  EF17  F018         	goto	i2l355
  8797  00301C                     i2u506_40:
  8798  00301C  6C05               	negf	i2___flge@ff2^0,c
  8799  00301E  1E06               	comf	(i2___flge@ff2+1)^0,f,c
  8800  003020  B0D8               	btfsc	status,0,c
  8801  003022  2A06               	incf	(i2___flge@ff2+1)^0,f,c
  8802  003024  1E07               	comf	(i2___flge@ff2+2)^0,f,c
  8803  003026  B0D8               	btfsc	status,0,c
  8804  003028  2A07               	incf	(i2___flge@ff2+2)^0,f,c
  8805  00302A  0E80               	movlw	128
  8806  00302C  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
  8807  00302E                     i2l355:
  8808  00302E  0E00               	movlw	0
  8809  003030  1A01               	xorwf	i2___flge@ff1^0,f,c
  8810  003032  0E00               	movlw	0
  8811  003034  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
  8812  003036  0E00               	movlw	0
  8813  003038  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
  8814  00303A  0E80               	movlw	128
  8815  00303C  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
  8816  00303E  0E00               	movlw	0
  8817  003040  1A05               	xorwf	i2___flge@ff2^0,f,c
  8818  003042  0E00               	movlw	0
  8819  003044  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
  8820  003046  0E00               	movlw	0
  8821  003048  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
  8822  00304A  0E80               	movlw	128
  8823  00304C  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
  8824  00304E  5005               	movf	i2___flge@ff2^0,w,c
  8825  003050  5C01               	subwf	i2___flge@ff1^0,w,c
  8826  003052  5006               	movf	(i2___flge@ff2+1)^0,w,c
  8827  003054  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
  8828  003056  5007               	movf	(i2___flge@ff2+2)^0,w,c
  8829  003058  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
  8830  00305A  5008               	movf	(i2___flge@ff2+3)^0,w,c
  8831  00305C  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
  8832  00305E  B0D8               	btfsc	status,0,c
  8833  003060  EF34  F018         	goto	i2u507_41
  8834  003064  EF36  F018         	goto	i2u507_40
  8835  003068                     i2u507_41:
  8836  003068  EF39  F018         	goto	i2l3922
  8837  00306C                     i2u507_40:
  8838  00306C  90D8               	bcf	status,0,c
  8839  00306E  EF3A  F018         	goto	i2l360
  8840  003072                     i2l3922:
  8841  003072  80D8               	bsf	status,0,c
  8842  003074                     i2l360:
  8843  003074  0012               	return		;funcret
  8844  003076                     __end_ofi2___flge:
  8845                           	callstack 0
  8846                           
  8847                           	psect	rparam
  8848  0000                     
  8849                           	psect	temp
  8850  000052                     btemp:
  8851                           	callstack 0
  8852  000052                     	ds	1
  8853  0000                     int$flags	set	btemp
  8854  0000                     wtemp8	set	btemp+1
  8855  0000                     ttemp5	set	btemp+1
  8856  0000                     ttemp6	set	btemp+4
  8857  0000                     ttemp7	set	btemp+8
  8858                           
  8859                           	psect	idloc
  8860                           
  8861                           ;Config register IDLOC0 @ 0x200000
  8862                           ;	unspecified, using default values
  8863  200000                     	org	2097152
  8864  200000  FF                 	db	255
  8865                           
  8866                           ;Config register IDLOC1 @ 0x200001
  8867                           ;	unspecified, using default values
  8868  200001                     	org	2097153
  8869  200001  FF                 	db	255
  8870                           
  8871                           ;Config register IDLOC2 @ 0x200002
  8872                           ;	unspecified, using default values
  8873  200002                     	org	2097154
  8874  200002  FF                 	db	255
  8875                           
  8876                           ;Config register IDLOC3 @ 0x200003
  8877                           ;	unspecified, using default values
  8878  200003                     	org	2097155
  8879  200003  FF                 	db	255
  8880                           
  8881                           ;Config register IDLOC4 @ 0x200004
  8882                           ;	unspecified, using default values
  8883  200004                     	org	2097156
  8884  200004  FF                 	db	255
  8885                           
  8886                           ;Config register IDLOC5 @ 0x200005
  8887                           ;	unspecified, using default values
  8888  200005                     	org	2097157
  8889  200005  FF                 	db	255
  8890                           
  8891                           ;Config register IDLOC6 @ 0x200006
  8892                           ;	unspecified, using default values
  8893  200006                     	org	2097158
  8894  200006  FF                 	db	255
  8895                           
  8896                           ;Config register IDLOC7 @ 0x200007
  8897                           ;	unspecified, using default values
  8898  200007                     	org	2097159
  8899  200007  FF                 	db	255
  8900                           
  8901                           	psect	config
  8902                           
  8903                           ;Config register CONFIG1L @ 0x300000
  8904                           ;	unspecified, using default values
  8905                           ;	PLL Prescaler Selection bits
  8906                           ;	PLLDIV = 0x0, unprogrammed default
  8907                           ;	System Clock Postscaler Selection bits
  8908                           ;	CPUDIV = 0x0, unprogrammed default
  8909                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8910                           ;	USBDIV = 0x0, unprogrammed default
  8911  300000                     	org	3145728
  8912  300000  00                 	db	0
  8913                           
  8914                           ;Config register CONFIG1H @ 0x300001
  8915                           ;	Oscillator Selection bits
  8916                           ;	FOSC = HS, HS oscillator (HS)
  8917                           ;	Fail-Safe Clock Monitor Enable bit
  8918                           ;	FCMEN = 0x0, unprogrammed default
  8919                           ;	Internal/External Oscillator Switchover bit
  8920                           ;	IESO = 0x0, unprogrammed default
  8921  300001                     	org	3145729
  8922  300001  0C                 	db	12
  8923                           
  8924                           ;Config register CONFIG2L @ 0x300002
  8925                           ;	unspecified, using default values
  8926                           ;	Power-up Timer Enable bit
  8927                           ;	PWRT = 0x1, unprogrammed default
  8928                           ;	Brown-out Reset Enable bits
  8929                           ;	BOR = 0x3, unprogrammed default
  8930                           ;	Brown-out Reset Voltage bits
  8931                           ;	BORV = 0x3, unprogrammed default
  8932                           ;	USB Voltage Regulator Enable bit
  8933                           ;	VREGEN = 0x0, unprogrammed default
  8934  300002                     	org	3145730
  8935  300002  1F                 	db	31
  8936                           
  8937                           ;Config register CONFIG2H @ 0x300003
  8938                           ;	Watchdog Timer Enable bit
  8939                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8940                           ;	Watchdog Timer Postscale Select bits
  8941                           ;	WDTPS = 0xF, unprogrammed default
  8942  300003                     	org	3145731
  8943  300003  1E                 	db	30
  8944                           
  8945                           ; Padding undefined space
  8946  300004                     	org	3145732
  8947  300004  FF                 	db	255
  8948                           
  8949                           ;Config register CONFIG3H @ 0x300005
  8950                           ;	CCP2 MUX bit
  8951                           ;	CCP2MX = 0x1, unprogrammed default
  8952                           ;	PORTB A/D Enable bit
  8953                           ;	PBADEN = 0x1, unprogrammed default
  8954                           ;	Low-Power Timer 1 Oscillator Enable bit
  8955                           ;	LPT1OSC = 0x0, unprogrammed default
  8956                           ;	MCLR Pin Enable bit
  8957                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8958  300005                     	org	3145733
  8959  300005  03                 	db	3
  8960                           
  8961                           ;Config register CONFIG4L @ 0x300006
  8962                           ;	unspecified, using default values
  8963                           ;	Stack Full/Underflow Reset Enable bit
  8964                           ;	STVREN = 0x1, unprogrammed default
  8965                           ;	Single-Supply ICSP Enable bit
  8966                           ;	LVP = 0x1, unprogrammed default
  8967                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8968                           ;	ICPRT = 0x0, unprogrammed default
  8969                           ;	Extended Instruction Set Enable bit
  8970                           ;	XINST = 0x0, unprogrammed default
  8971                           ;	Background Debugger Enable bit
  8972                           ;	DEBUG = 0x1, unprogrammed default
  8973  300006                     	org	3145734
  8974  300006  85                 	db	133
  8975                           
  8976                           ; Padding undefined space
  8977  300007                     	org	3145735
  8978  300007  FF                 	db	255
  8979                           
  8980                           ;Config register CONFIG5L @ 0x300008
  8981                           ;	unspecified, using default values
  8982                           ;	Code Protection bit
  8983                           ;	CP0 = 0x1, unprogrammed default
  8984                           ;	Code Protection bit
  8985                           ;	CP1 = 0x1, unprogrammed default
  8986                           ;	Code Protection bit
  8987                           ;	CP2 = 0x1, unprogrammed default
  8988                           ;	Code Protection bit
  8989                           ;	CP3 = 0x1, unprogrammed default
  8990  300008                     	org	3145736
  8991  300008  0F                 	db	15
  8992                           
  8993                           ;Config register CONFIG5H @ 0x300009
  8994                           ;	unspecified, using default values
  8995                           ;	Boot Block Code Protection bit
  8996                           ;	CPB = 0x1, unprogrammed default
  8997                           ;	Data EEPROM Code Protection bit
  8998                           ;	CPD = 0x1, unprogrammed default
  8999  300009                     	org	3145737
  9000  300009  C0                 	db	192
  9001                           
  9002                           ;Config register CONFIG6L @ 0x30000A
  9003                           ;	unspecified, using default values
  9004                           ;	Write Protection bit
  9005                           ;	WRT0 = 0x1, unprogrammed default
  9006                           ;	Write Protection bit
  9007                           ;	WRT1 = 0x1, unprogrammed default
  9008                           ;	Write Protection bit
  9009                           ;	WRT2 = 0x1, unprogrammed default
  9010                           ;	Write Protection bit
  9011                           ;	WRT3 = 0x1, unprogrammed default
  9012  30000A                     	org	3145738
  9013  30000A  0F                 	db	15
  9014                           
  9015                           ;Config register CONFIG6H @ 0x30000B
  9016                           ;	unspecified, using default values
  9017                           ;	Configuration Register Write Protection bit
  9018                           ;	WRTC = 0x1, unprogrammed default
  9019                           ;	Boot Block Write Protection bit
  9020                           ;	WRTB = 0x1, unprogrammed default
  9021                           ;	Data EEPROM Write Protection bit
  9022                           ;	WRTD = 0x1, unprogrammed default
  9023  30000B                     	org	3145739
  9024  30000B  E0                 	db	224
  9025                           
  9026                           ;Config register CONFIG7L @ 0x30000C
  9027                           ;	unspecified, using default values
  9028                           ;	Table Read Protection bit
  9029                           ;	EBTR0 = 0x1, unprogrammed default
  9030                           ;	Table Read Protection bit
  9031                           ;	EBTR1 = 0x1, unprogrammed default
  9032                           ;	Table Read Protection bit
  9033                           ;	EBTR2 = 0x1, unprogrammed default
  9034                           ;	Table Read Protection bit
  9035                           ;	EBTR3 = 0x1, unprogrammed default
  9036  30000C                     	org	3145740
  9037  30000C  0F                 	db	15
  9038                           
  9039                           ;Config register CONFIG7H @ 0x30000D
  9040                           ;	unspecified, using default values
  9041                           ;	Boot Block Table Read Protection bit
  9042                           ;	EBTRB = 0x1, unprogrammed default
  9043  30000D                     	org	3145741
  9044  30000D  40                 	db	64
  9045                           tosu	equ	0xFFF
  9046                           tosh	equ	0xFFE
  9047                           tosl	equ	0xFFD
  9048                           stkptr	equ	0xFFC
  9049                           pclatu	equ	0xFFB
  9050                           pclath	equ	0xFFA
  9051                           pcl	equ	0xFF9
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           indf0	equ	0xFEF
  9059                           postinc0	equ	0xFEE
  9060                           postdec0	equ	0xFED
  9061                           preinc0	equ	0xFEC
  9062                           plusw0	equ	0xFEB
  9063                           fsr0h	equ	0xFEA
  9064                           fsr0l	equ	0xFE9
  9065                           wreg	equ	0xFE8
  9066                           indf1	equ	0xFE7
  9067                           postinc1	equ	0xFE6
  9068                           postdec1	equ	0xFE5
  9069                           preinc1	equ	0xFE4
  9070                           plusw1	equ	0xFE3
  9071                           fsr1h	equ	0xFE2
  9072                           fsr1l	equ	0xFE1
  9073                           bsr	equ	0xFE0
  9074                           indf2	equ	0xFDF
  9075                           postinc2	equ	0xFDE
  9076                           postdec2	equ	0xFDD
  9077                           preinc2	equ	0xFDC
  9078                           plusw2	equ	0xFDB
  9079                           fsr2h	equ	0xFDA
  9080                           fsr2l	equ	0xFD9
  9081                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      81
    BANK0           160    116     142
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_3(CODE[15]), temperature(BANK0[8]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_3(CODE[15]), temperature(BANK0[8]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S805_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> temperature(BANK0[8]), 

    imprime_lcd@frase	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), temperature(BANK0[8]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _limpa_lcd->_comando_lcd
    _imprime_lcd->_strlen
    ___xxtofl->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2___flge

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   46070
                                            114 BANK0      2     2      0
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                        _comando_lcd
                        _imprime_lcd
                          _limpa_lcd
                           _setupADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38874
                                             98 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38364
                                             69 COMRAM     2     2      0
                                             92 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   37813
                                             68 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             12 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30300
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             18 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             12 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4047
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             37 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             12 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             12 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             57 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             12 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             12 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3953
                                             32 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1206
                                             57 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             12 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             12 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             12 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1875
                                             19 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             12 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             12 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     592
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _limpa_lcd                                            0     0      0     402
                        _comando_lcd
 ---------------------------------------------------------------------------------
 (2) _comando_lcd                                          3     1      2     402
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _imprime_lcd                                          9     7      2     842
                                             16 COMRAM     9     7      2
                           _dado_lcd
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _dado_lcd                                             3     1      2      98
                                             12 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             18 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0     286
                           i2___flge
 ---------------------------------------------------------------------------------
 (10) i2___flge                                           12     4      8     286
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _comando_lcd
   _imprime_lcd
     _dado_lcd
     _strlen
   _limpa_lcd
     _comando_lcd
   _setupADC
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _isr (ROOT)
   i2___flge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      51       1       86.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     12F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 30 11:52:39 2021

           ___fldiv@aexp 0025             ___fldiv@bexp 0024             ___fldiv@sign 001D  
                     l41 3AEC                       l44 3B06                       l53 370E  
                     l47 3B14                       l66 3AAC                       l90 3AD2  
                     l82 2A7E             ___awdiv@sign 0012      ___wmul@multiplicand 000F  
                    l321 33D6                      l334 3548                      l360 2F70  
                    l355 2F2A                      l364 3A18                      l620 1B9C  
                    l349 35F2                      l711 2174                      l704 1F7E  
                    l721 22A4                      l713 21EC                      l714 21DA  
                    l618 1BE8                      l635 1D02                      l627 1EB8  
                    l619 1BD6                      l387 2E6C                      l708 22E2  
                    l644 1DD2                      l660 3964                      l812 345E  
                    l645 1DC0                      l814 3498                      l752 297E  
                    l672 267C                      l832 148E                      l745 28E6  
                    l809 341C                      l674 24DC                      l850 0C22  
                    l683 2522                      l748 2A42                      l685 259A  
                    l677 24A0                      l941 193E                      l686 2588  
                    l934 19F8                      l759 29DA                      l768 387E  
                    l947 3768                      l948 3770                      l990 2D66  
                    l958 3172                      l878 1062                      l987 2D5E  
                    l996 288E                      l999 27D2                      _pad 33D8  
                    _isr 0008             ___awmod@sign 0012                      wreg 000FE8  
           ___flmul@aexp 002E             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034             ___fltol@exp1 0016  
                   l1020 39E0                     l1006 3A50                     l1014 38D0  
                   l1035 3312                     l1043 39A8                     l1052 382C  
                   l1046 3B16                     l1062 3248                     l1072 37C8  
                   l1058 391E                     l1077 37D0                     l4000 325C  
                   l4002 326E                     l4012 38D2                     l4100 1B3A  
                   l4004 3278                     l4014 38DE                     l4110 1BAA  
                   l4102 1B3E                     l4030 1A26                     l4022 19FA  
                   l4006 3296                     l4016 38E2                     l4200 1E38  
                   l4120 1BD4                     l4112 1BB6                     l4104 1B68  
                   l4040 1A60                     l4032 1A36                     l4024 1A06  
                   l4008 32CC                     l5000 118E                     l4018 3912  
                   l4210 1E8A                     l4202 1E48                     l4130 1C2A  
                   l4122 1BF6                     l4114 1BBA                     l4106 1B84  
                   l4050 1A8E                     l4042 1A66                     l4034 1A46  
                   l4026 1A14                     l5002 1194                     l5010 11C2  
                   l5100 2BF0                     l4300 241A                     l4220 1EA8  
                   l4212 1E90                     l4204 1E58                     l4140 1C64  
                   l4132 1C38                     l4124 1C06                     l4116 1BC8  
                   l4108 1B94                     l4060 1AC2                     l4052 1A90  
                   l4044 1A78                     l4036 1A48                     l4028 1A16  
                   l5020 1278                     l5012 121A                     l5004 11A6  
                   l5102 2BF4                     l4310 246C                     l4302 2434  
                   l4214 1E92                     l4206 1E78                     l4150 1CD0  
                   l4142 1C66                     l4134 1C46                     l4118 1BCA  
                   l4070 1AFE                     l4054 1AA0                     l4062 1ACA  
                   l4046 1A7A                     l4038 1A50                     l4230 3988  
                   l5030 12C8                     l5022 1294                     l5014 124E  
                   l5006 11B8                     l5120 2CAA                     l5112 2C50  
                   l5104 2C10                     l4320 24C8                     l4312 247C  
                   l4304 2444                     l4400 1F28                     l4216 1E98  
                   l4208 1E7C                     l4160 1D28                     l4152 1CD2  
                   l4144 1C70                     l4136 1C52                     l4128 1C1A  
                   l4080 1B12                     l4072 1B02                     l4064 1ADA  
                   l4056 1AB0                     l4048 1A80                     l4224 3966  
                   l4232 39AA                     l5040 130A                     l5032 12D8  
                   l5024 12A6                     l5016 1256                     l5008 11BC  
                   l5130 2D30                     l5114 2C66                     l5106 2C46  
                   l4330 2508                     l4322 24CA                     l4314 2490  
                   l4306 2454                     l4250 2310                     l4242 22E4  
                   l4410 1F68                     l4402 1F36                     l4218 1EA6  
                   l4170 1D56                     l4154 1CE2                     l4138 1C56  
                   l4146 1C76                     l4090 1B26                     l4082 1B16  
                   l4074 1B06                     l4066 1AEC                     l4058 1AC0  
                   l4226 3972                     l5050 133A                     l5042 1318  
                   l5034 12EA                     l5026 12B4                     l5018 125A  
                   l5210 1758                     l5202 16E2                     l4236 3AAE  
                   l5132 2D42                     l5124 2CE0                     l5116 2C6E  
                   l5108 2C4A                     l4340 2544                     l4332 2512  
                   l4324 24DA                     l4316 249E                     l4308 2464  
                   l4260 234A                     l4252 2320                     l4244 22F0  
                   l4500 22C6                     l4420 1FB2                     l4412 1F6E  
                   l4404 1F38                     l4172 1D64                     l4164 1D3C  
                   l4180 1D82                     l4148 1C9C                     l4156 1CF2  
                   l4092 1B2A                     l4084 1B1A                     l4076 1B0A  
                   l4068 1AFA                     l4228 3984                     l5060 139C  
                   l5052 1360                     l5044 1320                     l5036 12F2  
                   l5028 12C4                     l5140 319E                     l5220 17D0  
                   l5212 1768                     l5204 16F4                     l5300 2A58  
                   l4238 3ACA                     l5118 2C76                     l4350 25B6  
                   l4342 2552                     l4334 2520                     l4326 24EC  
                   l4318 24AA                     l4270 2376                     l4262 2350  
                   l4254 2330                     l4246 22FE                     l4502 22C8  
                   l4430 2002                     l4422 1FBE                     l4414 1F8E  
                   l4406 1F48                     l4174 1D6C                     l4166 1D46  
                   l4158 1D18                     l4182 1D90                     l4094 1B2E  
                   l4086 1B1E                     l4078 1B0E                     l4510 3920  
                   l5070 13E2                     l5062 13B6                     l5054 137C  
                   l5046 1328                     l5038 1302                     l5150 31EC  
                   l5222 1800                     l5214 179A                     l5206 1716  
                   l5310 2B00                     l5302 2A78                     l5128 2D1E  
                   l4520 3326                     l4360 2622                     l4352 25C4  
                   l4344 2580                     l4328 2502                     l4336 2532  
                   l4280 23B0                     l4272 2386                     l4264 2356  
                   l4256 2332                     l4248 2300                     l4600 3588  
                   l4504 22CE                     l4440 2044                     l4432 200E  
                   l4424 1FC8                     l4416 1F9E                     l4408 1F58  
                   l4192 1DE2                     l4184 1D94                     l4176 1D70  
                   l4168 1D54                     l4096 1B32                     l4088 1B22  
                   l4512 3930                     l5080 1432                     l5072 13F2  
                   l5064 13BC                     l5056 1384                     l5048 1334  
                   l5152 31FE                     l5144 31AA                     l5232 18C8  
                   l5216 17AC                     l5208 1726                     l5160 14B4  
                   l5320 2B7A                     l5312 2B34                     l5304 2A7C  
                   l3810 3ADC                     l4530 334C                     l4522 332E  
                   l4370 2670                     l4362 263C                     l4354 25EE  
                   l4338 2540                     l4282 23C6                     l4274 2396  
                   l4266 2364                     l4258 233A                     l4602 35B6  
                   l4506 22D2                     l4450 20A6                     l4442 2050  
                   l4434 201A                     l4426 1FDE                     l4194 1DEE  
                   l4186 1DA2                     l4178 1D80                     l4098 1B36  
                   l5090 146E                     l5082 1444                     l5074 13F8  
                   l5066 13CE                     l5058 138A                     l5154 3226  
                   l5146 31B8                     l5138 3174                     l5234 18DA  
                   l5242 1952                     l5218 17C2                     l5226 182C  
                   l5170 1530                     l5162 14C2                     l5322 2B86  
                   l5314 2B50                     l5306 2A8C                     l3900 2A32  
                   l3812 3AEA                     l4540 3384                     l4532 3354  
                   l4524 3332                     l4516 3314                     l4372 2672  
                   l4364 2658                     l4348 25AA                     l4356 25F2  
                   l4284 23D6                     l4292 23F6                     l4276 2398  
                   l4268 2366                     l4604 35C6                     l4620 2EEA  
                   l4612 2E6E                     l4460 213C                     l4452 20B2  
                   l4444 2060                     l4436 2028                     l4428 1FEA  
                   l4380 1EBA                     l4196 1DFC                     l4188 1DB8  
                   l4700 3440                     l5084 1450                     l5076 13FE  
                   l5068 13DA                     l5148 31D0                     l5260 19E6  
                   l5244 1976                     l5252 19A6                     l5236 190E  
                   l5228 185A                     l5172 153E                     l5164 14D2  
                   l5324 2B92                     l5316 2B6A                     l5308 2AA0  
                   l3814 3AEE                     l5350 2C94                     l4550 33B0  
                   l4542 338A                     l4534 3366                     l4526 3340  
                   l4518 3318                     l4366 265C                     l4358 260C  
                   l4294 2406                     l4286 23DE                     l4278 23A0  
                   l4606 35EA                     l4630 2F6E                     l4622 2EF8  
                   l4614 2E9C                     l4470 2192                     l4462 215A  
                   l4454 20CE                     l4446 207A                     l4438 2034  
                   l4390 1EF6                     l4382 1EC6                     l4198 1E36  
                   l4710 3096                     l4702 346C                     l5086 1458  
                   l5254 19B4                     l5246 1984                     l5190 160E  
                   l5182 15C2                     l5174 154C                     l5166 14D6  
                   l5158 1490                     l5270 3726                     l5326 2BB8  
                   l5318 2B6E                     ?_pad 001D                     l3816 3AF6  
                   l5280 36EC                     l3808 3AD4                     l3840 3A84  
                   l5096 2BD8                     l4544 33A0                     l4536 336E  
                   l4552 33B6                     l4528 3348                     l4560 349A  
                   l4368 266A                     l4296 2406                     l4288 23E2  
                   l4608 35F0                     l4624 2F0A                     l4616 2EAC  
                   l4480 21FC                     l4472 2196                     l4464 2164  
                   l4456 20F8                     l4448 208A                     l4392 1F06  
                   l4384 1ED4                     l4712 30D4                     l4720 3114  
                   l4704 3480                     l5088 1468                     l4800 0894  
                   l5248 1998                     l5192 1632                     l5176 156C  
                   l5184 15D4                     l5168 14FA                     l5272 374C  
                   l5328 2BC4                     l3818 3B04                     l5282 36F0  
                   l5274 3694                     l3842 3A9C                     l5098 2BEC  
                   l4554 33C6                     l4546 33A8                     l4538 3376  
                   l4570 34C6                     l4562 349E                     l4626 2F18  
                   l4618 2EDA                     l4490 225E                     l4482 2208  
                   l4474 21A4                     l4466 2172                     l4458 212E  
                   l4394 1F0C                     l4386 1ED6                     l4634 39E2  
                   l4650 2DBC                     l4642 2D68                     l4722 3126  
                   l4714 30FC                     l4730 37D2                     l4810 08DA  
                   l4802 089C                     l5194 166C                     l5186 15F8  
                   l5178 157A                     l5258 19C2                     l5266 3710  
                   l5290 3850                     l3860 28A2                     l5276 369C  
                   l3828 3B08                     l3844 3AAA                     l4556 33CE  
                   l4548 33AA                     l4580 34FE                     l4572 34CE  
                   l4564 34AC                     l4628 2F68                     l4492 2272  
                   l4484 2216                     l4476 21D2                     l4468 2184  
                   l4396 1F1C                     l4388 1EE6                     l4636 39F8  
                   l4652 2DBE                     l4644 2D7E                     l4716 3108  
                   l4708 3076                     l4732 37E2                     l4740 37BA  
                   l4900 0CAC                     l4820 0916                     l4812 08E2  
                   l4804 08AE                     l5196 168C                     l5188 1600  
                   l5268 3718                     l5292 386C                     l5284 382E  
                   l3870 2920                     l3862 28B0                     l5278 36B4  
                   l4590 3538                     l4582 3514                     l4574 34E0  
                   l4566 34B4                     l4494 228C                     l4486 2240  
                   l4398 1F22                     l4638 3A08                     l4654 2DCE  
                   l4726 316A                     l4750 2708                     l4734 3772  
                   l4910 0CEA                     l4902 0CB0                     l4830 0992  
                   l4814 08E6                     l4806 08BC                     l5198 169A  
                   l5286 3840                     l3880 2974                     l3872 2928  
                   l3864 28F6                     l4592 3540                     l4584 351C  
                   l4576 34E8                     l4568 34B8                     l4496 22A8  
                   l4488 2244                     l4680 2E4C                     l4664 2DF8  
                   l4656 2DD2                     l4648 2D92                     l4752 2716  
                   l4760 27F6                     l4744 267E                     l4920 0D38  
                   l4912 0CEE                     l4904 0CB8                     l4832 099C  
                   l4824 094C                     l4816 08EA                     l4808 08CE  
                   l5288 3848                     l5296 2A44                     l3890 29EA  
                   l3882 29B0                     l3874 2934                     l3866 290C  
                   l3858 2892                     l4586 3522                     l4578 34F0  
                   l4498 22B8                     l4682 2E5C                     l4674 2E20  
                   l4666 2E02                     l4658 2DE0                     l4762 2832  
                   l4746 269E                     l4690 33FA                     l4738 37A8  
                   l4930 0DD0                     l4914 0D00                     l4922 0D40  
                   l4906 0CCA                     l4842 0A20                     l4826 095E  
                   l4818 08F0                     l5298 2A54                     l3892 29EE  
                   l3884 29BC                     l3876 2966                     l4772 3A1A  
                   l4780 3898                     l4588 3528                     l4596 354A  
                   l4676 2E2C                     l4668 2E0C                     l4764 2846  
                   l4756 2786                     l4748 26F4                     l4692 3408  
                   l4940 0EB4                     l4932 0E28                     l4924 0D48  
                   l4916 0D0E                     l4908 0CDC                     l4860 0ABA  
                   l4844 0A32                     l4828 097A                     l4836 09C4  
                   l3894 2A12                     l3886 29CA                     l3878 2968  
                   l4782 38C6                     l4598 3578                     l4678 2E3C  
                   l4766 286E                     l4758 27C2                     l4694 3414  
                   l4686 33D8                     l4950 0F4E                     l4942 0EE6  
                   l4934 0E5C                     l4926 0D58                     l4918 0D26  
                   l4870 0B8A                     l4862 0AEE                     l4846 0A4E  
                   l4838 09EA                     l4854 0A6A                     l4790 0840  
                   l3896 2A22                     l3888 29E8                     l4784 38CA  
                   l4776 3880                     l4768 287E                     l4696 3428  
                   l4688 33E6                     l4960 1026                     l4952 0F82  
                   l4944 0EFC                     l4928 0D6C                     l4936 0E62  
                   l4880 0BF4                     l4864 0AF4                     l4872 0BBC  
                   l4856 0A84                     l4792 0850                     l3898 2A30  
                   l4778 3884                     l4698 343C                     l4970 107E  
                   l4954 0FD8                     l4962 102A                     l4946 0F2E  
                   l4938 0E80                     l4882 0BFC                     l4874 0BCC  
                   l4866 0B4E                     l4794 085E                     l4980 1124  
                   l4972 10E2                     l4964 103A                     l4956 0FDE  
                   l4948 0F3E                     l4892 0C40                     l4884 0C16  
                   l4876 0BD0                     l4868 0B82                     l4796 0866  
                   l4788 0836                     ?_isr 0001                     l3998 324A  
                   l4990 1162                     l4974 10F0                     l4982 112C  
                   l4966 104E                     l4958 1012                     l4894 0C52  
                   l4878 0BE2                     l4886 0C2E                     l4798 088A  
                   l4992 1168                     l4984 1140                     l4976 1104  
                   l4968 105A                     l4896 0C6E                     l4994 1174  
                   l4986 114E                     l4978 1116                     l4898 0CA4  
                   l4996 1184                     l4988 115E                     l4998 1188  
                   STR_1 0810                     STR_2 081C                     STR_3 0801  
                   STR_4 0822                     STR_5 082A                     STR_8 0826  
                   STR_9 082E                     u5000 29E8                     u5001 29E4  
                   u5010 2A22                     u5011 2A1E                     u5020 2A30  
                   u5021 2A2C                     u6000 225E                     u5200 1A26  
                   u6001 225A                     u5201 1A22                     u6010 228C  
                   u5210 1A36                     u5130 325C                     u6011 2288  
                   u5211 1A32                     u5131 3258                     u6100 34C6  
                   u6020 22C6                     u5300 1B82                     u5220 1A78  
                   u5140 326E                     u6101 34C2                     u6021 22C2  
                   u5221 1A74                     u5141 326A                     u6030 3326  
                   u6110 34E0                     u5310 1BAA                     u5230 1A8E  
                   u5150 3296                     u6031 3322                     u6111 34DC  
                   u5311 1BA6                     u5231 1A8A                     u5151 3292  
                   u6040 3340                     u6120 34FE                     u6200 2EF8  
                   u5400 1CE2                     u5320 1BC8                     u5240 1AA0  
                   u5160 32CC                     u7000 1140                     u6041 333C  
                   u6121 34FA                     u6201 2EF4                     u5401 1CDE  
                   u5321 1BC4                     u5241 1A9C                     u5161 32C8  
                   u7001 113C                     u5170 3902                     u6050 3366  
                   u6130 3514                     u6210 2F18                     u5410 1D18  
                   u5330 1BE8                     u5250 1AB0                     u7010 114E  
                   u6051 3362                     u6131 3510                     u6211 2F14  
                   u5411 1D14                     u5331 1BE4                     u5251 1AAC  
                   u7011 114A                     u5180 3912                     u6060 3384  
                   u6140 3538                     u6220 2F68                     u5500 1DE2  
                   u5420 1D28                     u5340 1BF6                     u5260 1AEC  
                   u6300 2E4C                     u7100 13B6                     u7020 11A6  
                   u5181 390E                     u6061 3380                     u6141 3534  
                   u6221 2F64                     u5501 1DDE                     u5421 1D24  
                   u5341 1BF2                     u5261 1AE8                     u6301 2E48  
                   u7101 13B2                     u7021 11A2                     u6070 33A0  
                   u6150 3578                     u6230 39F8                     u5510 1DFC  
                   u5430 1D54                     u5350 1C06                     u5270 1AFA  
                   u5190 1A14                     u6310 33E6                     u7110 13CE  
                   u7030 1278                     u6071 339C                     u6151 3574  
                   u6231 39F4                     u5511 1DF8                     u5431 1D50  
                   u5351 1C02                     u5271 1AF6                     u5191 1A10  
                   u6311 33E2                     u7111 13CA                     u7031 1274  
                   u7200 2D30                     u6080 33C6                     u6160 35B6  
                   u5520 1E36                     u5440 1D64                     u5360 1C38  
                   u5280 1B68                     u6240 2D7E                     u6400 3160  
                   u6320 3408                     u5600 39DC                     u7120 142C  
                   u7040 1294                     u5177 38F8                     u7201 2D2C  
                   u6081 33C2                     u6161 35B2                     u5521 1E32  
                   u5441 1D60                     u5361 1C34                     u5281 1B64  
                   u6241 2D7A                     u6401 315A                     u6321 3404  
                   u7121 1426                     u7041 1290                     u7210 2D42  
                   u6090 34AC                     u5610 22FE                     u6170 35EA  
                   u5530 1E48                     u5450 1D80                     u5370 1C46  
                   u5290 1B80                     u6250 2DB2                     u6410 3162  
                   u6330 345E                     u7130 142E                     u7050 12A6  
                   u7211 2D3E                     u6091 34A8                     u5611 22FA  
                   u6171 35E6                     u5531 1E44                     u5451 1D7C  
                   u5371 1C42                     u5291 1B7A                     u6331 345A  
                   u7051 12A2                     u5700 249E                     u5620 2310  
                   u6180 2E9C                     u5540 1E58                     u5460 1D90  
                   u5380 1C64                     u6260 2DE0                     u6340 346C  
                   u6420 381A                     u7140 1444                     u7060 12B4  
                   u7220 319E                     u7300 15BC                     u5701 249A  
                   u5621 230C                     u6181 2E98                     u5541 1E54  
                   u5461 1D8C                     u5381 1C60                     u6261 2DDC  
                   u6341 3468                     u7141 1440                     u7061 12B0  
                   u7221 319A                     u7301 15B6                     u7150 2C10  
                   u5710 24C8                     u5630 2320                     u6190 2EDA  
                   u5550 1E78                     u5470 1DA2                     u5390 1C9C  
                   u6270 2DF4                     u6350 30B6                     u6510 2782  
                   u6430 382C                     u7070 12EA                     u7230 31D0  
                   u7310 15BE                     u7151 2C0C                     u5711 24C4  
                   u5631 231C                     u6191 2ED6                     u5551 1E74  
                   u5471 1D9E                     u5391 1C98                     u6271 2DF0  
                   u6255 2DA8                     u6511 277E                     u6431 3828  
                   u7071 12E6                     u7231 31CC                     u6600 38C6  
                   u7160 2C46                     u5800 25C4                     u5720 24EC  
                   u5640 2364                     u5560 1E8A                     u5480 1DB8  
                   u6280 2E1C                     u6360 30D4                     u6520 27A6  
                   u6440 37A2                     u7080 1318                     u7240 31EC  
                   u7400 17AC                     u7320 15D4                     u6601 38C2  
                   u7161 2C42                     u5801 25C0                     u5721 24E8  
                   u5641 2360                     u5561 1E86                     u5481 1DB4  
                   u6281 2E18                     u6361 30D0                     u6505 272A  
                   u6441 379C                     u7081 1314                     u7241 31E8  
                   u7401 17A8                     u7321 15D0                     u4930 28A2  
                   u7170 2C62                     u5810 260C                     u5730 2502  
                   u5650 2376                     u5570 1EA6                     u5490 1DCE  
                   u6290 2E3C                     u6370 30FC                     u6530 27C2  
                   u6506 2734                     u6450 37A4                     u7090 139C  
                   u6610 085E                     u7250 31FE                     u7410 185A  
                   u7330 15F8                     u4931 289E                     u7171 2C5E  
                   u5811 2608                     u5731 24FE                     u5651 2372  
                   u5571 1EA2                     u5491 1DCA                     u6291 2E38  
                   u6371 30F8                     u6355 30AC                     u6531 27BE  
                   u6507 2744                     u6427 3810                     u7091 1398  
                   u6611 085A                     u7251 31FA                     u7411 1856  
                   u7331 15F4                     u4940 28B0                     u7180 2D18  
                   u5820 263C                     u5740 2520                     u5660 2386  
                   u5900 1F8E                     u6380 3126                     u6540 2816  
                   u5580 39A8                     u6460 37BA                     u6700 0A1A  
                   u6620 08AE                     u7260 3226                     u7420 18C2  
                   u7340 1632                     u4941 28AC                     u7181 2D12  
                   u5821 2638                     u5741 251C                     u5661 2382  
                   u5901 1F8A                     u6381 3122                     u6525 279C  
                   u5581 39A4                     u6461 37B6                     u6701 0A14  
                   u6621 08AA                     u7261 3222                     u7421 18BC  
                   u7341 162E                     u4950 290C                     u7190 2D1A  
                   u5830 266A                     u5750 2540                     u5670 23C6  
                   u5910 1F9E                     u6550 2832                     u6470 26C6  
                   u5590 39DA                     u6710 0A1C                     u6630 08BC  
                   u7430 18C4                     u7350 16DC                     u7270 14B4  
                   u4951 2908                     u5831 2666                     u5751 253C  
                   u5671 23C2                     u5911 1F9A                     u6551 282E  
                   u5591 39D4                     u6631 08B8                     u7351 16D6  
                   u7271 14B0                     u4960 2962                     u5760 2552  
                   u5680 2406                     u5920 2118                     u5840 1ED4  
                   u6560 286E                     u6480 26F4                     u6800 0C52  
                   u6720 0A32                     u6640 08CE                     u7440 18DA  
                   u7360 16DE                     u7280 14FA                     u4961 295E  
                   u5761 254E                     u5681 2402                     u5841 1ED0  
                   u6561 286A                     u6545 280C                     u6481 26F0  
                   u6801 0C4E                     u6721 0A2E                     u6641 08CA  
                   u7441 18D6                     u7281 14F6                     u4970 29AC  
                   u6570 3A4A                     u5770 2580                     u5690 247C  
                   u5930 2172                     u5850 1EE6                     u6490 2716  
                   u6810 0C6E                     u6730 0AB6                     u6650 0916  
                   u7450 1976                     u7370 16F4                     u7290 153E  
                   u4971 29A8                     u6571 3A44                     u5771 257C  
                   u5691 2478                     u5931 216E                     u5851 1EE2  
                   u6395 3138                     u6491 2712                     u6475 26BC  
                   u6811 0C6A                     u6731 0AB2                     u6651 0912  
                   u7451 1972                     u7371 16F0                     u7291 153A  
                   u7507 2B5C                     i2l76 3690                     u4980 29CA  
                   u6580 3A4C                     u5780 2596                     u5940 2192  
                   u5860 1EF6                     u6900 0EE6                     u6820 0CA4  
                   u6740 0B4A                     u6660 0946                     u7380 1726  
                   u7460 3768                     u4981 29C6                     u7517 3AE2  
                   u5781 2592                     u5941 218E                     u5925 210E  
                   u5861 1EF2                     u6901 0EE2                     u6821 0CA0  
                   u6741 0B46                     u6661 0940                     u7381 1722  
                   u7461 3764                     u4990 29DA                     u7470 36E0  
                   u6590 3898                     u5790 25AA                     u5950 21A4  
                   u5870 1F36                     u6910 0F2E                     u6830 0CCA  
                   u6750 0BBC                     u6670 0948                     u7390 1768  
                   u4991 29D6                     u7527 3AFC                     u6591 3894  
                   u5791 25A6                     u5951 21A0                     u5871 1F32  
                   u6911 0F2A                     u6831 0CC6                     u6751 0BB8  
                   u7391 1764                     u7480 370E                     u5960 21D2  
                   u5880 1F48                     u6920 0F3E                     u6840 0CDC  
                   u6760 0BE2                     u6680 095E                     u7481 370A  
                   u5961 21CE                     u5881 1F44                     u6921 0F3A  
                   u6841 0CD8                     u6761 0BDE                     u6681 095A  
                   u5970 21E8                     u5890 1F58                     u6930 0FD8  
                   u6850 0CEA                     u6770 0BF4                     u6690 09EA  
                   u7490 2A8C                     u5971 21E4                     u5891 1F54  
                   u6931 0FD4                     u6851 0CE6                     u6771 0BF0  
                   u6691 09E6                     u7491 2A88                     u5980 21FC  
                   u6940 1026                     u6860 0D00                     u6780 0C16  
                   u7477 36D6                     u5981 21F8                     u6941 1022  
                   u6861 0CFC                     u6781 0C12                     u5990 2216  
                   u6950 104E                     u6870 0D0E                     u6790 0C3C  
                   u5991 2212                     u6951 104A                     u6871 0D0A  
                   u6791 0C38                     u6960 10F0                     u6880 0D38  
                   u6961 10EC                     u6881 0D34                     u6970 1104  
                   u6890 0E80                     u6971 1100                     u6891 0E7C  
                   u6980 1116                     u6981 1112                     u6990 1124  
                   u6991 1120             i2___flge@ff1 0001             i2___flge@ff2 0005  
                   _dbuf 0100                     _atoi 2BD8                     _main 2A44  
                   _prec 004E                     _nout 00DC                     pad@i 0024  
                   pad@p 0021                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 0026                     fsr2l 000FD9                     btemp 0052  
          ___fpclassifyf 3076                     prodh 000FF4                     prodl 000FF3  
                   start 000E          ___fldiv@new_exp 001E             _tolower$1086 0019  
           ___param_bank 000000                    ??_pad 0023                    ??_isr 000D  
          ___fltol@sign1 0015                    ?_atoi 0014          __end_of___fladd 1EBA  
                  ?_main 0001          __end_of___fldiv 267E          __end_of___awdiv 33D8  
        __end_of___flneg 3A1A                    STR_12 0832                    STR_14 0832  
        __end_of___awmod 354A          __end_of___flmul 22E4          __end_of___flsub 3966  
        __end_of___fltol 2E6E          ___awdiv@divisor 000F                    i2l360 3074  
                  i2l355 302E          ___awdiv@counter 0011             vfpfcnvrt@fmt 00A6  
                  _TMR0L 000FD6                    _PORTC 000F82                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _flags 0050                    _fputc 324A  
                  _fputs 3966          __end_of_isdigit 3A52                    atoi@n 0021  
                  pad@fp 001D                    atoi@s 0014                    _width 004C  
                  _putch 3B16          __end_of_isspace 38D2          __end_of_isupper 39E2  
       __end_ofi2___flge 3076                    tablat 000FF5                    ttemp5 0053  
                  ttemp6 0056                    ttemp7 005A             ?_imprime_lcd 0011  
                  status 000FD8                    wtemp8 0053          __end_of_sprintf 3880  
         ?___fpclassifyf 000D          __end_of_tolower 37D2          __end_of_strncmp 324A  
        __initialization 3A52             __end_of_atoi 2D68             __end_of_main 2BD8  
                 ??_atoi 0016                   ??_main 00D2            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   ?_fputc 000D  
                 ?_fputs 0016                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 000D                   ?_putch 0001                   i2l3910 2FDE  
                 i2l3920 306C                   i2l3912 2FEE                   i2l3904 2F72  
                 i2l3922 3072                   i2l3914 2FFC                   i2l3906 2FA0  
                 i2l3930 3606                   i2l3916 300E                   i2l3908 2FB0  
                 i2l3940 368A                   i2l3932 3618                   i2l3918 301C  
                 i2l3942 368E                   i2l3934 3626                   i2l3926 35F6  
                 i2l3936 3634                   i2l3928 3604                   i2l3938 3666  
       __end_of_dado_lcd 3B08         __end_of___xxtofl 2A44     __size_of_comando_lcd 001A  
           vfprintf@cfmt 0046                   ___flge 2E6E                   ___fleq 354A  
              ??___fladd 0015                   ___wmul 3AAE                ??___fldiv 0015  
              ??___awdiv 0011                ??___flneg 0011                ??___awmod 0011  
              ??___flmul 0029                ??___flsub 0042                ??___fltol 0011  
                 _efgtoa 0836                   _floorf 267E                   clear_0 3A58  
                 clear_1 3A64                   clear_2 3A70         ___awdiv@quotient 0013  
        ___awmod@divisor 000F                   isa$std 000001                   _tensao 00E8  
        ___awmod@counter 0011                   pad@buf 001F                   _strcpy 37D2  
                 _strlen 38D2                   fputc@c 000D                   fputs@c 001A  
                 fputs@i 001B                   fputs@s 0016                ??_isdigit 000F  
       __end_of_setupADC 3AAE          ___fpclassifyf@e 0015          ___fpclassifyf@u 0017  
        ___fpclassifyf@x 000D             __mediumconst 0000                ??_isspace 000F  
                 tblptrh 000FF7                ??_isupper 000F                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3772  
              ??_sprintf 0048                ??_tolower 0015                ??_strncmp 0013  
             ___flge@ff1 003A               ___flge@ff2 003E          ??___fpclassifyf 0011  
           ___xxtofl@arg 001D             ___xxtofl@exp 001C             ___xxtofl@val 0013  
             ___fleq@ff1 000D               ___fleq@ff2 0011               __accesstop 0060  
__end_of__initialization 3A76               ___flneg@f1 000D            ___rparam_used 000001  
             ___fltol@f1 000D           __pcstackCOMRAM 0001            __end_of_fputc 3314  
          __end_of_fputs 39AA            __end_of_putch 3B18                ?i2___flge 0001  
                ??_fputc 0011                  ??_fputs 001A                  ??_putch 000D  
             __pbssBANK0 00D4               __pbssBANK1 0100     __size_of_imprime_lcd 007C  
     __size_of_limpa_lcd 000E               _efgtoa$932 0070               _efgtoa$926 006C  
             _efgtoa$927 006E               _efgtoa$936 0072               _efgtoa$937 0074  
             _efgtoa$938 0076                  ?___flge 003A                  ?___fleq 000D  
                ?___wmul 000D                  ?_efgtoa 0060                  ?_floorf 0026  
             ??i2___flge 0009                  ?_strcpy 000D                  ?_strlen 000D  
              ?_dado_lcd 000D                ?___xxtofl 0013       __size_of_vfpfcnvrt 056A  
                __Hparam 0000                  __Lparam 0000                ?_setupADC 0001  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 19FA  
                ___fldiv 22E4                  ___awdiv 3314                  ___flneg 39E2  
                ___awmod 349A                  ___flmul 1EBA                  ___flsub 3920  
                ___fltol 2D68          __size_of___wmul 0026                ?_vfprintf 00BC  
           __psmallconst 0800          __size_of_efgtoa 0C5A          __size_of_floorf 0212  
                __pcinit 3A52                  __ramtop 0800                  __ptext0 2A44  
                __ptext1 382E                  __ptext2 3710                  __ptext3 1490  
                __ptext4 3174                  __ptext5 0836                  __ptext6 3772  
                __ptext7 39AA                  __ptext8 37D2                  __ptext9 33D8  
        __size_of_strcpy 005C          __size_of_strlen 004E               ??_dado_lcd 000F  
           __size_of_pad 00C2                  _isdigit 3A1A             __size_of_isr 368C  
             ??___xxtofl 0017         ___awmod@dividend 000D        __end_of_limpa_lcd 3B16  
                _isspace 3880                  _isupper 39AA                  efgtoa@c 0066  
                efgtoa@d 0084                  efgtoa@e 009C                  efgtoa@f 0062  
                efgtoa@g 0098                  efgtoa@h 008E                  efgtoa@i 0096  
                efgtoa@l 0092                  efgtoa@m 007E                  efgtoa@n 009E  
                efgtoa@p 0088                  efgtoa@t 0078                  efgtoa@u 00A0  
                efgtoa@w 008A                  atoi@neg 001A                  _sprintf 382E  
                _tolower 3772                  _strncmp 3174           __pintcode_body 35F4  
   end_of_initialization 3A76                  floorf@e 0034                  floorf@m 0030  
                floorf@u 0036                  floorf@x 0026                  fputc@fp 000F  
          __Lmediumconst 0000                  int_func 35F4                  fputs@fp 0018  
      __end_of_vfpfcnvrt 19FA               ??_setupADC 000D               efgtoa@mode 008D  
             efgtoa@sign 0086                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0046  
                strcpy@d 0015                  strlen@a 000F                  strcpy@s 0013  
                strlen@s 000D                _PORTEbits 000F84        imprime_lcd@indice 0018  
            ___fladd@grs 001C            ___xxtofl@sign 001B              ___fldiv@grs 0020  
            ___fldiv@rem 0019              ___flmul@grs 002F             dado_lcd@dado 000D  
          ??_comando_lcd 000F           __end_of___flge 2F72           __end_of___fleq 35F4  
            vfpfcnvrt@ap 00A8              vfpfcnvrt@ct 00B8              vfpfcnvrt@fp 00A4  
         __end_of___wmul 3AD4           __end_of_efgtoa 1490           __end_of_floorf 2890  
             floorf@F527 00D4           __end_of_strcpy 382E           __end_of_strlen 3920  
      __size_ofi2___flge 0104      start_initialization 3A52              __end_of_pad 349A  
            __end_of_isr 3694    __end_of___fpclassifyf 3174              vfprintf@fmt 00BE  
               ??___flge 0042                 ??___fleq 0015      __end_of_comando_lcd 3AEE  
               ??___wmul 0011                 ??_efgtoa 0067                 ??_floorf 002A  
               ??_strcpy 0011                 ??_strlen 000F                ___fladd@a 0011  
              ___fladd@b 000D                ___fldiv@a 0011                ___fldiv@b 000D  
              ___flmul@a 0025                ___flmul@b 0021              __pbssCOMRAM 0048  
              ___flsub@a 003E                ___flsub@b 003A            __pcstackBANK0 0060  
      __size_of_dado_lcd 001A        __size_of___xxtofl 01B4            ??_imprime_lcd 0013  
     comando_lcd@comando 000D                __pintcode 0008                 ?___fladd 000D  
               ?___fldiv 000D                 ?___awdiv 000D                 ?___flneg 000D  
               ?___awmod 000D                 ?___flmul 0021                 ?___flsub 003A  
               ?___fltol 000D        __size_of_setupADC 002A        __size_of_vfprintf 0062  
            __smallconst 0800                 ?_isdigit 000D                 ?_isspace 000D  
               ?_isupper 000D                 ?_sprintf 00C2                 ?_tolower 0013  
         __size_of_fputc 00CA           __size_of_fputs 0044                 ?_strncmp 000D  
              _limpa_lcd 3B08           __size_of_putch 0002           ___wmul@product 0011  
            _comando_lcd 3AD4                 i2u510_40 3634                 i2u510_41 3630  
               i2u503_40 2FA0                 i2u511_40 3666                 i2u503_41 2F9C  
               i2u511_41 3662                 i2u504_40 2FDE                 i2u504_41 2FDA  
               i2u505_40 2FFC                 i2u505_41 2FF8                 i2u506_40 301C  
               i2u506_41 3018                 i2u507_40 306C                 i2u507_41 3068  
               i2u508_40 3604                 i2u508_41 3600                 i2u509_40 3626  
               i2u509_41 3622      __end_of_imprime_lcd 3710         imprime_lcd@frase 0011  
              _vfpfcnvrt 1490               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
               i2___flge 2F72        ___wmul@multiplier 000D             _isspace$1022 0013  
             vfpfcnvrt@c 00BB               vfpfcnvrt@f 00B4              _INTCON3bits 000FF0  
             ?_limpa_lcd 0001                 __Hrparam 0000               vfprintf@ap 00C0  
               __Lrparam 0000               vfprintf@fp 00BC         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106               ?_vfpfcnvrt 00A4       ___fpclassifyf@F465 00D8  
               _dado_lcd 3AEE               sprintf@fmt 00C4                 ___xxtofl 2890  
               _atoi$991 001C                 _atoi$992 0020                 _atoi$993 001E  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 3966  
               __ptext11 324A                 __ptext20 2E6E                 __ptext12 3B16  
               __ptext21 354A                 __ptext13 267E                 __ptext30 3B08  
               __ptext22 22E4                 __ptext14 3076                 __ptext31 3AD4  
               __ptext23 349A                 __ptext15 2D68                 __ptext32 3694  
               __ptext24 3314                 __ptext16 3920                 __ptext33 38D2  
               __ptext25 2BD8                 __ptext17 19FA                 __ptext34 3AEE  
               __ptext26 3880                 __ptext18 39E2                 __ptext35 2890  
               __ptext27 3A1A                 __ptext19 1EBA                 __ptext28 3AAE  
               __ptext37 2F72                 __ptext29 3A84         __size_of_isupper 0038  
               _contador 00EC         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 000D         __size_of_strncmp 00D6              _imprime_lcd 3694  
          __size_of_atoi 0190            __size_of_main 0194                 efgtoa@fp 0060  
               efgtoa@ne 007C                 efgtoa@pp 007A                 efgtoa@ou 0080  
               _setupADC 3A84                 _tempdisp 00DE                 isa$xinst 000000  
               int$flags 0052                 _vfprintf 3710               _INTCONbits 000FF2  
               isdigit@c 000D              ??_limpa_lcd 0010                 intlevel2 0000  
              sprintf@ap 00CA                 isspace@c 000D                strcpy@src 000F  
               isupper@c 000D                strncmp@_l 000D                strncmp@_r 000F  
            efgtoa@nmode 008C              ??_vfpfcnvrt 00AA            _vfpfcnvrt$952 00AE  
          _vfpfcnvrt$953 00B0            _vfpfcnvrt$957 00B2              _temperatura 0048  
            _temperature 00E0                 sprintf@f 00CC                 tolower@c 0013  
               sprintf@s 00C2   __size_of___fpclassifyf 00FE                 strncmp@l 0014  
               strncmp@n 0011                 strncmp@r 0016            ___fladd@signs 0019  
     imprime_lcd@tamanho 0016             ___fladd@aexp 001A             ___fladd@bexp 001B  
           ?_comando_lcd 000D  
